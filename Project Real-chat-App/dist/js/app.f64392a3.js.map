{"version":3,"file":"js/app.f64392a3.js","mappings":"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","sources":["webpack://chatting/./src/App.vue","webpack://chatting/./src/App.vue?7ccd","webpack://chatting/./src/views/HomeView.vue","webpack://chatting/./src/views/HomeView.vue?1da1","webpack://chatting/./src/views/Login.vue","webpack://chatting/./src/views/Login.vue?240b","webpack://chatting/./src/views/SignUp.vue","webpack://chatting/./src/views/SignUp.vue?9d2a","webpack://chatting/./src/components/Forum.vue","webpack://chatting/./src/components/singleDisc.vue","webpack://chatting/./src/components/singleDisc.vue?1cdb","webpack://chatting/./src/components/Responses.vue","webpack://chatting/./src/components/Responses.vue?9990","webpack://chatting/./src/components/Forum.vue?b9d2","webpack://chatting/./src/components/ProfilePage.vue","webpack://chatting/./src/components/ProfilePage.vue?2c4a","webpack://chatting/./src/components/ForgotPage.vue","webpack://chatting/./src/components/ForgotPage.vue?184f","webpack://chatting/./src/components/forumPage.vue","webpack://chatting/./src/components/forumPage.vue?4c73","webpack://chatting/./src/router/index.js","webpack://chatting/./src/main.js","webpack://chatting/webpack/bootstrap","webpack://chatting/webpack/runtime/chunk loaded","webpack://chatting/webpack/runtime/compat get default export","webpack://chatting/webpack/runtime/define property getters","webpack://chatting/webpack/runtime/global","webpack://chatting/webpack/runtime/hasOwnProperty shorthand","webpack://chatting/webpack/runtime/jsonp chunk loading","webpack://chatting/webpack/startup"],"sourcesContent":["<template>\n<router-view/>\n \n</template>\n\n<script>\nexport default {\n  name: 'App',\n  \n \n  \n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./App.vue?vue&type=template&id=38a96d76\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"welcome-page\">\n    <div class=\"welcome-content\">\n      <div class=\"welcome-text\">\n        <h1 class=\"welcome-heading\">Bienvenue sur ChitChat</h1>\n        <p class=\"welcome-tagline\">Connectez-vous, discutez et communiquez facilement</p>\n        <div class=\"welcome-line\"></div>\n      </div>\n      \n      <div class=\"hero-section\">\n        <div class=\"features-column\">\n          <div class=\"feature-card\">\n            <div class=\"icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feature-icon\">\n                <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n              </svg>\n            </div>\n            <h3>Messagerie instantanée</h3>\n            <p>Discutez avec vos amis en temps réel</p>\n          </div>\n          \n          <div class=\"feature-card\">\n            <div class=\"icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feature-icon\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\n                <path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>\n              </svg>\n            </div>\n            <h3>Communauté mondiale</h3>\n            <p>Connectez-vous avec des personnes du monde entier</p>\n          </div>\n        </div>\n        \n        <!-- Affichage dynamique du téléphone -->\n        <div class=\"phone-container\">\n          <div class=\"phone-frame\">\n            <div class=\"phone-header\">\n              <div class=\"phone-notch\"></div>\n            </div>\n            <div class=\"phone-screen\">\n              <div class=\"app-header\">\n                <div class=\"app-title\">ChitChat</div>\n              </div>\n              <div class=\"message-container\">\n                <div class=\"message received\">\n                  <div class=\"message-content\">Salut ! Comment ça va ?</div>\n                  <div class=\"message-time\">10:24</div>\n                </div>\n                <div class=\"message sent\">\n                  <div class=\"message-content\">Je vais super bien ! Je teste juste cette nouvelle application ChitChat.</div>\n                  <div class=\"message-time\">10:25</div>\n                </div>\n                <div class=\"message received message-typing\">\n                  <div class=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"message-input\">\n                <input type=\"text\" placeholder=\"Tapez un message...\" readonly />\n                <button class=\"send-button\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n                    <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"features-column\">\n          <div class=\"feature-card\">\n            <div class=\"icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feature-icon\">\n                <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n              </svg>\n            </div>\n            <h3>Conversations sécurisées</h3>\n            <p>Chiffrement de bout en bout pour votre confidentialité</p>\n          </div>\n          \n          <div class=\"feature-card\">\n            <div class=\"icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feature-icon\">\n                <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect>\n                <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>\n                <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>\n              </svg>\n            </div>\n            <h3>Partage de médias</h3>\n            <p>Partagez instantanément des photos et des vidéos</p>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"cta-container\">\n        <router-link to=\"/login\" class=\"cta-button primary\">Commencer</router-link>\n        <button class=\"cta-button secondary\">En savoir plus</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: 'WelcomePage',\n  mounted() {\n    // Trigger the animation after the component is mounted\n    setTimeout(() => {\n      const messages = document.querySelectorAll('.welcome-page .message');\n      messages.forEach((message, index) => {\n        setTimeout(() => {\n          message.classList.add('visible');\n        }, index * 1000);\n      });\n    }, 500);\n  }\n}\n</script>\n\n<style scoped>\n/* Scoped CSS to ensure these styles only apply to this component */\n.welcome-page {\n  --primary-color: #3a6ea5;\n  --secondary-color: #f0f4f8;\n  --accent-color: #6c9bcf;\n  --text-color: #333;\n  --background-color: #ffffff;\n  --shadow-color: rgba(0, 0, 0, 0.08);\n  --gradient-start: #f8f9fa;\n  --gradient-end: #e9ecef;\n  --card-bg: #ffffff;\n  --phone-frame: #222222;\n  --phone-screen: #f5f5f5;\n  --message-sent: #3a6ea5;\n  --message-received: #e9ecef;\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 2rem;\n  background: linear-gradient(135deg, var(--gradient-start) 0%, var(--gradient-end) 100%);\n  font-family: 'Inter', 'Helvetica Neue', sans-serif;\n  color: var(--text-color);\n}\n\n.welcome-content {\n  max-width: 1200px;\n  width: 100%;\n}\n\n.welcome-text {\n  text-align: center;\n  margin-bottom: 3rem;\n}\n\n.welcome-heading {\n  font-size: 3.5rem;\n  font-weight: 700;\n  color: var(--primary-color);\n  margin-bottom: 1rem;\n  letter-spacing: -0.5px;\n}\n\n.welcome-tagline {\n  font-size: 1.5rem;\n  font-weight: 400;\n  color: var(--text-color);\n  margin-bottom: 1.5rem;\n}\n\n.welcome-line {\n  height: 4px;\n  width: 80px;\n  background-color: var(--accent-color);\n  margin: 0 auto;\n  border-radius: 2px;\n}\n\n/* Hero section with phone */\n.hero-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 3rem;\n}\n\n.features-column {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 24%;\n}\n\n/* Phone styling */\n.phone-container {\n  width: 48%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: float 6s ease-in-out infinite;\n}\n\n@keyframes float {\n  0% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-15px);\n  }\n  100% {\n    transform: translateY(0px);\n  }\n}\n\n.phone-frame {\n  width: 280px;\n  height: 560px;\n  background-color: var(--phone-frame);\n  border-radius: 36px;\n  padding: 12px;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);\n  position: relative;\n  overflow: hidden;\n}\n\n.phone-header {\n  width: 100%;\n  height: 24px;\n  position: relative;\n  z-index: 2;\n}\n\n.phone-notch {\n  width: 120px;\n  height: 24px;\n  background-color: var(--phone-frame);\n  border-radius: 0 0 12px 12px;\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 3;\n}\n\n.phone-screen {\n  width: 100%;\n  height: calc(100% - 24px);\n  background-color: var(--phone-screen);\n  border-radius: 24px;\n  overflow: hidden;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.app-header {\n  height: 60px;\n  background-color: var(--primary-color);\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  position: relative;\n}\n\n.app-title {\n  color: white;\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.message-container {\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.message {\n  max-width: 75%;\n  padding: 12px;\n  border-radius: 18px;\n  position: relative;\n  opacity: 0;\n  transform: translateY(20px);\n  transition: opacity 0.5s ease, transform 0.5s ease;\n}\n\n.message.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.message.received {\n  align-self: flex-start;\n  background-color: var(--message-received);\n  border-bottom-left-radius: 4px;\n}\n\n.message.sent {\n  align-self: flex-end;\n  background-color: var(--message-sent);\n  color: white;\n  border-bottom-right-radius: 4px;\n}\n\n.message-content {\n  font-size: 0.9rem;\n  line-height: 1.4;\n  margin-bottom: 4px;\n}\n\n.message-time {\n  font-size: 0.7rem;\n  opacity: 0.7;\n  text-align: right;\n}\n\n.message-typing {\n  padding: 16px;\n}\n\n.typing-indicator {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.typing-indicator span {\n  width: 8px;\n  height: 8px;\n  background-color: #999;\n  border-radius: 50%;\n  display: inline-block;\n  animation: bounce 1.3s ease infinite;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.15s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.3s;\n}\n\n@keyframes bounce {\n  0%, 60%, 100% {\n    transform: translateY(0);\n  }\n  30% {\n    transform: translateY(-4px);\n  }\n}\n\n.message-input {\n  display: flex;\n  padding: 12px;\n  background-color: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.message-input input {\n  flex: 1;\n  padding: 10px 16px;\n  border: none;\n  border-radius: 24px;\n  background-color: var(--secondary-color);\n  font-size: 0.9rem;\n}\n\n.message-input input:focus {\n  outline: none;\n}\n\n.send-button {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  border: none;\n  margin-left: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.send-button svg {\n  width: 20px;\n  height: 20px;\n  color: white;\n}\n\n/* Feature cards */\n.feature-card {\n  background-color: var(--card-bg);\n  padding: 1.5rem;\n  border-radius: 12px;\n  box-shadow: 0 5px 20px var(--shadow-color);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  text-align: center;\n}\n\n.feature-card:hover {\n  transform: translateY(-10px);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n}\n\n.icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60px;\n  height: 60px;\n  background-color: var(--secondary-color);\n  border-radius: 50%;\n  margin: 0 auto 1rem;\n}\n\n.feature-icon {\n  width: 30px;\n  height: 30px;\n  color: var(--primary-color);\n}\n\n.feature-card h3 {\n  font-size: 1.2rem;\n  margin-bottom: 0.6rem;\n  color: var(--primary-color);\n}\n\n.feature-card p {\n  color: var(--text-color);\n  font-size: 0.9rem;\n  line-height: 1.5;\n}\n\n.cta-container {\n  display: flex;\n  justify-content: center;\n  gap: 1.5rem;\n  margin-top: 2rem;\n}\n\n.cta-button {\n  padding: 1rem 2rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n}\n\n.primary {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.primary:hover {\n  background-color: #2c5580;\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(58, 110, 165, 0.3);\n}\n\n.secondary {\n  background-color: var(--secondary-color);\n  color: var(--primary-color);\n}\n\n.secondary:hover {\n  background-color: #e2e9f0;\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px var(--shadow-color);\n}\n\n@media (max-width: 1024px) {\n  .hero-section {\n    flex-direction: column;\n    gap: 3rem;\n  }\n  \n  .features-column {\n    width: 100%;\n    flex-direction: row;\n    justify-content: center;\n    gap: 1.5rem;\n  }\n  \n  .feature-card {\n    width: 45%;\n  }\n  \n  .phone-container {\n    width: 100%;\n    order: -1;\n  }\n}\n\n@media (max-width: 768px) {\n  .welcome-heading {\n    font-size: 2.8rem;\n  }\n  \n  .welcome-tagline {\n    font-size: 1.2rem;\n  }\n  \n  .features-column {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .feature-card {\n    width: 100%;\n    max-width: 320px;\n  }\n  \n  .cta-container {\n    flex-direction: column;\n    width: 100%;\n    max-width: 300px;\n    margin: 2rem auto;\n  }\n  \n  .cta-button {\n    width: 100%;\n  }\n}\n</style>","import { render } from \"./HomeView.vue?vue&type=template&id=7db771de&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=7db771de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7db771de\"]])\n\nexport default __exports__","<template>\n  <div class=\"login-container\">\n    <h1 class=\"app-title\">Bienvenue sur notre ChatAPP</h1>\n    <div class=\"login-form\">\n      <input \n        type=\"email\" \n        placeholder=\"Adresse e-mail\" \n        v-model=\"email\"\n        class=\"input-field\">\n      <input \n        type=\"password\" \n        placeholder=\"Entrez votre mot de passe\" \n        v-model=\"password\"\n        class=\"input-field\">\n      <button @click=\"login\" class=\"login-button\">Se connecter</button>\n      <div class=\"auth-links\">\n        <p class=\"no-account\">Vous n'avez pas de compte ?</p>\n        <router-link to=\"/signup\" class=\"signup-link\">S'inscrire</router-link>\n        <router-link to=\"/forgot\" class=\"forgot-link\">Mot de passe oublié ?</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore, doc, updateDoc } from \"firebase/firestore\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const auth = getAuth();\n        const userCredential = await signInWithEmailAndPassword(auth, this.email, this.password);\n        const userId = userCredential.user.uid;\n        \n        // Update the user's isOnline status to true\n        const db = getFirestore();\n        await updateDoc(doc(db, 'users', userId), {\n          isOnline: true\n        });\n        \n        this.$router.push(`/forum/${userId}`);\n      } catch (error) {\n        console.error(\"Login error:\", error);\n        alert(\"Login failed: \" + error.message);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #f7f8fa;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n}\n\n.app-title {\n  font-size: 28px;\n  color: #333;\n  margin-bottom: 32px;\n  font-weight: 500;\n}\n\n.login-form {\n  background-color: white;\n  padding: 40px;\n  border-radius: 12px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.input-field {\n  padding: 14px 16px;\n  margin-bottom: 16px;\n  border: 1px solid #e1e4e8;\n  border-radius: 6px;\n  font-size: 16px;\n  transition: border-color 0.2s ease;\n}\n\n.input-field:focus {\n  border-color: #4a6cf7;\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.1);\n}\n\n.login-button {\n  padding: 14px 20px;\n  background-color:  #3a6ea5;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  margin-top: 8px;\n}\n\n.login-button:hover {\n  background-color: #3a5cf5;\n}\n\n.auth-links {\n  margin-top: 24px;\n  text-align: center;\n}\n\n.no-account {\n  color: #666;\n  margin-bottom: 8px;\n}\n\n.signup-link, .forgot-link {\n  display: block;\n  color:  #3a6ea5;\n  text-decoration: none;\n  margin: 8px 0;\n  font-weight: 500;\n  transition: color 0.2s ease;\n}\n\n.signup-link:hover, .forgot-link:hover {\n  color: #3a5cf5;\n  text-decoration: underline;\n}\n</style>","import { render } from \"./Login.vue?vue&type=template&id=29560894&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=29560894&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-29560894\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"signup-container\">\r\n    <h1 class=\"page-title\">Page d'inscription</h1>\r\n    <div class=\"signup-form\">\r\n      <input \r\n        type=\"email\" \r\n        placeholder=\"entrez votre e-mail\" \r\n        v-model=\"Email\"\r\n        class=\"input-field\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"entrez votre prénom\" \r\n        v-model=\"FirstName\"\r\n        class=\"input-field\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"entrez votre nom\" \r\n        v-model=\"LastName\"\r\n        class=\"input-field\">\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"entrez votre mot de passe\" \r\n        v-model=\"Password\"\r\n        class=\"input-field\">\r\n      <button @click=\"Signup\" class=\"signup-button\">S'inscrire</button>\r\n      <div class=\"login-link-container\">\r\n        <router-link to=\"/login\" class=\"login-link\">Vous avez déjà un compte ? Se connecter</router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { getFirestore, doc, setDoc, serverTimestamp } from \"firebase/firestore\";\r\n\r\nexport default {\r\n  name: \"SignUp\",\r\n  data() {\r\n    return {\r\n      FirstName: \"\",\r\n      LastName: \"\",\r\n      Password: \"\",\r\n      Email: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    isUM6PEmail(email) {\r\n      return email.toLowerCase().endsWith('@um6p.ma');\r\n    },\r\n    async Signup() {\r\n      try {\r\n        if (this.isUM6PEmail(this.Email)) {\r\n          const auth = getAuth();\r\n          const db = getFirestore();\r\n          const userCredential = await createUserWithEmailAndPassword(\r\n            auth,\r\n            this.Email,\r\n            this.Password\r\n          );\r\n          const userId = userCredential.user.uid;\r\n          \r\n          await setDoc(doc(db, 'users', userId), {\r\n            FirstName: this.FirstName,\r\n            LastName: this.LastName,\r\n            Email: this.Email,\r\n            isOnline: true,\r\n            createdAt: serverTimestamp()\r\n          });\r\n          \r\n          this.$router.push(`/forum/${userId}`);\r\n        } else {\r\n          alert(\"The Email should be in um6p domain\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Signup error:\", error);\r\n        \r\n        if (error.code === 'auth/email-already-in-use') {\r\n          alert(\"This email is already registered. Please use a different email or login instead.\");\r\n        } else {\r\n          alert(\"Signup failed: \" + error.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.signup-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-color: #f7f8fa;\r\n  font-family: 'Helvetica Neue', Arial, sans-serif;\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  font-size: 28px;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-weight: 500;\r\n}\r\n\r\n.signup-form {\r\n  background-color: white;\r\n  padding: 40px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.input-field {\r\n  padding: 14px 16px;\r\n  margin-bottom: 16px;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  transition: border-color 0.2s ease;\r\n}\r\n\r\n.input-field:focus {\r\n  border-color: #4a6cf7;\r\n  outline: none;\r\n  box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.1);\r\n}\r\n\r\n.signup-button {\r\n  padding: 14px 20px;\r\n  background-color:  #3a6ea5;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  margin-top: 8px;\r\n}\r\n\r\n.signup-button:hover {\r\n  background-color: #3a5cf5;\r\n}\r\n\r\n.login-link-container {\r\n  margin-top: 24px;\r\n  text-align: center;\r\n}\r\n\r\n.login-link {\r\n  color: #4a6cf7;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color 0.2s ease;\r\n}\r\n\r\n.login-link:hover {\r\n  color: #3a5cf5;\r\n  text-decoration: underline;\r\n}\r\n</style>","import { render } from \"./SignUp.vue?vue&type=template&id=6fd4fba0&scoped=true\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js\"\n\nimport \"./SignUp.vue?vue&type=style&index=0&id=6fd4fba0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6fd4fba0\"]])\n\nexport default __exports__","<template>\n  <div class=\"forum-layout\">\n    <!-- Top Navigation Bar -->\n    <div class=\"top-nav\">\n      <div class=\"user-info\">\n        <router-link :to=\"`/profile/${userId}`\" class=\"profile-link\">\n          <img :src=\"profileImageUrl || '/api/placeholder/32/32'\" alt=\"Profile\" class=\"profile-image\" />\n          <span class=\"username\">{{ FirstName }} {{ LastName }}</span>\n          <span class=\"status-dot\" :class=\"{ 'online': isOnline }\"></span>\n        </router-link>\n      </div>\n      <button @click=\"logout\" class=\"logout-btn\">Déconnexion</button>\n    </div>\n    \n    <div class=\"forum-content\">\n      <div class=\"left-panel\">\n        <!-- Create Discussion Buttons -->\n        <div class=\"create-buttons\">\n          <button @click=\"openCreatePrivateDialog\" class=\"create-button private-btn\">\n            <span class=\"icon\">+</span> Créer une discussion privée\n          </button>\n          <button @click=\"openCreatePublicDialog\" class=\"create-button public-btn\">\n            <span class=\"icon\">+</span> Créer une discussion publique\n          </button>\n        </div>\n        \n        <!-- Filter Buttons -->\n        <div class=\"filter-buttons\">\n          <button @click=\"showAll\" :class=\"{ active: filterType === 'all' }\">Tous</button>\n          <button @click=\"showPrivate\" :class=\"{ active: filterType === 'private' }\">Privés</button>\n          <button @click=\"showPublic\" :class=\"{ active: filterType === 'public' }\">Publics</button>\n        </div>\n        \n        <!-- Discussions List -->\n        <SingleDisc\n          v-for=\"disc in filteredDiscussions\"\n          :key=\"disc.id\"\n          :discussion-id=\"disc.id\"\n          :is-participant=\"isParticipant(disc)\"\n          :is-active=\"currentDiscussionId === disc.id\"\n          :creator-pic=\"disc.creatorPic\"\n          @view-discussion=\"handleViewDiscussion\"\n          @join-discussion=\"joinDiscussion\"\n          @leave-discussion=\"leaveDiscussion\"\n        />\n      </div>\n      \n      <div class=\"right-panel\" v-if=\"currentDiscussionId && canViewDiscussion\">\n        <Responses \n          :discussionId=\"currentDiscussionId\"\n          @hide-discussion=\"hideDiscussion\"\n        />\n      </div>\n      <div v-else-if=\"currentDiscussionId && !canViewDiscussion\" class=\"right-panel join-prompt\">\n        <h3>Vous n'êtes pas un participant de cette discussion</h3>\n        <p>Pour voir les détails et participer, veuillez rejoindre la discussion.</p>\n        <button @click=\"joinDiscussion(currentDiscussionId)\" class=\"join-button\">Rejoindre la discussion</button>\n      </div>\n      <div class=\"right-panel\" v-else>\n        Sélectionnez une discussion pour voir les réponses\n      </div>\n    </div>\n    \n    <!-- Modal pour création de discussion privée -->\n    <div v-if=\"showPrivateDialog\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Créer une discussion privée</h3>\n        <input v-model=\"newDiscPrivateTitle\" placeholder=\"Titre de la discussion\" />\n        <textarea v-model=\"newDiscPrivateDescription\" placeholder=\"Description\" rows=\"3\"></textarea>\n        <input v-model=\"newDiscParticipantEmail\" placeholder=\"Email du participant\" />\n        <div class=\"modal-buttons\">\n          <button @click=\"createPrivateDiscussion\">Créer</button>\n          <button @click=\"closeModals\">Annuler</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal pour création de discussion publique -->\n    <div v-if=\"showPublicDialog\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Créer une discussion publique</h3>\n        <input v-model=\"newDiscPublicTitle\" placeholder=\"Titre de la discussion\" />\n        <textarea v-model=\"newDiscPublicDescription\" placeholder=\"Description\" rows=\"3\"></textarea>\n        <!-- New input field for discussion image URL -->\n        <input v-model=\"newDiscPublicImageUrl\" placeholder=\"URL de l'image (https://...)\" />\n        <div class=\"image-preview\" v-if=\"newDiscPublicImageUrl\">\n          <img :src=\"newDiscPublicImageUrl || '/api/placeholder/100/100'\" alt=\"Preview\" class=\"preview-image\" />\n        </div>\n        <div class=\"participant-emails\">\n          <input \n            v-model=\"newParticipantEmail\" \n            placeholder=\"Email d'un participant (optionnel)\" \n            @keyup.enter=\"addParticipantEmail\"\n          />\n          <button @click=\"addParticipantEmail\">Ajouter</button>\n        </div>\n        <div class=\"email-list\" v-if=\"participantEmails.length > 0\">\n          <div v-for=\"(email, index) in participantEmails\" :key=\"index\" class=\"email-tag\">\n            {{ email }}\n            <span class=\"remove-email\" @click=\"removeParticipantEmail(index)\">×</span>\n          </div>\n        </div>\n        <div class=\"modal-buttons\">\n          <button @click=\"createPublicDiscussion\">Créer</button>\n          <button @click=\"closeModals\">Annuler</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal pour mettre à jour la photo de profil -->\n    <div v-if=\"showProfilePicDialog\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Mettre à jour votre photo de profil</h3>\n        <input v-model=\"profilePicInput\" placeholder=\"URL de l'image (https://...)\" />\n        <div class=\"profile-pic-preview\">\n          <img :src=\"profilePicInput || profileImageUrl || '/api/placeholder/100/100'\" alt=\"Preview\" class=\"preview-image\" />\n        </div>\n        <div class=\"modal-buttons\">\n          <button @click=\"updateProfilePicture\">Sauvegarder</button>\n          <button @click=\"closeProfilePicDialog\">Annuler</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { getFirestore, collection, getDocs, query, orderBy, doc, updateDoc, arrayUnion, arrayRemove, getDoc, addDoc, where, serverTimestamp } from \"firebase/firestore\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport SingleDisc from \"../components/singleDisc.vue\";\nimport Responses from \"../components/Responses.vue\";\n\nexport default {\n  name: \"Forum\",\n  components: {\n    SingleDisc,\n    Responses\n  },\n  emits: ['select-discussion'],\n  setup(props, { emit }) {\n    const router = useRouter();\n    const userId = ref(null);\n    const userEmail = ref(null);\n    const FirstName = ref('');\n    const LastName = ref('');\n    const isOnline = ref(false);\n    const profileImageUrl = ref('');\n    const discussions = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    const filterType = ref('all');\n    const currentDiscussionId = ref(null);\n    const canViewDiscussion = ref(false);\n    \n    // Pour la photo de profil\n    const showProfilePicDialog = ref(false);\n    const profilePicInput = ref('');\n    \n    // Pour créer une discussion privée\n    const showPrivateDialog = ref(false);\n    const newDiscPrivateTitle = ref('');\n    const newDiscPrivateDescription = ref('');\n    const newDiscParticipantEmail = ref('');\n    \n    // Pour créer une discussion publique\n    const showPublicDialog = ref(false);\n    const newDiscPublicTitle = ref('');\n    const newDiscPublicDescription = ref('');\n    const newDiscPublicImageUrl = ref(''); // New field for discussion image URL\n    const newParticipantEmail = ref('');\n    const participantEmails = ref([]);\n    \n    // Fetch user data including name, online status, and profile picture\n    const fetchUserData = async (uid) => {\n      try {\n        const db = getFirestore();\n        const userDoc = await getDoc(doc(db, \"users\", uid));\n        \n        if (userDoc.exists()) {\n          FirstName.value = userDoc.data().FirstName || '';\n          LastName.value = userDoc.data().LastName || '';\n          isOnline.value = userDoc.data().isOnline || false;\n          profileImageUrl.value = userDoc.data().profileImageUrl || '';\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    \n    // Open profile picture update dialog\n    const openProfilePicDialog = () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour modifier votre photo de profil.\");\n        return;\n      }\n      profilePicInput.value = profileImageUrl.value || '';\n      showProfilePicDialog.value = true;\n    };\n    \n    // Close profile picture dialog\n    const closeProfilePicDialog = () => {\n      showProfilePicDialog.value = false;\n      profilePicInput.value = '';\n    };\n    \n    // Update profile picture\n    const updateProfilePicture = async () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour modifier votre photo de profil.\");\n        return;\n      }\n      \n      try {\n        const db = getFirestore();\n        await updateDoc(doc(db, \"users\", user.uid), {\n          profileImageUrl: profilePicInput.value\n        });\n        \n        profileImageUrl.value = profilePicInput.value;\n        closeProfilePicDialog();\n        alert(\"Photo de profil mise à jour avec succès!\");\n      } catch (error) {\n        console.error(\"Error updating profile picture:\", error);\n        alert(\"Erreur lors de la mise à jour de la photo de profil.\");\n      }\n    };\n    \n    // Logout function\n    const logout = async () => {\n      try {\n        const auth = getAuth();\n        const db = getFirestore();\n        \n        // Set the user's online status to false in Firestore\n        if (userId.value) {\n          await updateDoc(doc(db, \"users\", userId.value), {\n            isOnline: false\n          });\n        }\n        \n        // Sign out from Firebase Auth\n        await signOut(auth);\n        \n        // Redirect to home page\n        router.push('/');\n      } catch (error) {\n        console.error(\"Error logging out:\", error);\n        alert(\"Une erreur s'est produite lors de la déconnexion\");\n      }\n    };\n    \n    const fetchDiscussions = async () => {\n      try {\n        loading.value = true;\n        const db = getFirestore();\n        const discussionsQuery = query(\n          collection(db, \"discussions\"),\n          orderBy(\"createdAt\", \"desc\")\n        );\n        \n        const querySnapshot = await getDocs(discussionsQuery);\n        \n        // Get all user data to fetch creator profile pictures\n        const usersRef = collection(db, \"users\");\n        const usersSnapshot = await getDocs(usersRef);\n        const usersMap = {};\n        \n        usersSnapshot.forEach(doc => {\n          usersMap[doc.id] = doc.data();\n        });\n        \n        // Process discussion data\n        discussions.value = await Promise.all(querySnapshot.docs.map(async (doc) => {\n          const data = doc.data();\n          if (data.createdAt) {\n            data.createdAtTimestamp = data.createdAt.toDate ? \n              data.createdAt.toDate().getTime() : \n              new Date(data.createdAt).getTime();\n          }\n          \n          // Ensure participants is an array\n          if (!data.participants) {\n            data.participants = [];\n          }\n          \n          // Add creator's profile picture if available\n          if (data.createdBy && usersMap[data.createdBy]) {\n            data.creatorPic = usersMap[data.createdBy].profileImageUrl || '';\n          }\n          \n          return {\n            id: doc.id,\n            ...data\n          };\n        }));\n        \n        console.log(\"Fetched discussions:\", discussions.value);\n      } catch (err) {\n        console.error(\"Failed to load discussions:\", err);\n        error.value = \"Failed to load discussions: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    const isParticipant = (discussion) => {\n      return userId.value && discussion.participants && \n             Array.isArray(discussion.participants) && \n             discussion.participants.includes(userId.value);\n    };\n    \n    const filteredDiscussions = computed(() => {\n      if (!discussions.value.length) return [];\n      \n      // Filter out private discussions where user is not a participant\n      const accessibleDiscussions = discussions.value.filter(disc => {\n        // If private, only show if user is a participant\n        if (disc.isPrivate === true) {\n          return isParticipant(disc);\n        }\n        // If public, always show\n        return true;\n      });\n      \n      // Then apply type filter\n      if (filterType.value === 'all') {\n        return accessibleDiscussions;\n      } else if (filterType.value === 'private') {\n        return accessibleDiscussions.filter(disc => disc.isPrivate === true);\n      } else if (filterType.value === 'public') {\n        return accessibleDiscussions.filter(disc => disc.isPrivate === false);\n      }\n      \n      return accessibleDiscussions;\n    });\n    \n    const checkParticipantStatus = () => {\n      if (!currentDiscussionId.value || !userId.value) {\n        canViewDiscussion.value = false;\n        return;\n      }\n      \n      const currentDiscussion = discussions.value.find(d => d.id === currentDiscussionId.value);\n      if (currentDiscussion) {\n        canViewDiscussion.value = isParticipant(currentDiscussion);\n      } else {\n        canViewDiscussion.value = false;\n      }\n    };\n    \n    const joinDiscussion = async (discussionId) => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour rejoindre une discussion\");\n        return;\n      }\n      \n      try {\n        const db = getFirestore();\n        const discussionRef = doc(db, 'discussions', discussionId);\n        \n        // Get the latest version of the document\n        const discussionSnap = await getDoc(discussionRef);\n        if (!discussionSnap.exists()) {\n          throw new Error(\"Discussion not found\");\n        }\n        \n        // Update the document to add the user to participants\n        await updateDoc(discussionRef, {\n          participants: arrayUnion(userId.value)\n        });\n        \n        // Update local state\n        const discussionIndex = discussions.value.findIndex(d => d.id === discussionId);\n        if (discussionIndex !== -1) {\n          if (!discussions.value[discussionIndex].participants) {\n            discussions.value[discussionIndex].participants = [];\n          }\n          \n          if (!discussions.value[discussionIndex].participants.includes(userId.value)) {\n            discussions.value[discussionIndex].participants.push(userId.value);\n          }\n        }\n        \n        // Update the view permission\n        canViewDiscussion.value = true;\n        \n        console.log(`Successfully joined discussion ${discussionId}`);\n      } catch (error) {\n        console.error(\"Error joining discussion:\", error);\n        alert(\"Une erreur s'est produite lors de la tentative de rejoindre la discussion\");\n      }\n    };\n\n    const leaveDiscussion = async (discussionId, isPrivate) => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour quitter une discussion\");\n        return;\n      }\n      \n      try {\n        const db = getFirestore();\n        const discussionRef = doc(db, 'discussions', discussionId);\n        \n        // Get the latest version of the document\n        const discussionSnap = await getDoc(discussionRef);\n        if (!discussionSnap.exists()) {\n          throw new Error(\"Discussion not found\");\n        }\n        \n        // Update the document to remove the user from participants\n        await updateDoc(discussionRef, {\n          participants: arrayRemove(userId.value)\n        });\n        \n        // Update local state\n        const discussionIndex = discussions.value.findIndex(d => d.id === discussionId);\n        if (discussionIndex !== -1 && discussions.value[discussionIndex].participants) {\n          discussions.value[discussionIndex].participants = \n            discussions.value[discussionIndex].participants.filter(p => p !== userId.value);\n        }\n        \n        // If this is the current discussion, hide it\n        if (currentDiscussionId.value === discussionId) {\n          hideDiscussion();\n        }\n        \n        // For private discussions, they should disappear from the list after leaving\n        if (isPrivate) {\n          await fetchDiscussions(); // Refresh the list\n        }\n        \n        console.log(`Successfully left discussion ${discussionId}`);\n      } catch (error) {\n        console.error(\"Error leaving discussion:\", error);\n        alert(\"Une erreur s'est produite lors de la tentative de quitter la discussion\");\n      }\n    };\n    \n    const showAll = () => {\n      filterType.value = 'all';\n    };\n    \n    const showPrivate = () => {\n      filterType.value = 'private';\n    };\n    \n    const showPublic = () => {\n      filterType.value = 'public';\n    };\n    \n    const handleViewDiscussion = (discussionId) => {\n      currentDiscussionId.value = discussionId;\n      emit('select-discussion', discussionId);\n      checkParticipantStatus();\n    };\n    \n    const hideDiscussion = () => {\n      currentDiscussionId.value = null;\n      canViewDiscussion.value = false;\n    };\n    \n    // Fonctions pour la création de discussion\n    const openCreatePrivateDialog = () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour créer une discussion.\");\n        return;\n      }\n      showPrivateDialog.value = true;\n      showPublicDialog.value = false;\n      showProfilePicDialog.value = false;\n    };\n    \n    const openCreatePublicDialog = () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour créer une discussion.\");\n        return;\n      }\n      showPublicDialog.value = true;\n      showPrivateDialog.value = false;\n      showProfilePicDialog.value = false;\n    };\n    \n    const closeModals = () => {\n      showPrivateDialog.value = false;\n      showPublicDialog.value = false;\n      newDiscPrivateTitle.value = '';\n      newDiscPrivateDescription.value = '';\n      newDiscParticipantEmail.value = '';\n      newDiscPublicTitle.value = '';\n      newDiscPublicDescription.value = '';\n      newDiscPublicImageUrl.value = ''; // Reset the image URL field\n      newParticipantEmail.value = '';\n      participantEmails.value = [];\n    };\n    \n    const addParticipantEmail = () => {\n      if (newParticipantEmail.value && !participantEmails.value.includes(newParticipantEmail.value)) {\n        participantEmails.value.push(newParticipantEmail.value);\n        newParticipantEmail.value = '';\n      }\n    };\n    \n    const removeParticipantEmail = (index) => {\n      participantEmails.value.splice(index, 1);\n    };\n    \n    // FIXED: Improved email search for private discussions\n    const createPrivateDiscussion = async () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour créer une discussion.\");\n        return;\n      }\n      \n      if (!newDiscPrivateTitle.value.trim()) {\n        alert(\"Le titre de la discussion est obligatoire.\");\n        return;\n      }\n      \n      const emailToFind = newDiscParticipantEmail.value.trim();\n      if (!emailToFind) {\n        alert(\"Veuillez spécifier un participant.\");\n        return;\n      }\n      \n      try {\n        // Chercher l'utilisateur par email - avec plus de robustesse\n        const db = getFirestore();\n        const usersRef = collection(db, \"users\");\n        \n        // Try different field names and case sensitivity options\n        const emailFields = [\"Email\", \"email\", \"userEmail\"];\n        let participantId = null;\n        \n        for (const field of emailFields) {\n          if (participantId) break; // Skip if already found\n          \n          // Try case-sensitive search\n          const q1 = query(usersRef, where(field, \"==\", emailToFind));\n          const snap1 = await getDocs(q1);\n          \n          if (!snap1.empty) {\n            snap1.forEach((doc) => {\n              participantId = doc.id;\n            });\n            console.log(`Found user with ${field} (case-sensitive): ${participantId}`);\n            break;\n          }\n          \n          // Try lowercase search\n          const q2 = query(usersRef, where(field, \"==\", emailToFind.toLowerCase()));\n          const snap2 = await getDocs(q2);\n          \n          if (!snap2.empty) {\n            snap2.forEach((doc) => {\n              participantId = doc.id;\n            });\n            console.log(`Found user with ${field} (lowercase): ${participantId}`);\n            break;\n          }\n        }\n        \n        // If still not found, try a different approach - fetch all users and compare\n        if (!participantId) {\n          console.log(\"User not found with direct queries, trying manual comparison\");\n          const allUsers = await getDocs(usersRef);\n          \n          allUsers.forEach((userDoc) => {\n            const userData = userDoc.data();\n            for (const key in userData) {\n              // Check if any field contains an email that matches\n              if (typeof userData[key] === 'string' && \n                  userData[key].toLowerCase() === emailToFind.toLowerCase() &&\n                  userData[key].includes('@')) {\n                participantId = userDoc.id;\n                console.log(`Found user by manual search in field ${key}: ${participantId}`);\n                break;\n              }\n            }\n          });\n        }\n        \n        if (!participantId) {\n          alert(\"Utilisateur non trouvé avec cet email. Vérifiez l'adresse email et réessayez.\");\n          return;\n        }\n        \n        // Créer la discussion\n        const newDiscussion = {\n          title: newDiscPrivateTitle.value.trim(),\n          description: newDiscPrivateDescription.value.trim(),\n          isPrivate: true,\n          participants: [userId.value, participantId],\n          createdAt: serverTimestamp(),\n          createdBy: userId.value,\n          creatorPic: profileImageUrl.value || ''\n        };\n        \n        const docRef = await addDoc(collection(db, \"discussions\"), newDiscussion);\n        \n        // Ajouter la nouvelle discussion à la liste locale\n        discussions.value.unshift({\n          id: docRef.id,\n          ...newDiscussion,\n          createdAt: new Date() // Pour l'affichage immédiat, sera remplacé au prochain fetchDiscussions\n        });\n        \n        alert(\"Discussion privée créée avec succès!\");\n        closeModals();\n      } catch (err) {\n        console.error(\"Erreur lors de la création de la discussion privée:\", err);\n        alert(\"Erreur lors de la création de la discussion. Veuillez réessayer.\");\n      }\n    };\n    \n    // FIXED: Improved email search for public discussions too and added image URL\n    const createPublicDiscussion = async () => {\n      if (!userId.value) {\n        alert(\"Vous devez être connecté pour créer une discussion.\");\n        return;\n      }\n      \n      if (!newDiscPublicTitle.value.trim()) {\n        alert(\"Le titre de la discussion est obligatoire.\");\n        return;\n      }\n      \n      try {\n        const db = getFirestore();\n        \n        // Récupérer les IDs des participants à partir des emails\n        const participantIds = [userId.value]; // Toujours inclure l'utilisateur actuel\n        const notFoundEmails = [];\n        \n        if (participantEmails.value.length > 0) {\n          const usersRef = collection(db, \"users\");\n          \n          for (const email of participantEmails.value) {\n            const emailToFind = email.trim();\n            let found = false;\n            \n           \n            const emailFields = [\"Email\", \"email\", \"userEmail\"];\n            \n            for (const field of emailFields) {\n              if (found) break;\n              \n              // Try exact match\n              const q = query(usersRef, where(field, \"==\", emailToFind));\n              const querySnapshot = await getDocs(q);\n              \n              if (!querySnapshot.empty) {\n                querySnapshot.forEach((doc) => {\n                  if (!participantIds.includes(doc.id)) {\n                    participantIds.push(doc.id);\n                    found = true;\n                  }\n                });\n              }\n              \n              // Try lowercase\n              if (!found) {\n                const q2 = query(usersRef, where(field, \"==\", emailToFind.toLowerCase()));\n                const snap2 = await getDocs(q2);\n                \n                if (!snap2.empty) {\n                  snap2.forEach((doc) => {\n                    if (!participantIds.includes(doc.id)) {\n                      participantIds.push(doc.id);\n                      found = true;\n                    }\n                  });\n                }\n              }\n            }\n            \n            // Manual search as fallback\n            if (!found) {\n              const allUsers = await getDocs(usersRef);\n              allUsers.forEach((userDoc) => {\n                const userData = userDoc.data();\n                for (const key in userData) {\n                  if (typeof userData[key] === 'string' && \n                      userData[key].toLowerCase() === emailToFind.toLowerCase() &&\n                      userData[key].includes('@')) {\n                    if (!participantIds.includes(userDoc.id)) {\n                      participantIds.push(userDoc.id);\n                      found = true;\n                      break;\n                    }\n                  }\n                }\n              });\n            }\n            \n            if (!found) {\n              notFoundEmails.push(emailToFind);\n            }\n          }\n        }\n        \n        // Warn about not found emails, but still create the discussion\n        if (notFoundEmails.length > 0) {\n          alert(`Attention: Les adresses emails suivantes n'ont pas été trouvées: ${notFoundEmails.join(\", \")}`);\n        }\n        \n        // Créer la discussion\n        const newDiscussion = {\n          title: newDiscPublicTitle.value.trim(),\n          description: newDiscPublicDescription.value.trim(),\n          isPrivate: false,\n          participants: participantIds,\n          createdAt: serverTimestamp(),\n          createdBy: userId.value,\n          creatorPic: profileImageUrl.value || '',\n          profileImageUrl: newDiscPublicImageUrl.value || '' // Add the image URL to the discussion\n        };\n        \n        const docRef = await addDoc(collection(db, \"discussions\"), newDiscussion);\n        \n        // Ajouter la nouvelle discussion à la liste locale\n        discussions.value.unshift({\n          id: docRef.id,\n          ...newDiscussion,\n          createdAt: new Date() // Pour l'affichage immédiat\n        });\n        \n        alert(\"Discussion publique créée avec succès!\");\n        closeModals();\n      } catch (err) {\n        console.error(\"Erreur lors de la création de la discussion publique:\", err);\n        alert(\"Erreur lors de la création de la discussion. Veuillez réessayer.\");\n      }\n    };\n    \n    onMounted(async () => {\n      const auth = getAuth();\n      onAuthStateChanged(auth, async (user) => {\n        if (user) {\n          userId.value = user.uid;\n          userEmail.value = user.email;\n          \n          // Set online status to true in Firestore\n          const db = getFirestore();\n          await updateDoc(doc(db, \"users\", user.uid), {\n            isOnline: true\n          });\n          \n          // Fetch user data including name and online status\n          await fetchUserData(user.uid);\n        } else {\n          userId.value = null;\n          userEmail.value = null;\n          FirstName.value = '';\n          LastName.value = '';\n          isOnline.value = false;\n          profileImageUrl.value = '';\n        }\n        checkParticipantStatus();\n      });\n      \n      await fetchDiscussions();\n    });\n    \n    return {\n      userId,\n      userEmail,\n      FirstName,\n      LastName,\n      isOnline,\n      profileImageUrl,\n      discussions,\n      loading,\n      error,\n      filteredDiscussions,\n      logout,\n      showAll,\n      showPrivate,\n      showPublic,\n      handleViewDiscussion,\n      hideDiscussion,\n      currentDiscussionId,\n      canViewDiscussion,\n      isParticipant,\n      joinDiscussion,\n      leaveDiscussion,\n      filterType,\n      \n      // Pour la photo de profil\n      showProfilePicDialog,\n      profilePicInput,\n      openProfilePicDialog,\n      closeProfilePicDialog,\n      updateProfilePicture,\n      \n      // Pour création de discussion privée\n      showPrivateDialog,\n      newDiscPrivateTitle,\n      newDiscPrivateDescription,\n      newDiscParticipantEmail,\n      openCreatePrivateDialog,\n      createPrivateDiscussion,\n      \n      // Pour création de discussion publique\n      showPublicDialog,\n      newDiscPublicTitle,\n      newDiscPublicDescription,\n      newDiscPublicImageUrl, // New variable for discussion image URL\n      newParticipantEmail,\n      participantEmails,\n      openCreatePublicDialog,\n      createPublicDiscussion,\n      addParticipantEmail,\n      removeParticipantEmail,\n      \n      closeModals\n    };\n  }\n};\n</script>\n\n<style scoped>\n.forum-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n}\n\n\n.top-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: 1px solid #e0e0e0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.profile-link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  font-weight: 500;\n  padding: 6px}\n.forum-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n}\n\n\n.top-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: 1px solid #e0e0e0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.profile-link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  font-weight: 500;\n  padding: 6px 12px;\n  border-radius: 20px;\n  transition: background-color 0.2s;\n}\n\n.profile-link:hover {\n  background-color: #f5f5f5;\n}\n\n.profile-image {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 8px;}\n.forum-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n}\n\n\n.top-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: 1px solid #e0e0e0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.profile-link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  font-weight: 500;\n  padding: 6px 12px;\n  border-radius: 20px;\n  transition: background-color 0.2s;\n}\n\n.profile-link:hover {\n  background-color: #f5f5f5;\n}\n\n.profile-image {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 8px;\n  border: 1px solid #e0e0e0;\n}\n\n.status-dot {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #ccc;\n  margin-left: 8px;\n}\n\n.status-dot.online {\n  background-color: #4caf50;\n}\n\n.logout-btn {\n  background-color: #f5f5f5;\n  color: #333;\n  border: none;\n  padding:}\n.forum-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n}\n\n\n.top-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: 1px solid #e0e0e0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.profile-link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  font-weight: 500;\n  padding: 6px 12px;\n  border-radius: 20px;\n  transition: background-color 0.2s;\n}\n\n.profile-link:hover {\n  background-color: #f5f5f5;\n}\n\n.status-dot {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #ccc;\n  margin-left: 8px;\n}\n\n.status-dot.online {\n  background-color: #4caf50;\n}\n\n.logout-btn {\n  background-color: #f5f5f5;\n  color: #333;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.logout-btn:hover {\n  background-color: #e0e0e0;\n}\n\n\n.forum-content {\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n}\n\n.left-panel {\n  width: 320px;\n  background: white;\n  border-right: 1px solid #e0e0e0;\n  padding: 20px;\n  overflow-y: auto;\n}\n\n.right-panel {\n  flex: 1;\n  background: #f5f7fb;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\n.right-panel > div:not(.join-prompt) {\n  flex: 1;\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.join-prompt {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  background: white;\n  border-radius: 12px;\n  padding: 40px;\n}\n\n.join-prompt h3 {\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.join-prompt p {\n  color: #666;\n  margin-bottom: 20px;\n}\n\n.create-buttons {\n  margin-bottom: 20px;\n}\n\n.create-button {\n  width: 100%;\n  padding: 12px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s;\n}\n\n.private-btn {\n  background-color: #ffebee;\n  color: #d32f2f;\n}\n\n.public-btn {\n  background-color: #e3f2fd;\n  color: #1976d2;\n}\n\n.private-btn:hover {\n  background-color: #ffcdd2;\n}\n\n.public-btn:hover {\n  background-color: #bbdefb;\n}\n\n.icon {\n  font-size: 16px;\n  margin-right: 8px;\n  font-weight: bold;\n}\n\n.filter-buttons {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 20px;\n}\n\n.filter-buttons button {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 13px;\n  transition: all 0.2s;\n}\n\n.filter-buttons button.active {\n  background-color: #1976d2;\n  color: white;\n  border-color: #1976d2;\n}\n\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 24px;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 500px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n}\n\n.modal-content h3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #333;\n  font-size: 18px;\n}\n\n.modal-content input,\n.modal-content textarea {\n  width: 100%;\n  padding: 12px;\n  margin-bottom: 16px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: border 0.2s;\n}\n\n.modal-content input:focus,\n.modal-content textarea:focus {\n  border-color: #1976d2;\n  outline: none;\n}\n\n.modal-content textarea {\n  resize: vertical;\n  min-height: 100px;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.modal-buttons button {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.modal-buttons button:first-child {\n  background-color: #4caf50;\n  color: white;\n}\n\n.modal-buttons button:first-child:hover {\n  background-color: #3d8b40;\n}\n\n.modal-buttons button:last-child {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\n.modal-buttons button:last-child:hover {\n  background-color: #e0e0e0;\n}\n\n.participant-emails {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n}\n\n.participant-emails input {\n  flex: 1;\n}\n\n.participant-emails button {\n  padding: 0 16px;\n  background-color: #1976d2;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n}\n\n.email-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.email-tag {\n  background-color: #e3f2fd;\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n}\n\n.remove-email {\n  margin-left: 6px;\n  cursor: pointer;\n  font-weight: bold;\n  color: #1976d2;\n}\n\n.join-button {\n  padding: 12px 24px;\n  background-color: #1976d2;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.join-button:hover {\n  background-color: #1565c0;\n  transform: translateY(-1px);\n}\n\n\n.loading {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-style: italic;\n}\n\n.no-discussions {\n  text-align: center;\n  padding: 40px;\n  color: #999;\n  font-style: italic;\n}\n</style>","<template>\r\n  <div \r\n    class=\"discussion-item\" \r\n    :class=\"{ 'active': isActive }\"\r\n    @click=\"viewDiscussion\"\r\n  >\r\n    <!-- For private discussions, show other participant's profile picture -->\r\n    <div v-if=\"discussion.isPrivate\" class=\"user-profile\">\r\n      <img \r\n        v-if=\"otherParticipant && otherParticipant.profileImageUrl\" \r\n        :src=\"otherParticipant.profileImageUrl\" \r\n        :alt=\"`${otherParticipant.firstName} ${otherParticipant.lastName}`\"\r\n        class=\"profile-pic\"\r\n      />\r\n      <div v-else class=\"fallback-avatar\">\r\n        {{ otherParticipant ? getInitials(otherParticipant.firstName, otherParticipant.lastName) : '?' }}\r\n      </div>\r\n      <span v-if=\"otherParticipant?.isOnline\" class=\"online-status\"></span>\r\n    </div>\r\n    \r\n    <!-- For public discussions, show creator pic if available, otherwise show discussion icon -->\r\n    <div v-else class=\"discussion-icon\">\r\n      <img \r\n        v-if=\"discussion.creatorPic\" \r\n        :src=\"discussion.creatorPic\" \r\n        alt=\"Creator\" \r\n        class=\"profile-pic\"\r\n      />\r\n      <img \r\n        v-else-if=\"discussion.imageUrl\" \r\n        :src=\"discussion.imageUrl\" \r\n        alt=\"Discussion\" \r\n        class=\"discussion-img\"\r\n      />\r\n      <div v-else class=\"default-icon\">👥</div>\r\n    </div>\r\n    \r\n    <div class=\"discussion-content\">\r\n      <div class=\"discussion-header\">\r\n        <h3 class=\"discussion-title\">\r\n          {{ discussion.title }}\r\n          <span v-if=\"discussion.isPrivate && otherParticipant\" class=\"participant-name\">\r\n            ({{ otherParticipant.firstName }} {{ otherParticipant.lastName }})\r\n          </span>\r\n        </h3>\r\n        <span class=\"discussion-type\" :class=\"{ 'private': discussion.isPrivate }\">\r\n          {{ discussion.isPrivate ? 'Privé' : 'Public' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <p class=\"discussion-description\">{{ discussion.description }}</p>\r\n      \r\n      <div class=\"discussion-meta\">\r\n        <span class=\"message-count\" v-if=\"discussion.messageCount !== undefined\">\r\n          {{ discussion.messageCount }} message{{ discussion.messageCount !== 1 ? 's' : '' }}\r\n        </span>\r\n        <span class=\"last-activity\" v-if=\"discussion.lastActivity\">\r\n          {{ formatDate(discussion.lastActivity) }}\r\n        </span>\r\n      </div>\r\n      \r\n      <div class=\"discussion-actions\">\r\n        <button v-if=\"!isParticipant\" @click.stop=\"joinDiscussion\" class=\"join-btn\">\r\n          Rejoindre\r\n        </button>\r\n        <button v-else @click.stop=\"leaveDiscussion\" class=\"leave-btn\">\r\n          Quitter\r\n        </button>\r\n        <button @click.stop=\"viewDiscussion\" class=\"view-btn\">\r\n          Voir\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nexport default {\r\n  props: {\r\n    discussionId: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    isParticipant: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isActive: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  \r\n  emits: ['view-discussion', 'join-discussion', 'leave-discussion'],\r\n  \r\n  setup(props, { emit }) {\r\n    const discussion = ref({});\r\n    const loading = ref(true);\r\n    const otherParticipant = ref(null);\r\n    const currentUserId = ref(null);\r\n    \r\n    // Fetch current user ID\r\n    onMounted(() => {\r\n      const auth = getAuth();\r\n      if (auth.currentUser) {\r\n        currentUserId.value = auth.currentUser.uid;\r\n      }\r\n      \r\n      fetchDiscussion();\r\n    });\r\n    \r\n    // Watch for changes in discussionId\r\n    watch(() => props.discussionId, () => {\r\n      fetchDiscussion();\r\n    });\r\n    \r\n    // Fetch discussion details\r\n    const fetchDiscussion = async () => {\r\n      try {\r\n        const db = getFirestore();\r\n        const discussionDoc = await getDoc(doc(db, 'discussions', props.discussionId));\r\n        \r\n        if (discussionDoc.exists()) {\r\n          discussion.value = {\r\n            id: discussionDoc.id,\r\n            ...discussionDoc.data()\r\n          };\r\n          \r\n          // If it's a private discussion, fetch the other participant's info\r\n          if (discussion.value.isPrivate && discussion.value.participants) {\r\n            await fetchOtherParticipant();\r\n          }\r\n        }\r\n        \r\n        loading.value = false;\r\n      } catch (error) {\r\n        console.error(\"Error fetching discussion:\", error);\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // For private discussions, fetch the other participant's info\r\n    const fetchOtherParticipant = async () => {\r\n      if (!discussion.value.participants || !currentUserId.value) return;\r\n      \r\n      // Find the participant that is not the current user\r\n      const otherUserId = discussion.value.participants.find(id => id !== currentUserId.value);\r\n      \r\n      if (otherUserId) {\r\n        try {\r\n          const db = getFirestore();\r\n          const userDoc = await getDoc(doc(db, 'users', otherUserId));\r\n          \r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            \r\n            otherParticipant.value = {\r\n              id: otherUserId,\r\n              firstName: userData.firstName || '',\r\n              lastName: userData.lastName || '',\r\n              profileImageUrl: userData.profileImageUrl || null,\r\n              isOnline: userData.isOnline || false\r\n            };\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching other participant:\", error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    const getInitials = (firstName, lastName) => {\r\n      let initials = '';\r\n      if (firstName) initials += firstName.charAt(0).toUpperCase();\r\n      if (lastName) initials += lastName.charAt(0).toUpperCase();\r\n      return initials || '?';\r\n    };\r\n    \r\n    const formatDate = (timestamp) => {\r\n      if (!timestamp) return '';\r\n      const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\r\n      return date.toLocaleDateString('fr-FR', { \r\n        day: 'numeric', \r\n        month: 'short', \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      });\r\n    };\r\n    \r\n    const viewDiscussion = () => {\r\n      emit('view-discussion', props.discussionId);\r\n    };\r\n    \r\n    const joinDiscussion = () => {\r\n      emit('join-discussion', props.discussionId);\r\n    };\r\n    \r\n    const leaveDiscussion = () => {\r\n      emit('leave-discussion', props.discussionId, discussion.value.isPrivate);\r\n    };\r\n    \r\n    return {\r\n      discussion,\r\n      loading,\r\n      otherParticipant,\r\n      getInitials,\r\n      formatDate,\r\n      viewDiscussion,\r\n      joinDiscussion,\r\n      leaveDiscussion\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.discussion-item {\r\n  display: flex;\r\n  padding: 15px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: 1px solid #eaeaea;\r\n}\r\n\r\n.discussion-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.discussion-item.active {\r\n  border-color: #1976d2;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);\r\n}\r\n\r\n.user-profile, .discussion-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 15px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.profile-pic, .discussion-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.fallback-avatar, .default-icon {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.fallback-avatar {\r\n  color: white;\r\n  background-color: #1976d2;\r\n}\r\n\r\n.default-icon {\r\n  font-size: 24px;\r\n}\r\n\r\n.online-status {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-color: #4caf50;\r\n  border: 2px solid white;\r\n}\r\n\r\n.discussion-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.discussion-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.discussion-title {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.participant-name {\r\n  font-weight: normal;\r\n  font-size: 0.9em;\r\n  color: #666;\r\n}\r\n\r\n.discussion-type {\r\n  font-size: 12px;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.discussion-type.private {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n.discussion-description {\r\n  margin: 5px 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.discussion-meta {\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin: 5px 0;\r\n}\r\n\r\n.discussion-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.join-btn, .leave-btn, .view-btn {\r\n  padding: 4px 10px;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  border: none;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.join-btn {\r\n  background-color: #1976d2;\r\n  color: white;\r\n}\r\n\r\n.join-btn:hover {\r\n  background-color: #1565c0;\r\n}\r\n\r\n.leave-btn {\r\n  background-color: #f5f5f5;\r\n  color: #666;\r\n}\r\n\r\n.leave-btn:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.view-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.view-btn:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n</style>","import { render } from \"./singleDisc.vue?vue&type=template&id=9a384d66&scoped=true\"\nimport script from \"./singleDisc.vue?vue&type=script&lang=js\"\nexport * from \"./singleDisc.vue?vue&type=script&lang=js\"\n\nimport \"./singleDisc.vue?vue&type=style&index=0&id=9a384d66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9a384d66\"]])\n\nexport default __exports__","<template>\r\n  <div v-if=\"discussionId\">\r\n    <button @click=\"Hide\" class=\"back-button\">\r\n      <span class=\"back-icon\">←</span> Retour aux discussions\r\n    </button>\r\n    <div v-if=\"discussion\" class=\"chat-container\">\r\n      <!-- Updated discussion info and participants section -->\r\n      <div class=\"discussion-header\">\r\n        <h2>{{ discussion.title }}</h2>\r\n        <p v-if=\"discussion.description\">{{ discussion.description }}</p>\r\n      </div>\r\n      \r\n      <!-- Condensed participants display -->\r\n      <div class=\"participants-bar\">\r\n        <div class=\"participants-label\">Participants</div>\r\n        <div class=\"participants-list\">\r\n          <div v-for=\"userId in discussion.participants\" :key=\"userId\" \r\n               class=\"participant-item\">\r\n            <div class=\"participant-avatar\">\r\n              <img v-if=\"userAvatars[userId]\" :src=\"userAvatars[userId]\" alt=\"Avatar\" class=\"avatar-img\">\r\n              <div v-else class=\"user-initials\">{{ getUserInitials(userId) }}</div>\r\n              <div class=\"status-indicator\" :class=\"{ 'online': isUserOnline(userId), 'offline': !isUserOnline(userId) }\"></div>\r\n            </div>\r\n            <div class=\"participant-name\">\r\n              {{ isCurrentUser(userId) ? 'Vous' : (userNames[userId] || 'Utilisateur') }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"messages-container\" ref=\"messagesContainer\" @scroll=\"handleScroll\">\r\n        <div v-if=\"responses.length === 0\" class=\"no-messages\">\r\n          Aucun message dans cette discussion. Soyez le premier à écrire !\r\n        </div>\r\n        \r\n        <div v-for=\"message in responses\" :key=\"message.id\"\r\n              :class=\"{'sender-message': isCurrentUserMessage(message), 'receiver-message': !isCurrentUserMessage(message)}\"\r\n              class=\"message\"\r\n              :data-message-id=\"message.id\"\r\n              ref=\"messageElements\">\r\n          <!-- User profile picture -->\r\n          <div class=\"message-avatar\">\r\n            <div class=\"user-avatar\">\r\n              <img v-if=\"userAvatars[message.senderId]\" :src=\"userAvatars[message.senderId]\" alt=\"Avatar\" class=\"avatar-img\">\r\n              <div v-else class=\"avatar-placeholder\">{{ getUserInitials(message.senderId) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"message-bubble\">\r\n            <!-- Message content - show edit interface if editing this message -->\r\n            <div v-if=\"editingMessageId === message.id\" class=\"edit-message-container\">\r\n              <textarea \r\n                v-model=\"editMessageContent\" \r\n                class=\"edit-message-input\"\r\n                ref=\"editTextarea\"\r\n                @keyup.enter.exact=\"saveMessageEdit(message.id)\"\r\n                @keyup.escape=\"cancelMessageEdit\"\r\n              ></textarea>\r\n              <div class=\"edit-actions\">\r\n                <button @click=\"saveMessageEdit(message.id)\" class=\"edit-save-btn\">Enregistrer</button>\r\n                <button @click=\"cancelMessageEdit\" class=\"edit-cancel-btn\">Annuler</button>\r\n              </div>\r\n            </div>\r\n            <div v-else class=\"message-content\">\r\n              {{message.content}}\r\n              <span v-if=\"message.edited\" class=\"edited-indicator\">(modifié)</span>\r\n            </div>\r\n            \r\n            <!-- Message reactions -->\r\n            <div class=\"message-reactions\">\r\n              <!-- Display existing reactions -->\r\n              <div v-if=\"message.reactions && Object.keys(message.reactions).length > 0\" class=\"reactions-list\">\r\n                <div v-for=\"(users, emoji) in message.reactions\" :key=\"emoji\" \r\n                     class=\"reaction-badge\" \r\n                     :class=\"{ 'user-reacted': hasUserReacted(message, emoji) }\"\r\n                     @click=\"toggleReaction(message.id, emoji)\">\r\n                  <span class=\"reaction-emoji\">{{ emoji }}</span>\r\n                  <span class=\"reaction-count\">{{ Object.keys(users).length }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"message-meta\">\r\n              <div class=\"user-info\">\r\n                <span class=\"user-name\">{{ isCurrentUserMessage(message) ? 'Vous' : getUserDisplayName(message.senderId) }}</span>\r\n                <span class=\"timestamp\" v-if=\"message.createdAt\">{{ formatDate(message.createdAt) }}</span>\r\n              </div>\r\n              \r\n              <div class=\"message-actions\" v-if=\"!editingMessageId\">\r\n                <!-- Edit option for own messages -->\r\n                <button v-if=\"isCurrentUserMessage(message)\" @click=\"startEditMessage(message)\" class=\"action-btn\" title=\"Modifier ce message\">\r\n                  <span class=\"edit-icon\">✎</span>\r\n                </button>\r\n                \r\n                <!-- Delete option for own messages -->\r\n                <button v-if=\"isCurrentUserMessage(message)\" @click=\"confirmDeleteMessage(message.id)\" class=\"action-btn delete-btn\" title=\"Supprimer ce message\">\r\n                  <span class=\"delete-icon\">🗑️</span>\r\n                </button>\r\n                \r\n                <!-- Reaction button for all messages -->\r\n                <button @click=\"showReactionPicker(message.id)\" class=\"action-btn\" title=\"Réagir à ce message\">\r\n                  <span class=\"reaction-icon\">😀</span>\r\n                </button>\r\n                \r\n                <!-- Read status information for sent messages - Now always visible -->\r\n                <div v-if=\"isCurrentUserMessage(message)\" class=\"read-status\" @mouseenter=\"showReadReceipts(message)\" @mouseleave=\"hideReadReceipts()\">\r\n                  <span class=\"read-status-icon\" :class=\"getReadStatusClass(message)\">\r\n                    <span v-if=\"getReadCount(message) > 0\" class=\"read-count\">{{ getReadCount(message) }}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Read receipts tooltip -->\r\n        <div v-if=\"showingReadReceiptsFor\" class=\"read-receipts-tooltip\" :style=\"readReceiptsTooltipStyle\">\r\n          <div class=\"read-receipts-content\">\r\n            <div v-if=\"getReadUsersList(showingReadReceiptsFor).length > 0\">\r\n              <strong>Lu par:</strong>\r\n              <ul class=\"read-users-list\">\r\n                <li v-for=\"(info, index) in getReadUsersList(showingReadReceiptsFor)\" :key=\"index\" class=\"read-user-item\">\r\n                  <span class=\"read-user-name\">{{ info.name }}</span>\r\n                  <span class=\"read-timestamp\">{{ formatDate(info.timestamp) }}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div v-if=\"getUnreadUsersList(showingReadReceiptsFor).length > 0\">\r\n              <strong>Pas encore lu par:</strong>\r\n              <ul class=\"unread-users-list\">\r\n                <li v-for=\"(name, index) in getUnreadUsersList(showingReadReceiptsFor)\" :key=\"index\" class=\"unread-user-item\">\r\n                  {{ name }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div v-if=\"getReadUsersList(showingReadReceiptsFor).length === 0 && getUnreadUsersList(showingReadReceiptsFor).length === 0\">\r\n              Aucune information de lecture disponible.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Reaction picker overlay -->\r\n        <div v-if=\"showingReactionsFor\" class=\"reaction-picker\" :style=\"reactionPickerStyle\">\r\n          <div class=\"reaction-picker-content\">\r\n            <button v-for=\"emoji in availableReactions\" :key=\"emoji\" \r\n                    class=\"reaction-btn\" \r\n                    @click=\"addReaction(showingReactionsFor, emoji)\">\r\n              {{ emoji }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Delete confirmation modal -->\r\n        <div v-if=\"showDeleteConfirmation\" class=\"delete-confirmation-modal\">\r\n          <div class=\"delete-modal-content\">\r\n            <h3>Confirmer la suppression</h3>\r\n            <p>Êtes-vous sûr de vouloir supprimer ce message ?</p>\r\n            <div class=\"delete-modal-actions\">\r\n              <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Supprimer</button>\r\n              <button @click=\"cancelDeleteConfirmation\" class=\"delete-cancel-btn\">Annuler</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"message-input-container\">\r\n        <form @submit.prevent=\"sendMessage\" class=\"message-form\">\r\n          <input \r\n            v-model=\"newMessage\" \r\n            type=\"text\" \r\n            placeholder=\"Écrivez votre message ici...\" \r\n            class=\"message-input\"\r\n          />\r\n          <button type=\"submit\" class=\"send-button\">Envoyer</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"loading\">\r\n      Chargement de la discussion...\r\n    </div>\r\n  </div>\r\n  <div v-else class=\"no-discussion-selected\">\r\n    Sélectionnez une discussion pour voir les messages\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch, nextTick, onUnmounted, computed } from 'vue';\r\nimport { \r\n  getFirestore, \r\n  collection, \r\n  doc, \r\n  getDoc, \r\n  updateDoc, \r\n  onSnapshot, \r\n  query, \r\n  orderBy, \r\n  serverTimestamp, \r\n  addDoc, \r\n  setDoc,\r\n  arrayUnion,\r\n  arrayRemove,\r\n  deleteField,\r\n  deleteDoc\r\n} from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nexport default {\r\n  props: {\r\n    discussionId: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  emits: ['hide-discussion'],\r\n  setup(props, { emit }) {\r\n    const discussion = ref(null);\r\n    const responses = ref([]);\r\n    const userNames = ref({});\r\n    const userAvatars = ref({}); \r\n    const userStatuses = ref({});\r\n    const newMessage = ref('');\r\n    const messagesContainer = ref(null);\r\n    const messageElements = ref([]);\r\n    const isScrolledToBottom = ref(true);\r\n    \r\n    // Variables for tracking seen status\r\n    const unreadMessages = ref(new Set());\r\n    const lastVisibleMessageId = ref(null);\r\n    \r\n    // Pour message editing\r\n    const editingMessageId = ref(null);\r\n    const editMessageContent = ref('');\r\n    const editTextarea = ref(null);\r\n    \r\n    // Pour reactions\r\n    const availableReactions = ref(['👍', '❤️', '😂', '😮', '😢', '👏', '🎉', '🤔']);\r\n    const showingReactionsFor = ref(null);\r\n    const reactionPickerPosition = ref({ top: 0, left: 0 });\r\n    \r\n    // Pour read receipts tooltip\r\n    const showingReadReceiptsFor = ref(null);\r\n    const readReceiptsTooltipPosition = ref({ top: 0, left: 0 });\r\n    \r\n    // Pour presence system\r\n    const presenceUnsubscribe = ref(null);\r\n    const userStatusInterval = ref(null);\r\n    const messagesUnsubscribe = ref(null);\r\n    \r\n    // Pour la suppression de message\r\n    const showDeleteConfirmation = ref(false);\r\n    const messageToDelete = ref(null);\r\n    \r\n    // Computed style for reaction picker positioning\r\n    const reactionPickerStyle = computed(() => {\r\n      return {\r\n        top: `${reactionPickerPosition.value.top}px`,\r\n        left: `${reactionPickerPosition.value.left}px`\r\n      };\r\n    });\r\n    \r\n    // Computed style for read receipts tooltip positioning\r\n    const readReceiptsTooltipStyle = computed(() => {\r\n      return {\r\n        top: `${readReceiptsTooltipPosition.value.top}px`,\r\n        left: `${readReceiptsTooltipPosition.value.left}px`\r\n      };\r\n    });\r\n    \r\n    const Hide = () => {\r\n      emit('hide-discussion');\r\n    };\r\n\r\n    const isCurrentUser = (userId) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      return currentUser && currentUser.uid === userId;\r\n    };\r\n\r\n    const isCurrentUserMessage = (message) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      return currentUser && currentUser.uid === message.senderId;\r\n    };\r\n    \r\n    // Generate user initials for avatar placeholder\r\n    const getUserInitials = (userId) => {\r\n      // If it's current user and we don't have their name yet\r\n      if (isCurrentUser(userId)) {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (currentUser && currentUser.displayName) {\r\n          const nameParts = currentUser.displayName.split(' ');\r\n          if (nameParts.length >= 2) {\r\n            return (nameParts[0][0] + nameParts[1][0]).toUpperCase();\r\n          } else if (nameParts.length === 1) {\r\n            return nameParts[0][0].toUpperCase();\r\n          }\r\n        }\r\n        return 'V'; // Vous (default for current user)\r\n      }\r\n      \r\n      // For other users, use their name if we have it\r\n      if (userNames.value[userId]) {\r\n        const nameParts = userNames.value[userId].split(' ');\r\n        if (nameParts.length >= 2) {\r\n          return (nameParts[0][0] + nameParts[1][0]).toUpperCase();\r\n        } else if (nameParts.length === 1) {\r\n          return nameParts[0][0].toUpperCase();\r\n        }\r\n      }\r\n      \r\n      return 'U'; // Unknown (default)\r\n    };\r\n    const isUserOnline = (userId) => {\r\n  return userStatuses.value[userId]?.isOnline || false;\r\n};\r\n    const formatDate = (timestamp) => {\r\n      if (!timestamp) return '';\r\n      \r\n      try {\r\n        const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\r\n        \r\n        const today = new Date();\r\n        const isToday = date.getDate() === today.getDate() && \r\n                         date.getMonth() === today.getMonth() && \r\n                         date.getFullYear() === today.getFullYear();\r\n        \r\n        const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n        const dateOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n        \r\n        if (isToday) {\r\n          return `Aujourd'hui, ${date.toLocaleTimeString(undefined, timeOptions)}`;\r\n        } else {\r\n          return date.toLocaleDateString(undefined, dateOptions) + ', ' + \r\n                 date.toLocaleTimeString(undefined, timeOptions);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error formatting date:\", e);\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    // Handle scroll to track when user is viewing messages\r\n    const handleScroll = () => {\r\n      if (!messagesContainer.value) return;\r\n      \r\n      const { scrollTop, scrollHeight, clientHeight } = messagesContainer.value;\r\n      isScrolledToBottom.value = Math.abs(scrollHeight - clientHeight - scrollTop) < 20;\r\n      \r\n      // Mark messages as read when they appear in viewport\r\n      markVisibleMessagesAsRead();\r\n    };\r\n    \r\n    // Scroll to bottom with optional force parameter\r\n    const scrollToBottom = async (force = false) => {\r\n      await nextTick();\r\n      if (messagesContainer.value && (isScrolledToBottom.value || force)) {\r\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\r\n      }\r\n    };\r\n    \r\n    // Function to mark visible messages as read\r\n    const markVisibleMessagesAsRead = () => {\r\n      if (!messagesContainer.value || responses.value.length === 0) return;\r\n      \r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) return;\r\n       const containerRect = messagesContainer.value.getBoundingClientRect();\r\n      // Get all message elements\r\n      if (!messageElements.value) return;\r\n      let messagesElements = Array.isArray(messageElements.value) \r\n        ? messageElements.value \r\n        : [messageElements.value];\r\n      \r\n      let messageIds = [];\r\n      \r\n      // Check which messages are visible\r\n      messagesElements.forEach(el => {\r\n        if (!el) return;\r\n        \r\n        const rect = el.getBoundingClientRect();\r\n        // Check if element is at least partially visible in container\r\n        if (rect.top < containerRect.bottom && rect.bottom > containerRect.top) {\r\n          const messageId = el.getAttribute('data-message-id');\r\n          if (messageId) {\r\n            messageIds.push(messageId);\r\n          }\r\n        }\r\n      });\r\n      // Mark all visible messages as read\r\n      if (messageIds.length > 0) {\r\n        messageIds.forEach(messageId => {\r\n          const message = responses.value.find(msg => msg.id === messageId);\r\n          // Only mark others' messages as read\r\n          if (message && message.senderId !== currentUser.uid) {\r\n            markMessageAsRead(messageId);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    // Function to mark a message as read\r\n    const markMessageAsRead = async (messageId) => {\r\n      if (!messageId || !props.discussionId) return;\r\n      \r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) return;\r\n      \r\n      try {\r\n        const message = responses.value.find(msg => msg.id === messageId);\r\n        \r\n        // Skip if message is from current user or already read by current user\r\n        if (!message || \r\n            message.senderId === currentUser.uid || \r\n            (message.readBy && message.readBy.includes(currentUser.uid))) {\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const messageRef = doc(db, 'discussions', props.discussionId, 'messages', messageId);\r\n        \r\n        // Update both readBy array and lastReadAt map\r\n        await updateDoc(messageRef, {\r\n          readBy: arrayUnion(currentUser.uid),\r\n          [`lastReadAt.${currentUser.uid}`]: serverTimestamp()\r\n        });\r\n        \r\n        // Update locally if needed\r\n        if (message && !message.readBy) {\r\n          message.readBy = [currentUser.uid];\r\n        } else if (message && !message.readBy.includes(currentUser.uid)) {\r\n          message.readBy.push(currentUser.uid);\r\n        }\r\n        \r\n        if (!message.lastReadAt) {\r\n          message.lastReadAt = {};\r\n        }\r\n        message.lastReadAt[currentUser.uid] = new Date();\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error marking message as read:\", error);\r\n      }\r\n    };\r\n    \r\n    // Get read status class for message indicators\r\n    const getReadStatusClass = (message) => {\r\n      if (!message.readBy) return 'not-read';\r\n      \r\n      // If sent by current user, check if others have read it\r\n      if (isCurrentUserMessage(message)) {\r\n        const readCount = getReadCount(message);\r\n        if (readCount === 0) return 'not-read';\r\n        if (readCount < (discussion.value.participants.length - 1)) return 'partially-read';\r\n        return 'all-read';\r\n      }\r\n      \r\n      // If received, check if current user has read it\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser && message.readBy.includes(currentUser.uid)) {\r\n        return 'read';\r\n      }\r\n      \r\n      return 'not-read';\r\n    };\r\n    \r\n    // Get number of users who've read a message (excluding sender)\r\n    const getReadCount = (message) => {\r\n      if (!message.readBy || !Array.isArray(message.readBy)) return 0;\r\n      \r\n      // Count users who have read the message (excluding the sender)\r\n      return message.readBy.filter(userId => userId !== message.senderId).length;\r\n    };\r\n    \r\n    // Get list of users who have read the message with timestamps\r\n    const getReadUsersList = (message) => {\r\n      if (!message || !message.readBy || !Array.isArray(message.readBy) || !message.lastReadAt) {\r\n        return [];\r\n      }\r\n      \r\n      return message.readBy\r\n        .filter(userId => userId !== message.senderId) // Exclude sender\r\n        .map(userId => ({\r\n          userId,\r\n          name: isCurrentUser(userId) ? 'Vous' : (userNames.value[userId] || 'Utilisateur'),\r\n          timestamp: message.lastReadAt[userId]\r\n        }))\r\n        .sort((a, b) => {\r\n          // Sort by timestamp if available\r\n          if (a.timestamp && b.timestamp) {\r\n            const timeA = a.timestamp.toDate ? a.timestamp.toDate() : new Date(a.timestamp);\r\n            const timeB = b.timestamp.toDate ? b.timestamp.toDate() : new Date(b.timestamp);\r\n            return timeA - timeB;\r\n          }\r\n          return 0;\r\n        });\r\n    };\r\n    \r\n    // Get list of users who haven't read the message yet\r\n    const getUnreadUsersList = (message) => {\r\n      if (!message || !discussion.value || !discussion.value.participants) {\r\n        return [];\r\n      }\r\n      \r\n      // Create a set of user IDs who have read the message\r\n      const readBySet = new Set(message.readBy || []);\r\n      \r\n      // Return names of users who haven't read the message (excluding the sender)\r\n      return discussion.value.participants\r\n        .filter(userId => userId !== message.senderId && !readBySet.has(userId))\r\n        .map(userId => isCurrentUser(userId) ? 'Vous' : (userNames.value[userId] || 'Utilisateur'));\r\n    };\r\n    \r\n    // Show read receipts tooltip\r\n    const showReadReceipts = (message) => {\r\n      showingReadReceiptsFor.value = message;\r\n      \r\n      // Position the tooltip\r\n      nextTick(() => {\r\n        const messageElement = document.querySelector(`[data-message-id=\"${message.id}\"]`);\r\n        if (messageElement && messagesContainer.value) {\r\n          const rect = messageElement.getBoundingClientRect();\r\n          const containerRect = messagesContainer.value.getBoundingClientRect();\r\n          \r\n          readReceiptsTooltipPosition.value = {\r\n            top: rect.bottom - containerRect.top + 5,\r\n            left: rect.right - containerRect.left - 150 // Position from right side\r\n          };\r\n        }\r\n      });\r\n    };\r\n    \r\n    // Hide read receipts tooltip\r\n    const hideReadReceipts = () => {\r\n      showingReadReceiptsFor.value = null;\r\n    };\r\n    \r\n    // Improved function to get user's full name and profile picture from Firestore\r\n    const fetchUserInfo = async (userId) => {\r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (currentUser && currentUser.uid === userId) {\r\n          let profilePicture = currentUser.photoURL;\r\n          let fullName = currentUser.displayName || '';\r\n          const db = getFirestore();\r\n          const userRef = doc(db, 'users', userId);\r\n          const userSnap = await getDoc(userRef);\r\n          \r\n          if (userSnap.exists()) {\r\n            const userData = userSnap.data();\r\n            \r\n            // Get full name if not already available\r\n            if (!fullName) {\r\n              fullName = `${userData.firstName || ''} ${userData.lastName || ''}`.trim();\r\n            }\r\n            \r\n            // Profile picture - use profileImageUrl attribute\r\n            if (userData.profileImageUrl) {\r\n              profilePicture = userData.profileImageUrl;\r\n            }\r\n          }\r\n          \r\n          return { fullName, profilePicture };\r\n        } else {\r\n          // For other users, check Firestore\r\n          const db = getFirestore();\r\n          const userRef = doc(db, 'users', userId);\r\n          const userSnap = await getDoc(userRef);\r\n          \r\n          if (userSnap.exists()) {\r\n            const userData = userSnap.data();\r\n            \r\n            // Get full name\r\n            const fullName = `${userData.firstName || ''} ${userData.lastName || ''}`.trim();\r\n            \r\n            // Get profile picture URL - use profileImageUrl attribute\r\n            const profilePicture = userData.profileImageUrl || null;\r\n            \r\n            return { fullName, profilePicture };\r\n          }\r\n        }\r\n        return { fullName: null, profilePicture: null };\r\n      } catch (error) {\r\n        console.error(`Error fetching user info for ${userId}:`, error);\r\n        return { fullName: null, profilePicture: null };\r\n      }\r\n    };\r\n    \r\n    // Get user display name with caching\r\n    const getUserDisplayName = (userId) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser && currentUser.uid === userId) {\r\n        return 'Vous';\r\n      }\r\n      \r\n      if (userNames.value[userId]) {\r\n        return userNames.value[userId];\r\n      }\r\n      \r\n      // Otherwise fetch it and update cache\r\n      fetchUserInfo(userId).then(userInfo => {\r\n        if (userInfo.fullName) {\r\n          userNames.value[userId] = userInfo.fullName;\r\n        } else {\r\n          userNames.value[userId] = userId;\r\n        }\r\n        \r\n        // Also update avatar if available\r\n        if (userInfo.profilePicture) {\r\n          userAvatars.value[userId] = userInfo.profilePicture;\r\n        }\r\n      }).catch(() => {\r\n        userNames.value[userId] = userId; \r\n      });\r\n      \r\n      return userNames.value[userId] || 'Chargement...';\r\n    };\r\n    \r\n    // Load all user info for participants with refreshed data\r\n    const loadAllUserInfo = async (userIds) => {\r\n      const uniqueIds = [...new Set(userIds)];\r\n      for (const userId of uniqueIds) {\r\n        const userInfo = await fetchUserInfo(userId);\r\n        \r\n        if (userInfo.fullName) {\r\n          userNames.value[userId] = userInfo.fullName;\r\n        } else {\r\n          userNames.value[userId] = userId;\r\n        }\r\n        \r\n        if (userInfo.profilePicture) {\r\n          userAvatars.value[userId] = userInfo.profilePicture;\r\n        }\r\n      }\r\n\r\n      // Make sure current user's info is up to date\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        const userInfo = await fetchUserInfo(currentUser.uid);\r\n        if (userInfo.profilePicture) {\r\n          userAvatars.value[currentUser.uid] = userInfo.profilePicture;\r\n        } else if (currentUser.photoURL) {\r\n          userAvatars.value[currentUser.uid] = currentUser.photoURL;\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Message editing functions\r\n    const startEditMessage = async (message) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (!currentUser || currentUser.uid !== message.senderId) {\r\n        return; \r\n      }\r\n      editingMessageId.value = message.id;\r\n      editMessageContent.value = message.content;\r\n      \r\n      // Focus the edit textarea after it renders\r\n      await nextTick();\r\n      if (editTextarea.value) {\r\n        if (Array.isArray(editTextarea.value)) {\r\n          if (editTextarea.value[0]) {\r\n            editTextarea.value[0].focus();\r\n          }\r\n        } else {\r\n          editTextarea.value.focus();\r\n        }\r\n      }\r\n    };\r\n    \r\n    const saveMessageEdit = async (messageId) => {\r\n      if (!editMessageContent.value.trim()) {\r\n        return; // Don't save empty messages\r\n      }\r\n      \r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          alert(\"Vous devez être connecté pour modifier un message\");\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const messageRef = doc(db, 'discussions', props.discussionId, 'messages', messageId);\r\n        \r\n        await updateDoc(messageRef, {\r\n          content: editMessageContent.value.trim(),\r\n          edited: true,\r\n          editedAt: serverTimestamp()\r\n        });\r\n        \r\n        // Reset editing state\r\n        editingMessageId.value = null;\r\n        editMessageContent.value = '';\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la modification du message:\", error);\r\n        alert(\"Une erreur s'est produite lors de la modification du message\");\r\n      }\r\n    };\r\n    \r\n    const cancelMessageEdit = () => {\r\n      editingMessageId.value = null;\r\n      editMessageContent.value = '';\r\n    };\r\n    \r\n    // Message deletion functions\r\n    const confirmDeleteMessage = (messageId) => {\r\n      messageToDelete.value = messageId;\r\n      showDeleteConfirmation.value = true;\r\n    };\r\n    \r\n    const cancelDeleteConfirmation = () => {\r\n      messageToDelete.value = null;\r\n      showDeleteConfirmation.value = false;\r\n    };\r\n    \r\n    const deleteMessage = async () => {\r\n      if (!messageToDelete.value) return;\r\n      \r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          alert(\"Vous devez être connecté pour supprimer un message\");\r\n          return;\r\n        }\r\n        \r\n        const message = responses.value.find(msg => msg.id === messageToDelete.value);\r\n        \r\n        // Verify user owns this message\r\n        if (!message || message.senderId !== currentUser.uid) {\r\n          alert(\"Vous ne pouvez supprimer que vos propres messages\");\r\n          cancelDeleteConfirmation();\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const messageRef = doc(db, 'discussions', props.discussionId, 'messages', messageToDelete.value);\r\n        \r\n        // Delete the message document\r\n        await deleteDoc(messageRef);\r\n        \r\n        // If this was the last message in the discussion, update the discussion's lastActivity\r\n        const lastMessage = responses.value[responses.value.length - 1];\r\n        if (lastMessage && lastMessage.id === messageToDelete.value) {\r\n          // Find the new last message\r\n          const newLastMessage = responses.value[responses.value.length - 2];\r\n          \r\n          if (newLastMessage) {\r\n            // Update discussion with info from the new last message\r\n            await updateDoc(doc(db, 'discussions', props.discussionId), {\r\n              lastActivity: newLastMessage.createdAt,\r\n              lastMessageSenderId: newLastMessage.senderId,\r\n              lastMessageText: newLastMessage.content.substring(0, 100)\r\n            });\r\n          } else {\r\n            // No messages left in the discussion\r\n            await updateDoc(doc(db, 'discussions', props.discussionId), {\r\n              lastActivity: serverTimestamp(),\r\n              lastMessageSenderId: null,\r\n              lastMessageText: null\r\n            });\r\n          }\r\n        }\r\n        // Close confirmation modal and clear state\r\n        cancelDeleteConfirmation();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression du message:\", error);\r\n        alert(\"Une erreur s'est produite lors de la suppression du message\");\r\n        cancelDeleteConfirmation();\r\n      }\r\n    };\r\n    \r\n    // Message reaction functions\r\n    const showReactionPicker = (messageId) => {\r\n      showingReactionsFor.value = messageId;\r\n      \r\n      // Position the picker\r\n      nextTick(() => {\r\n        const messageElement = document.querySelector(`[data-message-id=\"${messageId}\"]`);\r\n        if (messageElement && messagesContainer.value) {\r\n          const rect = messageElement.getBoundingClientRect();\r\n          const containerRect = messagesContainer.value.getBoundingClientRect();\r\n          \r\n          reactionPickerPosition.value = {\r\n            top: rect.bottom - containerRect.top + 5,\r\n            left: rect.left - containerRect.left\r\n          };\r\n        }\r\n      });\r\n    };\r\n    \r\n    const addReaction = async (messageId, emoji) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (!currentUser) {\r\n        alert(\"Vous devez être connecté pour réagir à un message\");\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const messageRef = doc(db, 'discussions', props.discussionId, 'messages', messageId);\r\n        \r\n        // Toggle reaction (add if not present, remove if already added)\r\n        const message = responses.value.find(msg => msg.id === messageId);\r\n        const hasReacted = hasUserReacted(message, emoji);\r\n        \r\n        if (hasReacted) {\r\n          // Remove the reaction\r\n          await updateDoc(messageRef, {\r\n            [`reactions.${emoji}.${currentUser.uid}`]: deleteField()\r\n          });\r\n          \r\n          // If there are no other users with this reaction, delete the entire emoji entry\r\n          if (message && message.reactions && message.reactions[emoji]) {\r\n            const usersWithReaction = Object.keys(message.reactions[emoji]).filter(id => id !== currentUser.uid);\r\n            if (usersWithReaction.length === 0) {\r\n              await updateDoc(messageRef, {\r\n                [`reactions.${emoji}`]: deleteField()\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          // Add the reaction with timestamp\r\n          await updateDoc(messageRef, {\r\n            [`reactions.${emoji}.${currentUser.uid}`]: serverTimestamp()\r\n          });\r\n        }\r\n        \r\n        // Close reaction picker\r\n        showingReactionsFor.value = null;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de l'ajout d'une réaction:\", error);\r\n      }\r\n    };\r\n    \r\n    const toggleReaction = (messageId, emoji) => {\r\n      addReaction(messageId, emoji);\r\n    };\r\n    \r\n    const hasUserReacted = (message, emoji) => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (!currentUser || !message || !message.reactions || !message.reactions[emoji]) {\r\n        return false;\r\n      }\r\n      \r\n      return !!message.reactions[emoji][currentUser.uid];\r\n    };\r\n    \r\n    // Send message\r\n    const sendMessage = async () => {\r\n      if (!newMessage.value.trim()) {\r\n        return; // Don't send empty messages\r\n      }\r\n      \r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          alert(\"Vous devez être connecté pour envoyer un message\");\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        \r\n        // Add message to the discussion\r\n        const messageRef = await addDoc(collection(db, 'discussions', props.discussionId, 'messages'), {\r\n          content: newMessage.value.trim(),\r\n          senderId: currentUser.uid,\r\n          createdAt: serverTimestamp(),\r\n          readBy: [currentUser.uid], // Mark as read by sender\r\n          lastReadAt: {\r\n            [currentUser.uid]: serverTimestamp()\r\n          }\r\n        });\r\n        \r\n        // Update discussion with new last activity\r\n        await updateDoc(doc(db, 'discussions', props.discussionId), {\r\n          lastActivity: serverTimestamp(),\r\n          lastMessageSenderId: currentUser.uid,\r\n          lastMessageText: newMessage.value.trim().substring(0, 100)\r\n        });\r\n        \r\n        // Clear input\r\n        newMessage.value = '';\r\n        \r\n        // Force scroll to bottom for new messages\r\n        scrollToBottom(true);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de l'envoi du message:\", error);\r\n        alert(\"Une erreur s'est produite lors de l'envoi du message\");\r\n      }\r\n    };\r\n    \r\n    // User presence handling\r\n    const updateUserPresence = async () => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser || !props.discussionId) return;\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const presenceRef = doc(db, 'presence', currentUser.uid);\r\n        \r\n        // Update user's online status\r\n        await setDoc(presenceRef, {\r\n          userId: currentUser.uid,\r\n          online: true,\r\n          lastActive: serverTimestamp(),\r\n          currentDiscussion: props.discussionId\r\n        }, { merge: true });\r\n      } catch (error) {\r\n        console.error(\"Error updating presence:\", error);\r\n      }\r\n    };\r\n    \r\n    // Listen for presence changes of all participants\r\n    const listenToPresence = () => {\r\n      if (!discussion.value || !discussion.value.participants) return;\r\n      \r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      // Clear previous listener if any\r\n      if (presenceUnsubscribe.value) {\r\n        presenceUnsubscribe.value();\r\n        presenceUnsubscribe.value = null;\r\n      }\r\n      \r\n      // Set up listeners for all participants\r\n      const listeners = discussion.value.participants.map(userId => {\r\n        const presenceRef = doc(db, 'presence', userId);\r\n        \r\n        return onSnapshot(presenceRef, (doc) => {\r\n          if (doc.exists()) {\r\n            const presenceData = doc.data();\r\n            // Update user status\r\n            userStatuses.value[userId] = {\r\n              isOnline: presenceData.online || false,\r\n              lastActive: presenceData.lastActive,\r\n              currentDiscussion: presenceData.currentDiscussion\r\n            };\r\n          } else {\r\n            // User has no presence record\r\n            userStatuses.value[userId] = {\r\n              isOnline: false,\r\n              lastActive: null,\r\n              currentDiscussion: null\r\n            };\r\n          }\r\n        }, (error) => {\r\n          console.error(`Error listening to presence for ${userId}:`, error);\r\n        });\r\n      });\r\n      \r\n      // Combine unsubscribe functions\r\n      presenceUnsubscribe.value = () => {\r\n        listeners.forEach(unsubscribe => unsubscribe());\r\n      };\r\n      \r\n      // Set current user as online immediately\r\n      if (currentUser) {\r\n        userStatuses.value[currentUser.uid] = {\r\n          isOnline: true,\r\n          lastActive: new Date(),\r\n          currentDiscussion: props.discussionId\r\n        };\r\n      }\r\n    };\r\n    \r\n    // Load discussion data\r\n    const loadDiscussion = async () => {\r\n      if (!props.discussionId) return;\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const discussionDoc = await getDoc(doc(db, 'discussions', props.discussionId));\r\n        \r\n        if (discussionDoc.exists()) {\r\n          discussion.value = { id: discussionDoc.id, ...discussionDoc.data() };\r\n          \r\n          // Load profile info for all participants\r\n          if (discussion.value.participants && discussion.value.participants.length > 0) {\r\n            await loadAllUserInfo(discussion.value.participants);\r\n          }\r\n          \r\n          // Set up presence tracking\r\n          listenToPresence();\r\n          \r\n          // Load messages\r\n          loadMessages();\r\n        } else {\r\n          console.error(\"Discussion not found\");\r\n          discussion.value = null;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading discussion:\", error);\r\n        discussion.value = null;\r\n      }\r\n    };\r\n    \r\n    // Load messages with real-time updates\r\n    const loadMessages = () => {\r\n      if (!props.discussionId) return;\r\n      \r\n      // Clean up existing listener if any\r\n      if (messagesUnsubscribe.value) {\r\n        messagesUnsubscribe.value();\r\n        messagesUnsubscribe.value = null;\r\n      }\r\n      \r\n      const db = getFirestore();\r\n      const messagesQuery = query(\r\n        collection(db, 'discussions', props.discussionId, 'messages'), \r\n        orderBy('createdAt', 'asc')\r\n      );\r\n      \r\n      // Set up the listener\r\n      messagesUnsubscribe.value = onSnapshot(messagesQuery, (snapshot) => {\r\n        // Check if we got results\r\n        if (snapshot.empty) {\r\n          responses.value = [];\r\n          return;\r\n        }\r\n        \r\n        let newMessages = [];\r\n        let userIdsToLoad = new Set();\r\n        \r\n        snapshot.forEach(doc => {\r\n          const messageData = { id: doc.id, ...doc.data() };\r\n          newMessages.push(messageData);\r\n          \r\n          // Collect user IDs we need to load info for\r\n          if (messageData.senderId) {\r\n            userIdsToLoad.add(messageData.senderId);\r\n          }\r\n        });\r\n        \r\n        // Update messages array\r\n        responses.value = newMessages;\r\n        \r\n        // Load missing user info for message senders\r\n        loadAllUserInfo([...userIdsToLoad]);\r\n        \r\n        // Scroll to bottom if we're already at the bottom or for first load\r\n        scrollToBottom();\r\n        \r\n        // Mark visible messages as read after a short delay\r\n        setTimeout(() => {\r\n          markVisibleMessagesAsRead();\r\n        }, 1000);\r\n      }, (error) => {\r\n        console.error(\"Error loading messages:\", error);\r\n      });\r\n    };\r\n    \r\n    // Watch for discussion ID changes\r\n    watch(() => props.discussionId, (newDiscussionId, oldDiscussionId) => {\r\n      if (newDiscussionId && newDiscussionId !== oldDiscussionId) {\r\n        // Clear old data\r\n        discussion.value = null;\r\n        responses.value = [];\r\n        \r\n        // Load new discussion\r\n        loadDiscussion();\r\n      } else if (!newDiscussionId) {\r\n        // Clear data if no discussion is selected\r\n        discussion.value = null;\r\n        responses.value = [];\r\n      }\r\n    }, { immediate: true });\r\n    \r\n    // Set up regular presence updates\r\n    onMounted(() => {\r\n      // Update presence immediately\r\n      updateUserPresence();\r\n      \r\n      // Set up interval for regular updates\r\n      userStatusInterval.value = setInterval(() => {\r\n        updateUserPresence();\r\n      }, 60000); // Update every minute\r\n    });\r\n    \r\n    // Clean up when unmounting\r\n    onUnmounted(() => {\r\n      // Clear presence update interval\r\n      if (userStatusInterval.value) {\r\n        clearInterval(userStatusInterval.value);\r\n        userStatusInterval.value = null;\r\n      }\r\n      \r\n      // Clean up presence listener\r\n      if (presenceUnsubscribe.value) {\r\n        presenceUnsubscribe.value();\r\n        presenceUnsubscribe.value = null;\r\n      }\r\n      \r\n      // Clean up messages listener\r\n      if (messagesUnsubscribe.value) {\r\n        messagesUnsubscribe.value();\r\n        messagesUnsubscribe.value = null;\r\n      }\r\n      \r\n      // Set user as offline when leaving\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        try {\r\n          const db = getFirestore();\r\n          const presenceRef = doc(db, 'presence', currentUser.uid);\r\n          setDoc(presenceRef, {\r\n            online: false,\r\n            lastActive: serverTimestamp(),\r\n            currentDiscussion: null\r\n          }, { merge: true });\r\n        } catch (error) {\r\n          console.error(\"Error updating offline status:\", error);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return {\r\n      discussion,\r\n      responses,\r\n      userNames,\r\n      userAvatars,\r\n      userStatuses,\r\n      newMessage,\r\n      messagesContainer,\r\n      messageElements,\r\n      isScrolledToBottom,\r\n      editingMessageId,\r\n      editMessageContent,\r\n      editTextarea,\r\n      availableReactions,\r\n      showingReactionsFor,\r\n      reactionPickerStyle,\r\n      showingReadReceiptsFor,\r\n      readReceiptsTooltipStyle,\r\n      showDeleteConfirmation,\r\n      Hide,\r\n      handleScroll,\r\n      sendMessage,\r\n      formatDate,\r\n      isCurrentUser,\r\n      isCurrentUserMessage,\r\n      getUserInitials,\r\n      startEditMessage,\r\n      saveMessageEdit,\r\n      cancelMessageEdit,\r\n      confirmDeleteMessage,\r\n      cancelDeleteConfirmation,\r\n      deleteMessage,\r\n      showReactionPicker,\r\n      addReaction,\r\n      toggleReaction,\r\n      hasUserReacted,\r\n      getReadStatusClass,\r\n      getReadCount,\r\n      getReadUsersList,\r\n      getUnreadUsersList,\r\n      showReadReceipts,\r\n      hideReadReceipts,\r\n      getUserDisplayName,\r\n      isUserOnline\r\n\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.back-button {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  margin-bottom: 16px;\r\n  background-color: #f5f5f5;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 120px);\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n}\r\n\r\n.discussion-header {\r\n  padding: 16px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.discussion-header h2 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n\r\n.discussion-header p {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Stylish participants bar */\r\n.participants-bar {\r\n  display: flex;\r\n  padding: 10px 16px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background-color: #f5f5f5;\r\n  align-items: center;\r\n}\r\n\r\n.participants-label {\r\n  font-weight: 500;\r\n  margin-right: 16px;\r\n  color: #555;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.participants-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n  overflow-x: auto;\r\n  max-width: calc(100% - 100px);\r\n  padding-bottom: 4px;\r\n}\r\n\r\n.participant-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 80px;\r\n}\r\n\r\n.participant-avatar {\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 4px;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.avatar-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.user-initials {\r\n  font-weight: bold;\r\n  color: #555;\r\n  font-size: 16px;\r\n}\r\n\r\n.participant-name {\r\n  font-size: 12px;\r\n  color: #666;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  border: 2px solid #f5f5f5;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.status-indicator.offline {\r\n  background-color: #9e9e9e;\r\n}\r\n\r\n.messages-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: #888;\r\n  margin-top: 40px;\r\n  font-style: italic;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  position: relative;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 12px;\r\n  align-self: flex-start;\r\n}\r\n\r\n.user-avatar {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.avatar-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.avatar-placeholder {\r\n  font-weight: bold;\r\n  color: #555;\r\n  font-size: 14px;\r\n}\r\n\r\n.message-bubble {\r\n  flex: 1;\r\n  position: relative;\r\n  padding: 12px 16px;\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  max-width: 80%;\r\n}\r\n\r\n.sender-message .message-bubble {\r\n  background-color: #e3f2fd;\r\n  margin-left: auto;\r\n}\r\n\r\n.message-content {\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  word-break: break-word;\r\n}\r\n\r\n.edited-indicator {\r\n  font-size: 11px;\r\n  color: #888;\r\n  margin-left: 4px;\r\n}\r\n\r\n.message-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 6px;\r\n  font-size: 12px;\r\n  color: #888;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-name {\r\n  font-weight: 500;\r\n  margin-right: 8px;\r\n}\r\n\r\n.timestamp {\r\n  color: #aaa;\r\n}\r\n\r\n.message-actions {\r\n  display: flex;\r\n  gap: 6px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.message:hover .message-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.action-btn {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  color: #757575;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.action-btn:hover {\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  color: #424242;\r\n}\r\n\r\n.delete-btn:hover {\r\n  color: #f44336;\r\n}\r\n\r\n/* Message reactions */\r\n.message-reactions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  margin-top: 6px;\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n}\r\n\r\n.reaction-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f0f0f0;\r\n  border-radius: 12px;\r\n  padding: 2px 6px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-badge:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.reaction-badge.user-reacted {\r\n  background-color: #e3f2fd;\r\n}\r\n\r\n.reaction-emoji {\r\n  margin-right: 4px;\r\n}\r\n\r\n.reaction-count {\r\n  color: #666;\r\n}\r\n\r\n/* Reaction picker */\r\n.reaction-picker {\r\n  position: absolute;\r\n  z-index: 10;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.reaction-picker-content {\r\n  display: flex;\r\n  padding: 6px;\r\n  gap: 8px;\r\n}\r\n\r\n.reaction-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-btn:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n/* Read status indicators */\r\n.read-status {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n  position: relative;\r\n}\r\n\r\n.read-status-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n  position: relative;\r\n}\r\n\r\n.not-read {\r\n  border: 1px solid #bdbdbd;\r\n}\r\n\r\n.read {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.partially-read {\r\n  background-color: #bbdefb;\r\n}\r\n\r\n.all-read {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.read-count {\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Read receipts tooltip */\r\n.read-receipts-tooltip {\r\n  position: absolute;\r\n  z-index: 10;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\r\n  width: 220px;\r\n}\r\n\r\n.read-receipts-content {\r\n  padding: 12px;\r\n  font-size: 12px;\r\n}\r\n\r\n.read-users-list, .unread-users-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 6px 0 12px 0;\r\n}\r\n\r\n.read-user-item, .unread-user-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.read-user-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.read-timestamp {\r\n  color: #888;\r\n}\r\n\r\n/* Edit message interface */\r\n.edit-message-container {\r\n  width: 100%;\r\n}\r\n\r\n.edit-message-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  resize: vertical;\r\n  min-height: 60px;\r\n  font-family: inherit;\r\n}\r\n\r\n.edit-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.edit-save-btn, .edit-cancel-btn {\r\n  padding: 4px 12px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n\r\n.edit-save-btn {\r\n  background-color: #2196f3;\r\n  color: white;\r\n}\r\n\r\n.edit-cancel-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n/* Delete confirmation modal */\r\n.delete-confirmation-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 100;\r\n}\r\n\r\n.delete-modal-content {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 24px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.delete-modal-content h3 {\r\n  margin-top: 0;\r\n  color: #f44336;\r\n}\r\n\r\n.delete-modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.delete-confirm-btn, .delete-cancel-btn {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.delete-confirm-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.delete-cancel-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n/* Message input */\r\n.message-input-container {\r\n  padding: 16px;\r\n  border-top: 1px solid #e0e0e0;\r\n  background-color: #fff;\r\n}\r\n\r\n.message-form {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 10px 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 24px;\r\n  font-size: 14px;\r\n  outline: none;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.message-input:focus {\r\n  border-color: #2196f3;\r\n}\r\n\r\n.send-button {\r\n  background-color: #2196f3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  padding: 0 20px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #1976d2;\r\n}\r\n\r\n.loading, .no-discussion-selected {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n</style>\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  background-color: #ffffff;\r\n}\r\n\r\n.back-button {\r\n  margin: 16px;\r\n  padding: 8px 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f2f2f2;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #e5e5e5;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\n.discussion-header {\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.discussion-header h2 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.discussion-header p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.participants-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  background-color: #f9f9f9;\r\n  border-bottom: 1px solid #eaeaea;\r\n}\r\n\r\n.participants-label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #555;\r\n  margin-right: 16px;\r\n}\r\n\r\n.participants-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n}\r\n\r\n.participant-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.participant-avatar {\r\n  position: relative;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: #e1e1f9;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: #5a5ad2;\r\n}\r\n\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  border: 2px solid #f9f9f9;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.status-indicator.offline {\r\n  background-color: #bdbdbd;\r\n}\r\n\r\n.participant-name {\r\n  font-size: 14px;\r\n  color: #444;\r\n}\r\n\r\n.messages-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n  background-color: #f9f9fb;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #d4d4d4 #f9f9fb;\r\n}\r\n\r\n.messages-container::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.messages-container::-webkit-scrollbar-track {\r\n  background: #f9f9fb;\r\n}\r\n\r\n.messages-container::-webkit-scrollbar-thumb {\r\n  background-color: #d4d4d4;\r\n  border-radius: 10px;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  margin: 40px 0;\r\n  color: #888;\r\n  font-style: italic;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  max-width: 85%;\r\n}\r\n\r\n.sender-message {\r\n  margin-left: auto;\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.receiver-message {\r\n  margin-right: auto;\r\n}\r\n\r\n.message-avatar {\r\n  margin: 0 8px;\r\n  align-self: flex-end;\r\n}\r\n\r\n.user-avatar {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #e1e1f9;\r\n  color: #5a5ad2;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n}\r\n\r\n.avatar-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.avatar-placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.message-bubble {\r\n  padding: 12px 16px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n  max-width: calc(100% - 60px);\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.sender-message .message-bubble {\r\n  background-color: #e7f3ff;\r\n  color: #333;\r\n  border-bottom-right-radius: 4px;\r\n}\r\n\r\n.receiver-message .message-bubble {\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  border-bottom-left-radius: 4px;\r\n}\r\n\r\n.message-content {\r\n  margin-bottom: 6px;\r\n  word-wrap: break-word;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.edited-indicator {\r\n  font-size: 12px;\r\n  color: #a0a0a0;\r\n  margin-left: 6px;\r\n}\r\n\r\n.message-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 6px;\r\n}\r\n\r\n.user-info {\r\n  font-size: 12px;\r\n  color: #888;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-name {\r\n  margin-right: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 11px;\r\n}\r\n\r\n.message-actions {\r\n  display: flex;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.message:hover .message-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.action-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #999;\r\n  cursor: pointer;\r\n  margin-left: 6px;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.action-btn:hover {\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  color: #666;\r\n}\r\n\r\n.delete-btn:hover {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.read-status {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 6px;\r\n  cursor: pointer;\r\n}\r\n\r\n.read-status-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n  position: relative;\r\n}\r\n\r\n.read-status-icon.not-read {\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.read-status-icon.partially-read {\r\n  background-color: #e6f7ff;\r\n  border: 1px solid #91d5ff;\r\n}\r\n\r\n.read-status-icon.all-read {\r\n  background-color: #52c41a;\r\n  color: white;\r\n}\r\n\r\n.read-count {\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.message-reactions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 4px;\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n}\r\n\r\n.reaction-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 2px 6px;\r\n  border-radius: 12px;\r\n  background-color: #f0f0f0;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-badge:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.reaction-badge.user-reacted {\r\n  background-color: #e6f7ff;\r\n  border: 1px solid #91d5ff;\r\n}\r\n\r\n.reaction-emoji {\r\n  margin-right: 4px;\r\n}\r\n\r\n.reaction-count {\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n}\r\n\r\n.reaction-picker {\r\n  position: absolute;\r\n  z-index: 10;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  padding: 8px;\r\n}\r\n\r\n.reaction-picker-content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n}\r\n\r\n.reaction-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 6px;\r\n  border-radius: 6px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-btn:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.read-receipts-tooltip {\r\n  position: absolute;\r\n  z-index: 10;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  padding: 12px;\r\n  width: 220px;\r\n  font-size: 13px;\r\n}\r\n\r\n.read-receipts-content {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.read-users-list, .unread-users-list {\r\n  margin: 8px 0;\r\n  padding-left: 16px;\r\n}\r\n\r\n.read-user-item, .unread-user-item {\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.read-user-name {\r\n  font-weight: 500;\r\n  margin-right: 8px;\r\n}\r\n\r\n.read-timestamp {\r\n  color: #999;\r\n  font-size: 11px;\r\n}\r\n\r\n.edit-message-container {\r\n  width: 100%;\r\n}\r\n\r\n.edit-message-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  resize: vertical;\r\n  min-height: 60px;\r\n  font-family: inherit;\r\n  font-size: 14px;\r\n}\r\n\r\n.edit-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 8px;\r\n  gap: 8px;\r\n}\r\n\r\n.edit-save-btn, .edit-cancel-btn {\r\n  padding: 4px 12px;\r\n  border-radius: 4px;\r\n  font-size: 13px;\r\n  cursor: pointer;\r\n}\r\n\r\n.edit-save-btn {\r\n  background-color: #1890ff;\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.edit-cancel-btn {\r\n  background-color: #f5f5f5;\r\n  border: 1px solid #d9d9d9;\r\n  color: #333;\r\n}\r\n\r\n.delete-confirmation-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 20;\r\n}\r\n\r\n.delete-modal-content {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 320px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.delete-modal-content h3 {\r\n  margin-top: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n  gap: 12px;\r\n}\r\n\r\n.delete-confirm-btn, .delete-cancel-btn {\r\n  padding: 6px 14px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n}\r\n\r\n.delete-confirm-btn {\r\n  background-color: #ff4d4f;\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.delete-cancel-btn {\r\n  background-color: #f5f5f5;\r\n  border: 1px solid #d9d9d9;\r\n  color: #333;\r\n}\r\n\r\n.message-input-container {\r\n  padding: 16px;\r\n  background-color: #ffffff;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.message-form {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 12px 16px;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 24px;\r\n  font-size: 14px;\r\n  outline: none;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.message-input:focus {\r\n  border-color: #1890ff;\r\n}\r\n\r\n.send-button {\r\n  background-color: #1890ff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  padding: 0 18px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #40a9ff;\r\n}\r\n\r\n.no-discussion-selected {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #999;\r\n  font-size: 16px;\r\n  font-style: italic;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  color: #888;\r\n}\r\n</style>\r\n<style scoped>\r\n/* Base styles */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 120px);\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin: 10px;\r\n  position: relative;\r\n}\r\n\r\n.discussion-info {\r\n  padding: 15px;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\nh2 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 1.5rem;\r\n  color: #333;\r\n}\r\n\r\n.messages-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n  position: relative;\r\n}\r\n\r\n.message-input-container {\r\n  padding: 15px;\r\n  background-color: #ffffff;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.message-form {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  outline: none;\r\n  transition: border 0.3s;\r\n}\r\n\r\n.message-input:focus {\r\n  border-color: #4a90e2;\r\n}\r\n\r\n.send-button {\r\n  background-color: #4a90e2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 0 20px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #3a7fcb;\r\n}\r\n\r\n/* Message styles */\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n}\r\n\r\n.sender-message {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.message-bubble {\r\n  max-width: 70%;\r\n  padding: 12px 15px;\r\n  border-radius: 18px;\r\n  position: relative;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.sender-message .message-bubble {\r\n  background-color: #d1e7ff;\r\n  border-top-right-radius: 2px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.receiver-message .message-bubble {\r\n  background-color: #ffffff;\r\n  border-top-left-radius: 2px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.message-content {\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  word-break: break-word;\r\n}\r\n\r\n.message-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 5px;\r\n  font-size: 11px;\r\n  color: #888;\r\n}\r\n\r\n.user-name {\r\n  font-weight: 500;\r\n  margin-right: 5px;\r\n}\r\n\r\n.timestamp {\r\n  color: #aaa;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: #888;\r\n  margin-top: 40px;\r\n}\r\n\r\n.back-button {\r\n  display: flex;\r\n  align-items: center;\r\n  background: none;\r\n  border: none;\r\n  color: #4a90e2;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  padding: 10px;\r\n  margin: 5px;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.no-discussion-selected {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n  color: #666;\r\n  font-size: 16px;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n  color: #666;\r\n}\r\n\r\n/* User avatar styles */\r\n.message-avatar {\r\n  margin: 0 8px;\r\n}\r\n\r\n.user-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-avatar.small {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.avatar-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.avatar-placeholder {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #666;\r\n}\r\n\r\n.user-avatar.small .avatar-placeholder {\r\n  font-size: 12px;\r\n}\r\n\r\n/* Message actions */\r\n.message-actions {\r\n  display: flex;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.message:hover .message-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.action-btn {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  margin-left: 8px;\r\n  color: #888;\r\n  font-size: 14px;\r\n}\r\n\r\n.action-btn:hover {\r\n  color: #4a90e2;\r\n}\r\n\r\n/* Edit message styles */\r\n.edit-message-container {\r\n  width: 100%;\r\n}\r\n\r\n.edit-message-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  resize: vertical;\r\n  min-height: 60px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.edit-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 8px;\r\n}\r\n\r\n.edit-save-btn, .edit-cancel-btn {\r\n  padding: 4px 10px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.edit-save-btn {\r\n  background-color: #4a90e2;\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.edit-cancel-btn {\r\n  background-color: transparent;\r\n  border: 1px solid #ccc;\r\n  color: #666;\r\n}\r\n\r\n.edited-indicator {\r\n  font-size: 11px;\r\n  color: #888;\r\n  margin-left: 5px;\r\n  font-style: italic;\r\n}\r\n\r\n/* Reaction styles */\r\n.reaction-picker {\r\n  position: absolute;\r\n  z-index: 100;\r\n  background-color: white;\r\n  border-radius: 24px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\r\n  padding: 8px;\r\n}\r\n\r\n.reaction-picker-content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.reaction-btn {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-btn:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.message-reactions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 5px;\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n}\r\n\r\n.reaction-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f1f1f1;\r\n  border-radius: 12px;\r\n  padding: 3px 6px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.reaction-badge.user-reacted {\r\n  background-color: #e1f0ff;\r\n}\r\n\r\n.reaction-badge:hover {\r\n  background-color: #e5e5e5;\r\n}\r\n\r\n.reaction-badge.user-reacted:hover {\r\n  background-color: #d1e6ff;\r\n}\r\n\r\n.reaction-emoji {\r\n  font-size: 14px;\r\n  margin-right: 3px;\r\n}\r\n\r\n.reaction-count {\r\n  font-size: 11px;\r\n  color: #666;\r\n}\r\n\r\n/* User status section */\r\n.active-users {\r\n  margin-top: 15px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.status-heading {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.user-status {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.status-indicator {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  margin: 0 8px;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.status-indicator.offline {\r\n  background-color: #ccc;\r\n}\r\n\r\n.status-name {\r\n  font-size: 13px;\r\n  color: #333;\r\n}\r\n\r\n.status-activity {\r\n  font-size: 12px;\r\n  color: #888;\r\n  font-style: italic;\r\n  margin-left: 5px;\r\n}\r\n/* Participants display styling */\r\n.discussion-header {\r\n  padding: 15px 15px 5px 15px;\r\n}\r\n\r\n.participants-bar {\r\n  padding: 5px 15px 15px 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.participants-label {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.participants-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.participant-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 60px;\r\n}\r\n\r\n.participant-avatar {\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #e5e5e5;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.user-initials {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #555;\r\n}\r\n\r\n.participant-name {\r\n  font-size: 12px;\r\n  color: #666;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n}\r\n\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  border: 2px solid #fff;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.status-indicator.offline {\r\n  background-color: #ccc;\r\n}\r\n\r\n/* You can add additional responsive adjustments if needed */\r\n@media (max-width: 640px) {\r\n  .participants-list {\r\n    gap: 5px;\r\n  }\r\n  \r\n  .participant-item {\r\n    width: 50px;\r\n  }\r\n  \r\n  .participant-avatar {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n  \r\n  .user-initials {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .participant-name {\r\n    font-size: 11px;\r\n  }\r\n}\r\n\r\n</style>","import { render } from \"./Responses.vue?vue&type=template&id=5ea10e8d&scoped=true\"\nimport script from \"./Responses.vue?vue&type=script&lang=js\"\nexport * from \"./Responses.vue?vue&type=script&lang=js\"\n\nimport \"./Responses.vue?vue&type=style&index=0&id=5ea10e8d&scoped=true&lang=css\"\nimport \"./Responses.vue?vue&type=style&index=1&id=5ea10e8d&scoped=true&lang=css\"\nimport \"./Responses.vue?vue&type=style&index=2&id=5ea10e8d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5ea10e8d\"]])\n\nexport default __exports__","import { render } from \"./Forum.vue?vue&type=template&id=0acf6597&scoped=true\"\nimport script from \"./Forum.vue?vue&type=script&lang=js\"\nexport * from \"./Forum.vue?vue&type=script&lang=js\"\n\nimport \"./Forum.vue?vue&type=style&index=0&id=0acf6597&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0acf6597\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-header\">\r\n      <h2>Profile Page</h2>\r\n      <div class=\"status-indicator\">\r\n        <span class=\"status-label\">Status:</span>\r\n        <span class=\"status-value\" :class=\"{ 'online': isOnline }\">\r\n          {{ isOnline ? 'Online' : 'Offline' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"profile-form\">\r\n      <div class=\"profile-picture-section\">\r\n        <div class=\"profile-picture-container\">\r\n          <img \r\n            :src=\"profileImageUrl || '/default-avatar.png'\" \r\n            alt=\"Profile Picture\" \r\n            class=\"profile-picture\"\r\n            @error=\"handleImageError\"\r\n          />\r\n          <div v-if=\"isUploading\" class=\"upload-overlay\">\r\n            <div class=\"upload-progress\">{{ uploadProgress }}%</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"profile-picture-actions\">\r\n          <!-- Image URL input form -->\r\n          <div class=\"image-url-form\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"imageUrlInput\" \r\n              placeholder=\"Enter image URL\" \r\n              class=\"image-url-input\"\r\n            >\r\n            <button \r\n              @click=\"setImageFromUrl\" \r\n              class=\"url-button\"\r\n              :disabled=\"isUploading || !imageUrlInput\"\r\n            >\r\n              Set Image\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"or-divider\">- OR -</div>\r\n          \r\n          <label for=\"profilePicture\" class=\"upload-button\">\r\n            <span class=\"upload-icon\">📷</span> Choose Photo\r\n          </label>\r\n          <input \r\n            id=\"profilePicture\" \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            @change=\"handleImageUpload\" \r\n            class=\"file-input\"\r\n          >\r\n          <button \r\n            v-if=\"profileImageUrl\" \r\n            @click=\"removeProfilePicture\" \r\n            class=\"remove-button\"\r\n            :disabled=\"isUploading\"\r\n          >\r\n            Remove Photo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          v-model=\"FirstName\"\r\n          :placeholder=\"FirstName || 'Enter your first name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input \r\n          id=\"lastName\"\r\n          type=\"text\" \r\n          v-model=\"LastName\" \r\n          :placeholder=\"LastName || 'Enter your last name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"currentPassword\">Current Password</label>\r\n        <input \r\n          id=\"currentPassword\"\r\n          type=\"password\" \r\n          v-model=\"oldPass\" \r\n          placeholder=\"Enter current password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\">New Password</label>\r\n        <input \r\n          id=\"newPassword\"\r\n          type=\"password\" \r\n          v-model=\"newPass\" \r\n          placeholder=\"Enter new password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newEmail\">Email</label>\r\n        <p class=\"email-help\">Type new email here if you want to change yours</p>\r\n        <input\r\n          id=\"newEmail\" \r\n          type=\"email\" \r\n          v-model=\"newEmail\" \r\n          :placeholder=\"Email\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-actions\">\r\n        <button @click=\"updateProfile\" class=\"save-button\" :disabled=\"isUploading\">Save Changes</button>\r\n      </div>\r\n      \r\n      \r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    </div>\r\n    \r\n    <div class=\"navigation-links\">\r\n      <router-link :to=\"`/forum/${userId}`\" class=\"back-link\">\r\n        <span class=\"back-icon\">←</span> Return to Discussions\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAuth,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  updatePassword,\r\n  updateEmail,\r\n  sendEmailVerification,\r\n  updateProfile as updateAuthProfile\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const FirstName = ref('');\r\n    const LastName = ref('');\r\n    const oldPass = ref('');\r\n    const newPass = ref('');\r\n    const newEmail = ref('');\r\n    const userId = ref(null);\r\n    const successMessage = ref('');\r\n    const errorMessage = ref('');\r\n    const Email = ref('');\r\n    const emailVerified = ref(false);\r\n    const isOnline = ref(false);\r\n    const profileImageUrl = ref('');\r\n    const isUploading = ref(false);\r\n    const uploadProgress = ref(0);\r\n    const profileImagePath = ref('');\r\n    const imageUrlInput = ref('');\r\n    const isImageUrlInvalid = ref(false);\r\n    \r\n    const fetchUserData = async () => {\r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        userId.value = currentUser?.uid || route.params.userid;\r\n        \r\n        if (!userId.value) {\r\n          errorMessage.value = \"No user ID found. Please log in.\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const userDoc = await getDoc(doc(db, \"users\", userId.value));\r\n        \r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n          FirstName.value = userData.FirstName || '';\r\n          LastName.value = userData.LastName || '';\r\n          Email.value = userData.Email || currentUser?.email || '';\r\n          isOnline.value = userData.isOnline || false;\r\n          \r\n          // Only set the profile image URL if it exists in the database\r\n          if (userData.profileImageUrl) {\r\n            profileImageUrl.value = userData.profileImageUrl;\r\n            profileImagePath.value = userData.profileImagePath || '';\r\n          }\r\n          \r\n          emailVerified.value = currentUser?.emailVerified || false;\r\n        } else if (currentUser) {\r\n          // Initialize user document if it doesn't exist\r\n          await setDoc(doc(db, 'users', userId.value), {\r\n            FirstName: '',\r\n            LastName: '',\r\n            Email: currentUser.email,\r\n            isOnline: true,\r\n            profileImageUrl: '',\r\n            profileImagePath: '',\r\n            createdAt: new Date()\r\n          });\r\n          \r\n          Email.value = currentUser.email;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        errorMessage.value = \"Failed to fetch user data: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Function to handle setting image from URL\r\n    const setImageFromUrl = async () => {\r\n      if (!imageUrlInput.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        isUploading.value = true;\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Validate URL format\r\n        try {\r\n          new URL(imageUrlInput.value);\r\n        } catch (e) {\r\n          errorMessage.value = \"Please enter a valid URL\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // If there's an existing image in storage, delete it\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const storage = getStorage();\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        try {\r\n          await updateAuthProfile(currentUser, {\r\n            photoURL: imageUrlInput.value\r\n          });\r\n        } catch (authError) {\r\n          console.error(\"Failed to update auth profile:\", authError);\r\n          // Continue even if this fails\r\n        }\r\n        \r\n        // Update user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: imageUrlInput.value,\r\n          profileImagePath: 'external_url', // Mark as external URL\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        profileImageUrl.value = imageUrlInput.value;\r\n        profileImagePath.value = 'external_url';\r\n        successMessage.value = \"Profile picture updated successfully!\";\r\n        \r\n        // Clear the input\r\n        imageUrlInput.value = '';\r\n        \r\n      } catch (error) {\r\n        console.error(\"Set image URL error:\", error);\r\n        errorMessage.value = \"Failed to set profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Handle image error when loading invalid URLs\r\n    const handleImageError = (event) => {\r\n      if (profileImageUrl.value) {\r\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\r\n        // Don't reset the profile image URL here, just show an error\r\n        isImageUrlInvalid.value = true;\r\n      }\r\n    };\r\n    \r\n    const handleImageUpload = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n      if (!validTypes.includes(file.type)) {\r\n        errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\r\n        return;\r\n      }\r\n      \r\n     \r\n      const maxSize = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > maxSize) {\r\n        errorMessage.value = \"Image size must be less than 5MB\";\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        isUploading.value = true;\r\n        uploadProgress.value = 0;\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to upload an image\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Delete previous image if exists in storage\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue with upload even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Create a unique filename with timestamp to prevent cache issues\r\n        const fileExtension = file.name.split('.').pop();\r\n        const filename = `${userId.value}_${Date.now()}.${fileExtension}`;\r\n        const storagePath = `profile_pictures/${filename}`;\r\n        \r\n        // Upload the file to Firebase Storage\r\n        const imageRef = storageRef(storage, storagePath);\r\n        const uploadTask = uploadBytesResumable(imageRef, file);\r\n        \r\n        uploadTask.on(\r\n          'state_changed', \r\n          (snapshot) => {\r\n            // Track upload progress\r\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            uploadProgress.value = progress;\r\n          },\r\n          (error) => {\r\n            console.error(\"Upload error:\", error);\r\n            errorMessage.value = \"Failed to upload image: \" + error.message;\r\n            isUploading.value = false;\r\n          },\r\n          async () => {\r\n            // Upload completed successfully\r\n            try {\r\n              const downloadUrl = await getDownloadURL(uploadTask.snapshot.ref);\r\n              \r\n              // Update user profile in Auth (if available)\r\n              try {\r\n                await updateAuthProfile(currentUser, {\r\n                  photoURL: downloadUrl\r\n                });\r\n              } catch (authError) {\r\n                console.error(\"Failed to update auth profile:\", authError);\r\n                // Continue even if this fails\r\n              }\r\n              \r\n              // Update user profile in Firestore\r\n              const db = getFirestore();\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                profileImageUrl: downloadUrl,\r\n                profileImagePath: storagePath,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Only update local state when upload is successful\r\n              profileImageUrl.value = downloadUrl;\r\n              profileImagePath.value = storagePath;\r\n              successMessage.value = \"Profile picture updated successfully!\";\r\n            } catch (finalError) {\r\n              console.error(\"Error in final upload step:\", finalError);\r\n              errorMessage.value = \"Failed to complete the upload: \" + finalError.message;\r\n            } finally {\r\n              isUploading.value = false;\r\n            }\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Upload handler error:\", error);\r\n        errorMessage.value = \"Failed to process image: \" + error.message;\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const removeProfilePicture = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!profileImageUrl.value) {\r\n          errorMessage.value = \"No profile picture to remove\";\r\n          return;\r\n        }\r\n        \r\n        isUploading.value = true;\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        // Delete the image from Firebase Storage if it's stored there\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const imageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(imageRef);\r\n          } catch (storageError) {\r\n            console.error(\"Error deleting storage image:\", storageError);\r\n            // Continue even if storage deletion fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        if (currentUser) {\r\n          try {\r\n            await updateAuthProfile(currentUser, {\r\n              photoURL: null\r\n            });\r\n          } catch (authError) {\r\n            console.error(\"Error updating auth profile:\", authError);\r\n            // Continue even if this fails\r\n          }\r\n        }\r\n        \r\n        // Update the user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: '',\r\n          profileImagePath: '',\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        // Clear the local state\r\n        profileImageUrl.value = '';\r\n        profileImagePath.value = '';\r\n        successMessage.value = \"Profile picture removed successfully!\";\r\n      } catch (error) {\r\n        console.error(\"Remove profile picture error:\", error);\r\n        errorMessage.value = \"Failed to remove profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Validate an email address format\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n    \r\n    const updateProfile = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          return;\r\n        }\r\n        \r\n        \r\n        if (!FirstName.value.trim() || !LastName.value.trim()) {\r\n          errorMessage.value = \"First and last name are required\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        \r\n        // Update profile data in Firestore WITHOUT changing the profile image\r\n        const updateData = {\r\n          FirstName: FirstName.value.trim(),\r\n          LastName: LastName.value.trim(),\r\n          isOnline: true,\r\n          updatedAt: new Date()\r\n        };\r\n        \r\n        \r\n        await updateDoc(doc(db, 'users', userId.value), updateData);\r\n        \r\n        \r\n        if (oldPass.value) {\r\n          // Re-authenticate first (required for both password and email change)\r\n          try {\r\n            const credential = EmailAuthProvider.credential(currentUser.email, oldPass.value);\r\n            await reauthenticateWithCredential(currentUser, credential);\r\n            \r\n            // Handle password change if requested\r\n            if (newPass.value) {\r\n              if (newPass.value.length < 6) {\r\n                errorMessage.value = \"Password must be at least 6 characters\";\r\n                return;\r\n              }\r\n              await updatePassword(currentUser, newPass.value);\r\n              oldPass.value = '';\r\n              newPass.value = '';\r\n              successMessage.value = \"Password updated successfully!\";\r\n            }\r\n            \r\n            // Handle email change if requested\r\n            if (newEmail.value && newEmail.value !== currentUser.email) {\r\n              // Validate email format\r\n              if (!isValidEmail(newEmail.value)) {\r\n                errorMessage.value = \"Please enter a valid email address\";\r\n                return;\r\n              }\r\n              \r\n              // Update the email directly first - this will update auth credentials\r\n              await updateEmail(currentUser, newEmail.value);\r\n              \r\n              // Then send verification email\r\n              await sendEmailVerification(currentUser);\r\n              \r\n              // Then update Firestore immediately, so they match\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                Email: newEmail.value,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Update the local state\r\n              Email.value = newEmail.value;\r\n              \r\n              successMessage.value = successMessage.value \r\n                ? successMessage.value + \" Email updated successfully! Verification email sent.\"\r\n                : \"Email updated successfully! Verification email sent.\";\r\n              \r\n              newEmail.value = '';\r\n            }\r\n          } catch (authError) {\r\n            console.error(\"Authentication error:\", authError);\r\n            errorMessage.value = \"Authentication failed: \" + authError.message;\r\n            return;\r\n          }\r\n        } else if (newPass.value || newEmail.value) {\r\n          errorMessage.value = \"Current password is required to change password or email\";\r\n          return;\r\n        }\r\n        \r\n        if (!successMessage.value) {\r\n          successMessage.value = \"Profile updated successfully!\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Update profile error:\", error);\r\n        errorMessage.value = \"Failed to update profile: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Initialize user data when component mounts\r\n    onMounted(async () => {\r\n      await fetchUserData();\r\n    });\r\n    \r\n    return {\r\n      FirstName,\r\n      LastName,\r\n      oldPass,\r\n      newPass,\r\n      newEmail,\r\n      userId,\r\n      successMessage,\r\n      errorMessage,\r\n      Email,\r\n      emailVerified,\r\n      isOnline,\r\n      profileImageUrl,\r\n      isUploading,\r\n      uploadProgress,\r\n      imageUrlInput,\r\n      updateProfile,\r\n      handleImageUpload,\r\n      removeProfilePicture,\r\n      setImageFromUrl,\r\n      handleImageError\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-header h2 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n}\r\n\r\n.status-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.status-label {\r\n  font-weight: 500;\r\n  margin-right: 8px;\r\n  color: #555;\r\n}\r\n\r\n.status-value {\r\n  font-weight: 600;\r\n  color: #999;\r\n}\r\n\r\n.status-value.online {\r\n  color: #4caf50;\r\n}\r\n\r\n.profile-form {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* Profile Picture Styles */\r\n.profile-picture-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.profile-picture-container {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.profile-picture {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-progress {\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.profile-picture-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 12px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n}\r\n\r\n/* Image URL input styles */\r\n.image-url-form {\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 8px;\r\n}\r\n\r\n.image-url-input {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.image-url-input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.url-button {\r\n  background-color: #2196f3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 8px 12px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.url-button:hover:not(:disabled) {\r\n  background-color: #1e88e5;\r\n}\r\n\r\n.url-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.or-divider {\r\n  color: #777;\r\n  margin: 4px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-button {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: #1976d2;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #1565c0;\r\n}\r\n\r\n.upload-icon {\r\n  margin-right: 6px;\r\n}\r\n\r\n.remove-button {\r\n  background-color: transparent;\r\n  border: 1px solid #f44336;\r\n  color: #f44336;\r\n  padding: 6px 12px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.remove-button:hover:not(:disabled) {\r\n  background-color: #ffebee;\r\n}\r\n\r\n.remove-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.email-help {\r\n  margin: 4px 0 8px;\r\n  font-size: 13px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.form-actions {\r\n  margin-top: 30px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #1976d2;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.save-button:hover:not(:disabled) {\r\n  background-color: #1565c0;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.save-button:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.success-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #4caf50;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #f44336;\r\n}\r\n\r\n.navigation-links {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.back-link {\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #1976d2;\r\n  font-weight: 500;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.back-link:hover {\r\n  background-color: #e3f2fd;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 8px;\r\n}\r\n</style>","import { render } from \"./ProfilePage.vue?vue&type=template&id=00e37e6f&scoped=true\"\nimport script from \"./ProfilePage.vue?vue&type=script&lang=js\"\nexport * from \"./ProfilePage.vue?vue&type=script&lang=js\"\n\nimport \"./ProfilePage.vue?vue&type=style&index=0&id=00e37e6f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-00e37e6f\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"forgot-password-container\">\r\n    <div class=\"forgot-password-card\">\r\n      <h2 class=\"forgot-title\">Mot de passe oublié ?</h2>\r\n      <p class=\"forgot-subtitle\">Pas de souci, nous vous enverrons les instructions de réinitialisation.</p>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Adresse e-mail</label>\r\n        <div class=\"input-container\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"input-icon\">\r\n            <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\r\n            <polyline points=\"22,6 12,13 2,6\"></polyline>\r\n          </svg>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\"\r\n            placeholder=\"Entrez votre e-mail\" \r\n            v-model=\"email\"\r\n            class=\"form-input\"\r\n          >\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Messages de notification -->\r\n      <div v-if=\"successMessage\" class=\"notification success\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"notification-icon\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n        </svg>\r\n        <span>{{ successMessage }}</span>\r\n      </div>\r\n      \r\n      <div v-if=\"errorMessage\" class=\"notification error\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"notification-icon\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n        </svg>\r\n        <span>{{ errorMessage }}</span>\r\n      </div>\r\n      \r\n      <button @click=\"sendResetEmail\" class=\"reset-button\">\r\n        <span>Réinitialiser le mot de passe</span>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"button-icon\">\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n          <polyline points=\"12 5 19 12 12 19\"></polyline>\r\n        </svg>\r\n      </button>\r\n      \r\n      <router-link to=\"/login\" class=\"back-link\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"back-icon\">\r\n          <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n          <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n        </svg>\r\n        Retour à la connexion\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\r\n\r\nexport default {\r\n  name: \"ForgotPassword\",\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      successMessage: \"\",\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    async sendResetEmail() {\r\n      // Clear previous messages\r\n      this.successMessage = \"\";\r\n      this.errorMessage = \"\";\r\n      \r\n      // Validate email\r\n      if (!this.email) {\r\n        this.errorMessage = \"Please enter your email\";\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const auth = getAuth();\r\n        await sendPasswordResetEmail(auth, this.email);\r\n        this.successMessage = \"Password reset email sent! Please check your inbox.\";\r\n        this.email = \"\";\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = error.message || \"Failed to send reset email\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n:root {\r\n  --primary-color: #3a6ea5;\r\n  --secondary-color: #f0f4f8;\r\n  --accent-color: #6c9bcf;\r\n  --text-color: #333;\r\n  --error-color: #e63946;\r\n  --success-color: #2a9d8f;\r\n  --shadow-color: rgba(0, 0, 0, 0.08);\r\n  --gradient-start: #f8f9fa;\r\n  --gradient-end: #e9ecef;\r\n}\r\n\r\n.forgot-password-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  padding: 2rem;\r\n  background: linear-gradient(135deg, var(--gradient-start) 0%, var(--gradient-end) 100%);\r\n}\r\n\r\n.forgot-password-card {\r\n  background-color: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  padding: 2.5rem;\r\n  width: 100%;\r\n  max-width: 420px;\r\n}\r\n\r\n.forgot-title {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  color: var(--primary-color);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.forgot-subtitle {\r\n  color: #666;\r\n  margin-bottom: 2rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #555;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.input-container {\r\n  position: relative;\r\n}\r\n\r\n.input-icon {\r\n  position: absolute;\r\n  left: 12px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 20px;\r\n  height: 20px;\r\n  color: #aaa;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 12px 12px 12px 45px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-input:focus {\r\n  outline: none;\r\n  border-color: var(--accent-color);\r\n  box-shadow: 0 0 0 3px rgba(108, 155, 207, 0.15);\r\n}\r\n\r\n.reset-button {\r\n  width: 100%;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 12px 20px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n}\r\n\r\n.reset-button:hover {\r\n  background-color: #2c5580;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.button-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: 8px;\r\n}\r\n\r\n.notification {\r\n  padding: 12px 16px;\r\n  border-radius: 8px;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.notification-icon {\r\n  width: 18px;\r\n  height: 18px;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.success {\r\n  background-color: rgba(42, 157, 143, 0.1);\r\n  color: var(--success-color);\r\n  border: 1px solid rgba(42, 157, 143, 0.2);\r\n}\r\n\r\n.success .notification-icon {\r\n  color: var(--success-color);\r\n}\r\n\r\n.error {\r\n  background-color: rgba(230, 57, 70, 0.1);\r\n  color: var(--error-color);\r\n  border: 1px solid rgba(230, 57, 70, 0.2);\r\n}\r\n\r\n.error .notification-icon {\r\n  color: var(--error-color);\r\n}\r\n\r\n.back-link {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--primary-color);\r\n  text-decoration: none;\r\n  font-size: 0.95rem;\r\n  font-weight: 500;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.back-link:hover {\r\n  color: #2c5580;\r\n}\r\n\r\n.back-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 6px;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .forgot-password-card {\r\n    padding: 2rem 1.5rem;\r\n  }\r\n  \r\n  .forgot-title {\r\n    font-size: 1.6rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./ForgotPage.vue?vue&type=template&id=f727e9e0&scoped=true\"\nimport script from \"./ForgotPage.vue?vue&type=script&lang=js\"\nexport * from \"./ForgotPage.vue?vue&type=script&lang=js\"\n\nimport \"./ForgotPage.vue?vue&type=style&index=0&id=f727e9e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f727e9e0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"discussions-container\">\r\n    <h1 class=\"discussions-title\">Mes discussions</h1>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-indicator\">\r\n      <div class=\"spinner\"></div>\r\n      <span>Chargement des discussions...</span>\r\n    </div>\r\n    \r\n    <div v-else-if=\"discussions.length === 0\" class=\"no-discussions\">\r\n      <p>Vous n'avez pas encore de discussions.</p>\r\n      <button @click=\"createNewDiscussion\" class=\"create-discussion-btn\">\r\n        Créer une nouvelle discussion\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-else class=\"discussions-list\">\r\n      <div \r\n        v-for=\"discussion in discussions\" \r\n        :key=\"discussion.id\" \r\n        class=\"discussion-item\"\r\n        :class=\"{'selected': selectedDiscussionId === discussion.id}\"\r\n        @click=\"selectDiscussion(discussion.id)\"\r\n      >\r\n        <div class=\"discussion-profile-image\" v-if=\"discussion.profileImageUrl\">\r\n          <img :src=\"discussion.profileImageUrl\" alt=\"Profile\" />\r\n        </div>\r\n        <div class=\"discussion-content\">\r\n          <h3 class=\"discussion-title\">{{ discussion.title }}</h3>\r\n          <p class=\"discussion-description\">{{ discussion.description }}</p>\r\n          \r\n          <div class=\"discussion-meta\">\r\n            <span class=\"message-count\">\r\n              {{ discussion.messageCount || 0 }} message{{ discussion.messageCount !== 1 ? 's' : '' }}\r\n            </span>\r\n            <span class=\"discussion-date\" v-if=\"discussion.lastActivity\">\r\n              {{ formatDate(discussion.lastActivity) }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Status indicators -->\r\n        <div class=\"participants-preview\" v-if=\"discussionStatuses[discussion.id]\">\r\n          <div v-for=\"(userId, index) in getTopParticipants(discussion.id, 3)\" \r\n               :key=\"userId\"\r\n               class=\"participant-indicator\"\r\n               :style=\"{ zIndex: 10 - index }\">\r\n            <div class=\"participant-avatar\">\r\n              {{ getInitials(userNames[userId] || '?') }}\r\n              <span \r\n                class=\"status-dot\"\r\n                :class=\"{ 'online': isUserOnline(discussion.id, userId) }\"\r\n              ></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"more-participants\" v-if=\"discussion.participants && discussion.participants.length > 3\">\r\n            +{{ discussion.participants.length - 3 }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <button @click=\"createNewDiscussion\" class=\"new-discussion-btn\">\r\n      <span class=\"plus-icon\">+</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\r\nimport { \r\n  getFirestore, \r\n  collection, \r\n  query, \r\n  orderBy,\r\n  getDocs,\r\n  onSnapshot, \r\n  doc, \r\n  getDoc, \r\n  addDoc,\r\n  serverTimestamp \r\n} from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nexport default {\r\n  emits: ['select-discussion'],\r\n  \r\n  setup(props, { emit }) {\r\n    const discussions = ref([]);\r\n    const loading = ref(true);\r\n    const selectedDiscussionId = ref(null);\r\n    const discussionStatuses = ref({});\r\n    const userNames = ref({});\r\n    \r\n    // Charger les discussions\r\n    const loadDiscussions = async () => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (!currentUser) {\r\n        loading.value = false;\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const discussionsQuery = query(\r\n          collection(db, 'discussions'),\r\n          orderBy('lastActivity', 'desc')\r\n        );\r\n        \r\n        onSnapshot(discussionsQuery, async (snapshot) => {\r\n          const discussionsList = [];\r\n          \r\n          for (const doc of snapshot.docs) {\r\n            const data = doc.data();\r\n            \r\n            // Vérifier si l'utilisateur actuel fait partie de cette discussion\r\n            if (data.participants && data.participants.includes(currentUser.uid)) {\r\n              \r\n              // Compter les messages\r\n              let messageCount = 0;\r\n              try {\r\n                const messagesQuery = collection(db, 'discussions', doc.id, 'messages');\r\n                const messagesSnapshot = await getDocs(messagesQuery);\r\n                messageCount = messagesSnapshot.size;\r\n              } catch (error) {\r\n                console.error(\"Erreur lors du comptage des messages:\", error);\r\n              }\r\n              \r\n              discussionsList.push({\r\n                id: doc.id,\r\n                title: data.title,\r\n                description: data.description,\r\n                participants: data.participants || [],\r\n                lastActivity: data.lastActivity,\r\n                messageCount,\r\n                profileImageUrl: data.profileImageUrl || null  // Ajouter le profileImageUrl\r\n              });\r\n              \r\n              // Charger les noms des participants s'ils ne sont pas déjà chargés\r\n              if (data.participants) {\r\n                for (const userId of data.participants) {\r\n                  if (!userNames.value[userId]) {\r\n                    await getUserName(userId);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          discussions.value = discussionsList;\r\n          loading.value = false;\r\n        }, (error) => {\r\n          console.error(\"Erreur lors du chargement des discussions:\", error);\r\n          loading.value = false;\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error(\"Erreur lors du chargement des discussions:\", error);\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Charger le nom d'un utilisateur\r\n    const getUserName = async (userId) => {\r\n      if (userNames.value[userId]) return;\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const userRef = doc(db, 'users', userId);\r\n        const userSnap = await getDoc(userRef);\r\n        \r\n        if (userSnap.exists()) {\r\n          const userData = userSnap.data();\r\n          const fullName = `${userData.firstName || ''} ${userData.lastName || ''}`.trim();\r\n          userNames.value[userId] = fullName || userData.displayName || userData.email || 'Utilisateur';\r\n        } else {\r\n          // Vérifier si c'est l'utilisateur actuel\r\n          const auth = getAuth();\r\n          const currentUser = auth.currentUser;\r\n          \r\n          if (currentUser && currentUser.uid === userId) {\r\n            userNames.value[userId] = currentUser.displayName || currentUser.email || 'Moi';\r\n          } else {\r\n            userNames.value[userId] = 'Utilisateur';\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erreur lors du chargement de l'utilisateur ${userId}:`, error);\r\n        userNames.value[userId] = 'Utilisateur';\r\n      }\r\n    };\r\n    \r\n    // Formater la date\r\n    const formatDate = (timestamp) => {\r\n      if (!timestamp) return '';\r\n      \r\n      try {\r\n        // Handle both Firestore timestamp objects and raw timestamps\r\n        const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\r\n        \r\n        // Check if the date is valid\r\n        if (isNaN(date.getTime())) return '';\r\n        \r\n        const today = new Date();\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        \r\n        const isToday = date.getDate() === today.getDate() && \r\n                       date.getMonth() === today.getMonth() && \r\n                       date.getFullYear() === today.getFullYear();\r\n                         \r\n        const isYesterday = date.getDate() === yesterday.getDate() && \r\n                          date.getMonth() === yesterday.getMonth() && \r\n                          date.getFullYear() === yesterday.getFullYear();\r\n        \r\n        const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n        \r\n        if (isToday) {\r\n          return `Aujourd'hui, ${date.toLocaleTimeString('fr-FR', timeOptions)}`;\r\n        } else if (isYesterday) {\r\n          return `Hier, ${date.toLocaleTimeString('fr-FR', timeOptions)}`;\r\n        } else {\r\n          const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n          return date.toLocaleDateString('fr-FR', options) + ', ' + \r\n                date.toLocaleTimeString('fr-FR', timeOptions);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error formatting date:\", e);\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    // Créer une nouvelle discussion\r\n    const createNewDiscussion = async () => {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (!currentUser) {\r\n        alert(\"Vous devez être connecté pour créer une discussion\");\r\n        return;\r\n      }\r\n      \r\n      const title = prompt(\"Titre de la discussion:\");\r\n      if (!title) return;\r\n      \r\n      const description = prompt(\"Description (optionnelle):\");\r\n      \r\n      // Demander l'URL de l'image de profil\r\n      const profileImageUrl = prompt(\"URL de l'image de profil (optionnelle):\");\r\n      \r\n      try {\r\n        const db = getFirestore();\r\n        const docRef = await addDoc(collection(db, 'discussions'), {\r\n          title,\r\n          description: description || '',\r\n          createdAt: serverTimestamp(),\r\n          lastActivity: serverTimestamp(),\r\n          createdBy: currentUser.uid,\r\n          participants: [currentUser.uid],\r\n          profileImageUrl: profileImageUrl || null  // Ajouter le profileImageUrl\r\n        });\r\n        \r\n        // Sélectionner la nouvelle discussion\r\n        selectDiscussion(docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la création de la discussion:\", error);\r\n        alert(\"Une erreur s'est produite lors de la création de la discussion\");\r\n      }\r\n    };\r\n    \r\n    // Sélectionner une discussion\r\n    const selectDiscussion = (discussionId) => {\r\n      selectedDiscussionId.value = discussionId;\r\n      emit('select-discussion', discussionId);\r\n    };\r\n    \r\n    // Mettre à jour les statuts des utilisateurs dans les discussions\r\n    const updateDiscussionStatuses = (data) => {\r\n      if (data && data.discussionId && data.statuses) {\r\n        discussionStatuses.value[data.discussionId] = data.statuses;\r\n      }\r\n    };\r\n    \r\n    // Vérifier si un utilisateur est en ligne\r\n    const isUserOnline = (discussionId, userId) => {\r\n      return discussionStatuses.value[discussionId] && \r\n             discussionStatuses.value[discussionId][userId] && \r\n             discussionStatuses.value[discussionId][userId].isOnline;\r\n    };\r\n    \r\n    // Obtenir les n premiers participants\r\n    const getTopParticipants = (discussionId, count) => {\r\n      const discussion = discussions.value.find(d => d.id === discussionId);\r\n      if (!discussion || !discussion.participants) return [];\r\n      \r\n      return discussion.participants.slice(0, count);\r\n    };\r\n    \r\n    // Obtenir les initiales d'un nom\r\n    const getInitials = (name) => {\r\n      if (!name) return '?';\r\n      \r\n      const parts = name.split(' ').filter(Boolean);\r\n      if (parts.length === 0) return '?';\r\n      \r\n      if (parts.length === 1) {\r\n        return parts[0].charAt(0).toUpperCase();\r\n      }\r\n      \r\n      return (parts[0].charAt(0) + parts[parts.length - 1].charAt(0)).toUpperCase();\r\n    };\r\n    \r\n    onMounted(() => {\r\n      loadDiscussions();\r\n    });\r\n    \r\n    return {\r\n      discussions,\r\n      loading,\r\n      selectedDiscussionId,\r\n      discussionStatuses,\r\n      userNames,\r\n      selectDiscussion,\r\n      createNewDiscussion,\r\n      formatDate,\r\n      updateDiscussionStatuses,\r\n      isUserOnline,\r\n      getTopParticipants,\r\n      getInitials\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.discussions-container {\r\n  position: relative;\r\n  padding: 16px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n  min-height: 600px;\r\n}\r\n\r\n.discussions-title {\r\n  margin-top: 0;\r\n  margin-bottom: 24px;\r\n  font-size: 24px;\r\n  color: #2c3e50;\r\n  border-bottom: 2px solid #e7e7e7;\r\n  padding-bottom: 12px;\r\n}\r\n\r\n.loading-indicator {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #25d366;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.no-discussions {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #666;\r\n}\r\n\r\n.create-discussion-btn {\r\n  margin-top: 16px;\r\n  padding: 10px 20px;\r\n  background-color: #25d366;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.create-discussion-btn:hover {\r\n  background-color: #128c7e;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.discussions-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.discussion-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  border-left: 4px solid transparent;\r\n}\r\n\r\n.discussion-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.discussion-item.selected {\r\n  border-left-color: #25d366;\r\n  background-color: #f0f9f0;\r\n}\r\n\r\n\r\n.discussion-profile-image {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-right: 16px;\r\n  flex-shrink: 0;\r\n  border: 2px solid #e0e0e0;\r\n}\r\n\r\n.discussion-profile-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.discussion-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.discussion-title {\r\n  margin: 0 0 8px 0;\r\n  font-size: 18px;\r\n  color: #2c3e50;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.discussion-description {\r\n  margin: 0 0 12px 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.discussion-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 12px;\r\n  color: #888;\r\n}\r\n\r\n.participants-preview {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 12px;\r\n}\r\n\r\n.participant-indicator {\r\n  margin-left: -10px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.participant-indicator:hover {\r\n  transform: translateY(-4px);\r\n}\r\n\r\n.participant-indicator:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.participant-avatar {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  color: #555;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  border: 2px solid white;\r\n  position: relative;\r\n}\r\n\r\n.status-dot {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #9e9e9e;\r\n  border: 2px solid white;\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n}\r\n\r\n.status-dot.online {\r\n  background-color: #4caf50;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 4px rgba(76, 175, 80, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);\r\n  }\r\n}\r\n\r\n.more-participants {\r\n  margin-left: 8px;\r\n  font-size: 14px;\r\n  color: #666;\r\n  font-weight: 500;\r\n  background-color: #f0f0f0;\r\n  border-radius: 50%;\r\n  width: 36px;\r\n  height: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid white;\r\n}\r\n\r\n.new-discussion-btn {\r\n  position: absolute;\r\n  bottom: 24px;\r\n  right: 24px;\r\n  width: 56px;\r\n  height: 56px;\r\n  border-radius: 50%;\r\n  background-color: #25d366;\r\n  color: white;\r\n  border: none;\r\n  box-shadow: 0 4px 12px rgba(37, 211, 102, 0.3);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.new-discussion-btn:hover {\r\n  transform: translateY(-4px) rotate(90deg);\r\n  box-shadow: 0 6px 16px rgba(37, 211, 102, 0.4);\r\n  background-color: #128c7e;\r\n}\r\n\r\n.plus-icon {\r\n  line-height: 1;\r\n}\r\n</style>","import { render } from \"./forumPage.vue?vue&type=template&id=c8704cb8&scoped=true\"\nimport script from \"./forumPage.vue?vue&type=script&lang=js\"\nexport * from \"./forumPage.vue?vue&type=script&lang=js\"\n\nimport \"./forumPage.vue?vue&type=style&index=0&id=c8704cb8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c8704cb8\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport Login from '../views/Login.vue'\nimport SignUp from '../views/SignUp.vue'\nimport forum from '../components/Forum.vue'\nimport profile from '../components/ProfilePage.vue'\nimport forgot from '../components/ForgotPage.vue'\nimport disc from '../components/singleDisc.vue'\nimport resp from '../components/Responses.vue'\nimport foru from '../components/forumPage.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomeView',\n    component: HomeView\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/signup',\n    name: 'SignUp',\n    component: SignUp\n  },\n  \n  {\n    path: '/forum/:id',\n    name: 'Forum',\n    component: forum\n  },\n  \n  {\n    path: '/profile/:id',\n    name: 'Profile',\n    component: profile\n\n  }\n  ,\n  \n  {\n    path: '/forgot',\n    name: 'Forgot',\n    component: forgot\n\n  },\n  {\n    path: '/disc/:id',\n    name: 'discussion',\n    component: disc\n\n  },\n  {\n    path: '/resp/:id',\n    name: 'responses',\n    component: resp\n\n  },\n  {\n    path: '/for/:id',\n    name: 'forumPage',\n    component: foru,\n    children: [\n      {\n        path: '',\n        components: {\n          leftPanel: forum,\n          rightPanel: resp\n        }\n      }\n    ]\n\n  }\n  \n  \n\n\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\n\nrouter.beforeEach((to, from, next) => {\n  const auth = getAuth();\n  const requiresAuth = to.name === 'Home'; // to be changed hhh to the discussion board \n\n  onAuthStateChanged(auth, (user) => {\n    if (requiresAuth && !user) {\n      next('/');\n    } else {\n      next();\n    }\n  });\n});\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n\r\nimport { initializeApp } from 'firebase/app'\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCfFcRBxn933Kzcy9fz65bwBsdDB2vUtYw\",\r\n  authDomain: \"chitchat-f4cec.firebaseapp.com\",\r\n  projectId: \"chitchat-f4cec\",\r\n  storageBucket: \"chitchat-f4cec.firebasestorage.app\",\r\n  messagingSenderId: \"1017286912746\",\r\n  appId: \"1:1017286912746:web:a4c429e8ba16f862274593\",\r\n  measurementId: \"G-6FQS0RD2S2\"\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig)\r\n\r\n// Create Vue app\r\ncreateApp(App).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatting\"] = self[\"webpackChunkchatting\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(5129)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","name","__exports__","render","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createStaticVNode","_hoisted_3","_createVNode","_component_router_link","to","_withCtx","_cache","_createTextVNode","_","mounted","setTimeout","messages","document","querySelectorAll","forEach","message","index","classList","add","type","placeholder","$event","$data","email","password","onClick","$options","login","apply","arguments","data","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","auth","userCredential","userId","db","wrap","_context","prev","next","getAuth","signInWithEmailAndPassword","sent","user","uid","getFirestore","updateDoc","doc","isOnline","$router","push","concat","t0","console","error","alert","stop","Email","FirstName","LastName","Password","Signup","isUM6PEmail","toLowerCase","endsWith","createUserWithEmailAndPassword","setDoc","createdAt","serverTimestamp","code","key","$setup","src","profileImageUrl","alt","_hoisted_4","_hoisted_5","_toDisplayString","_normalizeClass","logout","_hoisted_6","_hoisted_7","_hoisted_8","openCreatePrivateDialog","openCreatePublicDialog","_hoisted_9","showAll","active","filterType","showPrivate","showPublic","_Fragment","_renderList","filteredDiscussions","disc","_component_SingleDisc","id","isParticipant","currentDiscussionId","creatorPic","onViewDiscussion","handleViewDiscussion","onJoinDiscussion","joinDiscussion","onLeaveDiscussion","leaveDiscussion","canViewDiscussion","_hoisted_10","_component_Responses","discussionId","onHideDiscussion","hideDiscussion","_hoisted_11","_hoisted_12","showPrivateDialog","_hoisted_13","_hoisted_14","newDiscPrivateTitle","newDiscPrivateDescription","rows","newDiscParticipantEmail","_hoisted_15","createPrivateDiscussion","closeModals","_createCommentVNode","showPublicDialog","_hoisted_16","_hoisted_17","newDiscPublicTitle","newDiscPublicDescription","newDiscPublicImageUrl","_hoisted_18","_hoisted_19","_hoisted_20","newParticipantEmail","onKeyup","_withKeys","addParticipantEmail","participantEmails","length","_hoisted_21","removeParticipantEmail","_hoisted_22","_hoisted_23","createPublicDiscussion","showProfilePicDialog","_hoisted_24","_hoisted_25","profilePicInput","_hoisted_26","_hoisted_27","_hoisted_28","updateProfilePicture","closeProfilePicDialog","$props","isActive","viewDiscussion","discussion","isPrivate","otherParticipant","firstName","lastName","getInitials","_$setup$otherParticip","imageUrl","title","description","undefined","messageCount","lastActivity","formatDate","_withModifiers","props","String","required","Boolean","default","emits","setup","_ref","emit","ref","loading","currentUserId","onMounted","currentUser","value","fetchDiscussion","watch","_ref2","discussionDoc","getDoc","exists","_objectSpread","participants","fetchOtherParticipant","_ref3","_callee2","otherUserId","userDoc","userData","_context2","abrupt","find","initials","charAt","toUpperCase","timestamp","date","toDate","Date","toLocaleDateString","day","month","hour","minute","Hide","userAvatars","getUserInitials","isUserOnline","isCurrentUser","userNames","onScroll","handleScroll","responses","isCurrentUserMessage","ref_for","senderId","editingMessageId","editMessageContent","saveMessageEdit","cancelMessageEdit","content","edited","reactions","Object","keys","users","emoji","hasUserReacted","toggleReaction","_hoisted_29","_hoisted_30","_hoisted_31","getUserDisplayName","_hoisted_32","_hoisted_33","startEditMessage","_hoisted_34","confirmDeleteMessage","_hoisted_35","showReactionPicker","_hoisted_36","onMouseenter","showReadReceipts","onMouseleave","hideReadReceipts","getReadStatusClass","getReadCount","_hoisted_38","_hoisted_37","showingReadReceiptsFor","style","_normalizeStyle","readReceiptsTooltipStyle","_hoisted_39","getReadUsersList","_hoisted_40","_hoisted_41","info","_hoisted_42","_hoisted_43","getUnreadUsersList","_hoisted_44","_hoisted_45","_hoisted_46","showingReactionsFor","reactionPickerStyle","_hoisted_47","availableReactions","addReaction","_hoisted_48","showDeleteConfirmation","_hoisted_49","_hoisted_50","_hoisted_51","deleteMessage","cancelDeleteConfirmation","_hoisted_52","onSubmit","sendMessage","newMessage","_hoisted_53","_hoisted_54","userStatuses","messagesContainer","messageElements","isScrolledToBottom","Set","editTextarea","reactionPickerPosition","top","left","readReceiptsTooltipPosition","presenceUnsubscribe","userStatusInterval","messagesUnsubscribe","messageToDelete","computed","displayName","nameParts","split","_userStatuses$value$u","today","isToday","getDate","getMonth","getFullYear","timeOptions","dateOptions","year","toLocaleTimeString","e","_messagesContainer$va","scrollTop","scrollHeight","clientHeight","Math","abs","markVisibleMessagesAsRead","scrollToBottom","force","_args","nextTick","containerRect","getBoundingClientRect","messagesElements","Array","isArray","messageIds","el","rect","bottom","messageId","getAttribute","msg","markMessageAsRead","messageRef","readBy","includes","_defineProperty","arrayUnion","lastReadAt","_x","readCount","filter","map","sort","a","b","timeA","timeB","readBySet","has","messageElement","querySelector","right","fetchUserInfo","_ref4","_callee3","profilePicture","fullName","userRef","userSnap","_db","_userRef","_userSnap","_userData","_fullName","_profilePicture","_context3","photoURL","trim","_x2","then","userInfo","loadAllUserInfo","_ref5","_callee4","userIds","uniqueIds","_iterator","_step","_userInfo","_context4","_toConsumableArray","_createForOfIteratorHelper","s","n","done","f","finish","_x3","_ref6","_callee5","_context5","focus","_x4","_ref7","_callee6","_context6","editedAt","_x5","_ref8","_callee7","lastMessage","newLastMessage","_context7","deleteDoc","lastMessageSenderId","lastMessageText","substring","_ref9","_callee8","hasReacted","usersWithReaction","_context8","deleteField","_x6","_x7","_ref10","_callee9","_context9","addDoc","collection","updateUserPresence","_ref11","_callee10","presenceRef","_context10","online","lastActive","currentDiscussion","merge","listenToPresence","listeners","onSnapshot","presenceData","unsubscribe","loadDiscussion","_ref12","_callee11","_context11","loadMessages","messagesQuery","query","orderBy","snapshot","empty","newMessages","userIdsToLoad","messageData","newDiscussionId","oldDiscussionId","immediate","setInterval","onUnmounted","clearInterval","components","SingleDisc","Responses","router","useRouter","userEmail","discussions","fetchUserData","openProfilePicDialog","signOut","fetchDiscussions","discussionsQuery","querySnapshot","usersRef","usersSnapshot","usersMap","getDocs","Promise","all","docs","createdAtTimestamp","getTime","createdBy","log","accessibleDiscussions","checkParticipantStatus","d","discussionRef","discussionSnap","discussionIndex","Error","findIndex","arrayRemove","p","splice","emailToFind","emailFields","participantId","_i","_emailFields","field","q1","snap1","q2","snap2","allUsers","newDiscussion","docRef","where","unshift","participantIds","notFoundEmails","_loop","found","_i2","_emailFields2","q","delegateYield","t1","join","t2","_context12","onAuthStateChanged","onError","handleImageError","isUploading","uploadProgress","imageUrlInput","setImageFromUrl","disabled","for","accept","onChange","handleImageUpload","removeProfilePicture","oldPass","newPass","newEmail","updateProfile","successMessage","errorMessage","route","useRoute","emailVerified","profileImagePath","isImageUrlInvalid","params","userid","storage","oldImageRef","URL","startsWith","getStorage","storageRef","deleteObject","updateAuthProfile","updatedAt","t3","event","file","validTypes","maxSize","fileExtension","filename","storagePath","imageRef","uploadTask","target","files","size","pop","now","uploadBytesResumable","on","progress","round","bytesTransferred","totalBytes","downloadUrl","getDownloadURL","isValidEmail","emailRegex","test","updateData","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","updateEmail","sendEmailVerification","xmlns","viewBox","fill","stroke","points","cx","cy","r","x1","y1","x2","y2","sendResetEmail","sendPasswordResetEmail","createNewDiscussion","selectedDiscussionId","selectDiscussion","discussionStatuses","getTopParticipants","zIndex","loadDiscussions","discussionsList","_doc","messagesSnapshot","_iterator2","_step2","getUserName","isNaN","yesterday","setDate","isYesterday","options","prompt","updateDiscussionStatuses","statuses","count","slice","parts","routes","path","component","HomeView","Login","SignUp","forum","profile","forgot","resp","foru","children","leftPanel","rightPanel","createRouter","history","createWebHistory","beforeEach","from","requiresAuth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}