{"ast":null,"code":"import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, collection, addDoc, getDocs, getDoc, query, orderBy, serverTimestamp, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nexport default {\n  name: 'EnhancedActivitiesPage',\n  data() {\n    return {\n      unsubscribe: null,\n      filterCategory: '',\n      showCategoriesModal: false,\n      newCategory: '',\n      db: null,\n      auth: null,\n      userId: null,\n      showAddForm: false,\n      activities: [],\n      loading: true,\n      editingProgressId: null,\n      activityProgress: 0,\n      progressColor: '#4a89dc',\n      searchQuery: '',\n      filterStatus: 'all',\n      sortBy: 'date-desc',\n      sortField: 'date',\n      sortDirection: 'desc',\n      showDeleteModal: false,\n      activityToDelete: null,\n      showLogModal: false,\n      selectedActivity: null,\n      activityLogs: [],\n      logProgress: 0,\n      logNotes: '',\n      currentView: 'cards',\n      // 'cards', 'list', 'table'\n      expandedActivities: [],\n      progressChart: null,\n      categoryChart: null,\n      defaultCategories: ['Learning', 'Project', 'Work', 'Personal', 'Health', 'Finance', 'Creative', 'Other'],\n      userCategories: [],\n      newActivity: {\n        objective: \"\",\n        category: \"\",\n        customCategory: \"\",\n        tools: [\"\"],\n        done: false,\n        progress: 0,\n        priority: \"medium\",\n        deadline: \"\",\n        notes: \"\",\n        favorite: false\n      }\n    };\n  },\n  computed: {\n    allCategories() {\n      return [...this.defaultCategories, ...this.userCategories];\n    },\n    completedActivities() {\n      return this.activities.filter(a => a.progress === 100).length;\n    },\n    inProgressActivities() {\n      return this.activities.filter(a => a.progress < 100).length;\n    },\n    highPriorityActivities() {\n      return this.activities.filter(a => a.priority === 'high').length;\n    },\n    overdueActivities() {\n      return this.activities.filter(a => this.isOverdue(a.deadline) && a.progress !== 100).length;\n    },\n    filteredActivities() {\n      let filtered = [...this.activities];\n\n      // Apply status filter\n      switch (this.filterStatus) {\n        case 'completed':\n          filtered = filtered.filter(a => a.progress === 100);\n          break;\n        case 'in-progress':\n          filtered = filtered.filter(a => a.progress < 100);\n          break;\n        case 'overdue':\n          filtered = filtered.filter(a => this.isOverdue(a.deadline) && a.progress !== 100);\n          break;\n        case 'favorites':\n          filtered = filtered.filter(a => a.favorite);\n          break;\n      }\n      if (this.filterCategory) {\n        filtered = filtered.filter(a => this.displayCategory(a) === this.filterCategory);\n      }\n      // Apply search filter\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(a => a.objective.toLowerCase().includes(query) || a.tools && a.tools.some(tool => tool.toLowerCase().includes(query)) || a.notes && a.notes.toLowerCase().includes(query) || this.displayCategory(a).toLowerCase().includes(query));\n      }\n      // Apply sorting\n      switch (this.sortBy) {\n        case 'date-asc':\n          filtered.sort((a, b) => (a.startedAt?.seconds || 0) - (b.startedAt?.seconds || 0));\n          break;\n        case 'progress-asc':\n          filtered.sort((a, b) => (a.progress || 0) - (b.progress || 0));\n          break;\n        case 'progress-desc':\n          filtered.sort((a, b) => (b.progress || 0) - (a.progress || 0));\n          break;\n        case 'priority':\n          const priorityOrder = {\n            high: 3,\n            medium: 2,\n            low: 1\n          };\n          filtered.sort((a, b) => priorityOrder[b.priority || 'medium'] - priorityOrder[a.priority || 'medium']);\n          break;\n        case 'deadline':\n          filtered.sort((a, b) => {\n            if (!a.deadline && !b.deadline) return 0;\n            if (!a.deadline) return 1;\n            if (!b.deadline) return -1;\n            return new Date(a.deadline) - new Date(b.deadline);\n          });\n          break;\n        default:\n          // date-desc\n          filtered.sort((a, b) => (b.startedAt?.seconds || 0) - (a.startedAt?.seconds || 0));\n      }\n      return filtered;\n    },\n    progressDistribution() {\n      const distribution = {\n        '0-20%': 0,\n        '21-40%': 0,\n        '41-60%': 0,\n        '61-80%': 0,\n        '81-100%': 0\n      };\n      this.activities.forEach(activity => {\n        const progress = activity.progress || 0;\n        if (progress <= 20) {\n          distribution['0-20%']++;\n        } else if (progress <= 40) {\n          distribution['21-40%']++;\n        } else if (progress <= 60) {\n          distribution['41-60%']++;\n        } else if (progress <= 80) {\n          distribution['61-80%']++;\n        } else {\n          distribution['81-100%']++;\n        }\n      });\n      return distribution;\n    },\n    categoryDistribution() {\n      const distribution = {};\n      this.activities.forEach(activity => {\n        const category = this.displayCategory(activity) || 'Uncategorized';\n        distribution[category] = (distribution[category] || 0) + 1;\n      });\n      return distribution;\n    }\n  },\n  methods: {\n    handleCategoryChange() {\n      if (this.newActivity.category === 'custom') {\n        this.openCategoriesModal();\n        this.newActivity.customCategory = '';\n      }\n    },\n    openCategoriesModal() {\n      this.showCategoriesModal = true;\n      this.newCategory = '';\n    },\n    addCategory() {\n      if (this.newCategory.trim() && !this.userCategories.includes(this.newCategory.trim())) {\n        this.userCategories.push(this.newCategory.trim());\n        this.newCategory = '';\n      }\n    },\n    removeCategory(index) {\n      this.userCategories.splice(index, 1);\n    },\n    async saveCategories() {\n      try {\n        if (!this.userId) return;\n        const userRef = doc(this.db, \"users\", this.userId);\n        await updateDoc(userRef, {\n          categories: this.userCategories\n        });\n        this.showCategoriesModal = false;\n      } catch (error) {\n        console.error(\"Error saving categories:\", error);\n        alert(`Failed to save categories: ${error.message}`);\n      }\n    },\n    resetFilters() {\n      this.searchQuery = '';\n      this.filterStatus = 'all';\n      this.sortBy = 'date-desc';\n    },\n    displayCategory(activity) {\n      return activity.customCategory || activity.category || '';\n    },\n    toggleAddForm() {\n      this.showAddForm = !this.showAddForm;\n      if (!this.showAddForm) {\n        this.resetForm();\n      }\n    },\n    updateProgressColor() {\n      const progress = this.newActivity.progress;\n      if (progress < 30) {\n        this.progressColor = '#ff9800';\n      } else if (progress < 70) {\n        this.progressColor = '#2196f3';\n      } else {\n        this.progressColor = '#4caf50';\n      }\n    },\n    toggleEditProgress(activityId) {\n      if (this.editingProgressId === activityId) {\n        this.editingProgressId = null;\n      } else {\n        const activity = this.activities.find(a => a.id === activityId);\n        if (activity) {\n          this.activityProgress = activity.progress || 0;\n          this.editingProgressId = activityId;\n        }\n      }\n    },\n    async updateProgress(activityId) {\n      try {\n        if (!this.userId || !activityId) return;\n        const progress = parseInt(this.activityProgress) || 0;\n        const validProgress = Math.max(0, Math.min(100, progress));\n        const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\n        await updateDoc(activityRef, {\n          progress: validProgress,\n          done: validProgress === 100,\n          ...(validProgress === 100 ? {\n            completedAt: serverTimestamp()\n          } : {})\n        });\n        const activityIndex = this.activities.findIndex(a => a.id === activityId);\n        if (activityIndex !== -1) {\n          this.activities[activityIndex].progress = validProgress;\n          this.activities[activityIndex].done = validProgress === 100;\n          if (validProgress === 100) {\n            this.activities[activityIndex].completedAt = {\n              seconds: Math.floor(Date.now() / 1000)\n            };\n          }\n        }\n        this.editingProgressId = null;\n        this.updateCharts();\n      } catch (error) {\n        console.error(\"Error updating progress:\", error);\n        alert(`Failed to update progress: ${error.message}`);\n      }\n    },\n    async updateActivityProgress(activityId, progress) {\n      this.activityProgress = progress;\n      await this.updateProgress(activityId);\n    },\n    async completeActivity(activityId) {\n      this.activityProgress = 100;\n      await this.updateProgress(activityId);\n    },\n    confirmDelete(activityId) {\n      this.activityToDelete = activityId;\n      this.showDeleteModal = true;\n    },\n    async deleteActivity() {\n      try {\n        if (!this.userId || !this.activityToDelete) return;\n        const activityRef = doc(this.db, \"users\", this.userId, \"activities\", this.activityToDelete);\n        await deleteDoc(activityRef);\n        this.activities = this.activities.filter(a => a.id !== this.activityToDelete);\n        this.showDeleteModal = false;\n        this.activityToDelete = null;\n        this.updateCharts();\n      } catch (error) {\n        console.error(\"Error deleting activity:\", error);\n        alert(`Failed to delete activity: ${error.message}`);\n      }\n    },\n    addTool() {\n      this.newActivity.tools.push(\"\");\n    },\n    removeTool(index) {\n      this.newActivity.tools.splice(index, 1);\n      if (this.newActivity.tools.length === 0) {\n        this.newActivity.tools.push(\"\");\n      }\n    },\n    resetForm() {\n      this.newActivity = {\n        objective: \"\",\n        category: \"\",\n        customCategory: \"\",\n        tools: [\"\"],\n        done: false,\n        progress: 0,\n        priority: \"medium\",\n        deadline: \"\",\n        notes: \"\",\n        favorite: false\n      };\n      this.progressColor = '#4a89dc';\n    },\n    formatDate(timestamp, short = false) {\n      if (!timestamp) return 'N/A';\n      try {\n        const date = timestamp.toDate();\n        if (short) {\n          return date.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric'\n          });\n        }\n        return date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        console.error(\"Date formatting error:\", error);\n        return 'Invalid date';\n      }\n    },\n    formatDeadline(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n    isDeadlineApproaching(dateString) {\n      if (!dateString) return false;\n      const deadline = new Date(dateString);\n      const today = new Date();\n      const diffTime = deadline - today;\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays <= 3 && diffDays >= 0;\n    },\n    isOverdue(dateString) {\n      if (!dateString) return false;\n      const deadline = new Date(dateString);\n      const today = new Date();\n      return deadline < today;\n    },\n    sortByField(field) {\n      if (this.sortField === field) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortField = field;\n        this.sortDirection = 'desc';\n      }\n      this.sortBy = `${field}-${this.sortDirection}`;\n    },\n    async submitActivity() {\n      try {\n        if (!this.userId || this.userId.trim() === \"\") {\n          alert(\"You must be logged in to add activities. Please login and try again.\");\n          return;\n        }\n        // Validate and prepare data\n        const filteredTools = this.newActivity.tools.filter(tool => tool && tool.trim() !== \"\");\n        const progress = parseInt(this.newActivity.progress) || 0;\n        const validProgress = Math.max(0, Math.min(100, progress));\n        const isDone = validProgress === 100;\n        const activityData = {\n          objective: (this.newActivity.objective || \"\").trim(),\n          category: this.newActivity.category === 'custom' ? '' : this.newActivity.category,\n          customCategory: this.newActivity.category === 'custom' ? this.newActivity.customCategory : '',\n          tools: filteredTools || [],\n          done: isDone,\n          progress: validProgress,\n          priority: this.newActivity.priority || 'medium',\n          notes: this.newActivity.notes || '',\n          favorite: this.newActivity.favorite || false\n        };\n\n        // Add deadline if provided\n        if (this.newActivity.deadline) {\n          activityData.deadline = this.newActivity.deadline;\n        }\n\n        // If editing existing activity\n        if (this.currentActivityId) {\n          const activityRef = doc(this.db, \"users\", this.userId, \"activities\", this.currentActivityId);\n          await updateDoc(activityRef, activityData);\n\n          // Update local state\n          const index = this.activities.findIndex(a => a.id === this.currentActivityId);\n          if (index !== -1) {\n            this.activities[index] = {\n              ...this.activities[index],\n              ...activityData\n            };\n          }\n        }\n        // If adding new activity\n        else {\n          activityData.startedAt = serverTimestamp();\n          if (isDone) {\n            activityData.completedAt = serverTimestamp();\n          }\n          const userActivitiesRef = collection(this.db, \"users\", this.userId, \"activities\");\n          await addDoc(userActivitiesRef, activityData);\n        }\n        await this.loadActivities();\n        this.resetForm();\n        this.showAddForm = false;\n        this.currentActivityId = null;\n      } catch (error) {\n        console.error(\"Error saving activity:\", error);\n        alert(`Failed to save activity: ${error.message}`);\n      }\n    },\n    async loadActivities() {\n      if (!this.userId) {\n        console.warn(\"Cannot load activities: No user ID available\");\n        this.loading = false;\n        this.activities = [];\n        return;\n      }\n      this.loading = true;\n      try {\n        const userActivitiesRef = collection(this.db, \"users\", this.userId, \"activities\");\n        const activitiesQuery = query(userActivitiesRef, orderBy(\"startedAt\", \"desc\"));\n        const querySnapshot = await getDocs(activitiesQuery);\n        this.activities = querySnapshot.docs.map(doc => {\n          const data = doc.data();\n          const progress = parseInt(data.progress) || 0;\n          return {\n            id: doc.id,\n            objective: data.objective || \"Untitled Activity\",\n            category: data.category || '',\n            customCategory: data.customCategory || '',\n            tools: Array.isArray(data.tools) ? data.tools : [],\n            done: progress === 100 ? true : Boolean(data.done),\n            startedAt: data.startedAt || null,\n            completedAt: data.completedAt || null,\n            userId: data.userId || this.userId,\n            progress: progress,\n            priority: data.priority || 'medium',\n            deadline: data.deadline || null,\n            notes: data.notes || '',\n            favorite: data.favorite || false\n          };\n        });\n\n        // Load user categories if they exist\n        const userDocRef = doc(this.db, \"users\", this.userId);\n        const userDoc = await getDoc(userDocRef);\n        if (userDoc.exists() && userDoc.data().categories) {\n          this.userCategories = userDoc.data().categories;\n        }\n        this.updateCharts();\n      } catch (error) {\n        console.error(\"Error loading activities:\", error);\n        if (error.code === 'permission-denied') {\n          alert(\"Permission denied. You may not have access to view these activities.\");\n        } else {\n          alert(`Failed to load activities: ${error.message}`);\n        }\n        this.activities = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async toggleFavorite(activityId) {\n      try {\n        if (!this.userId || !activityId) return;\n        const activity = this.activities.find(a => a.id === activityId);\n        if (!activity) return;\n        const newFavoriteStatus = !activity.favorite;\n        const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\n        await updateDoc(activityRef, {\n          favorite: newFavoriteStatus\n        });\n        activity.favorite = newFavoriteStatus;\n      } catch (error) {\n        console.error(\"Error toggling favorite:\", error);\n        alert(`Failed to update favorite status: ${error.message}`);\n      }\n    },\n    async markAsComplete(activityId) {\n      try {\n        if (!this.userId || !activityId) return;\n        const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\n        await updateDoc(activityRef, {\n          progress: 100,\n          done: true,\n          completedAt: serverTimestamp()\n        });\n\n        // Update local state\n        const activity = this.activities.find(a => a.id === activityId);\n        if (activity) {\n          activity.progress = 100;\n          activity.done = true;\n          activity.completedAt = {\n            seconds: Math.floor(Date.now() / 1000)\n          };\n        }\n        this.updateCharts();\n      } catch (error) {\n        console.error(\"Error marking as complete:\", error);\n        alert(`Failed to mark as complete: ${error.message}`);\n      }\n    },\n    editActivity(activity) {\n      this.newActivity = {\n        objective: activity.objective,\n        category: activity.customCategory ? 'custom' : activity.category || '',\n        customCategory: activity.customCategory || '',\n        tools: [...(activity.tools || [])],\n        progress: activity.progress || 0,\n        priority: activity.priority || 'medium',\n        deadline: activity.deadline || '',\n        notes: activity.notes || '',\n        favorite: activity.favorite || false\n      };\n      this.currentActivityId = activity.id;\n      this.isEditing = true;\n      this.showAddForm = true;\n\n      // Scroll to form\n      this.$nextTick(() => {\n        document.querySelector('.activity-form')?.scrollIntoView({\n          behavior: 'smooth'\n        });\n      });\n    },\n    toggleActivityDetails(activityId) {\n      const index = this.expandedActivities.indexOf(activityId);\n      if (index === -1) {\n        this.expandedActivities.push(activityId);\n      } else {\n        this.expandedActivities.splice(index, 1);\n      }\n    },\n    async showActivityLog(activity) {\n      this.selectedActivity = activity;\n      this.logProgress = activity.progress || 0;\n      this.logNotes = '';\n      this.showLogModal = true;\n      try {\n        const logsRef = collection(this.db, \"users\", this.userId, \"activities\", activity.id, \"logs\");\n        const logsQuery = query(logsRef, orderBy(\"timestamp\", \"desc\"));\n        const querySnapshot = await getDocs(logsQuery);\n        this.activityLogs = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      } catch (error) {\n        console.error(\"Error loading activity logs:\", error);\n        this.activityLogs = [];\n      }\n    },\n    async addLogEntry() {\n      try {\n        if (!this.userId || !this.selectedActivity) return;\n        const logsRef = collection(this.db, \"users\", this.userId, \"activities\", this.selectedActivity.id, \"logs\");\n        await addDoc(logsRef, {\n          progress: this.logProgress,\n          notes: this.logNotes,\n          timestamp: serverTimestamp()\n        });\n\n        // Update activity progress if changed\n        if (this.logProgress !== this.selectedActivity.progress) {\n          await this.updateActivityProgress(this.selectedActivity.id, this.logProgress);\n        }\n\n        // Reload logs\n        await this.showActivityLog(this.selectedActivity);\n        this.logNotes = '';\n      } catch (error) {\n        console.error(\"Error adding log entry:\", error);\n        alert(`Failed to add log entry: ${error.message}`);\n      }\n    },\n    async deleteLogEntry(logId) {\n      try {\n        if (!this.userId || !this.selectedActivity || !logId) return;\n        const logRef = doc(this.db, \"users\", this.userId, \"activities\", this.selectedActivity.id, \"logs\", logId);\n        await deleteDoc(logRef);\n        this.activityLogs = this.activityLogs.filter(log => log.id !== logId);\n      } catch (error) {\n        console.error(\"Error deleting log entry:\", error);\n        alert(`Failed to delete log entry: ${error.message}`);\n      }\n    },\n    updateCharts() {\n      if (!this.$refs.progressChart || !this.$refs.categoryChart) return;\n\n      // Destroy existing charts if they exist\n      if (this.progressChart) this.progressChart.destroy();\n      if (this.categoryChart) this.categoryChart.destroy();\n\n      // Progress Distribution Chart\n      this.progressChart = new Chart(this.$refs.progressChart, {\n        type: 'bar',\n        data: {\n          labels: ['Not Started (0%)', 'Beginning (1-20%)', 'Progressing (21-50%)', 'Almost There (51-90%)', 'Completed (91-100%)'],\n          datasets: [{\n            label: 'Number of Activities',\n            data: [this.activities.filter(a => (a.progress || 0) === 0).length, this.activities.filter(a => (a.progress || 0) > 0 && (a.progress || 0) <= 20).length, this.activities.filter(a => (a.progress || 0) > 20 && (a.progress || 0) <= 50).length, this.activities.filter(a => (a.progress || 0) > 50 && (a.progress || 0) <= 90).length, this.activities.filter(a => (a.progress || 0) > 90).length],\n            backgroundColor: ['rgba(255, 99, 132, 0.7)',\n            // Red - Not started\n            'rgba(255, 159, 64, 0.7)',\n            // Orange - Beginning\n            'rgba(255, 205, 86, 0.7)',\n            // Yellow - Progressing\n            'rgba(54, 162, 235, 0.7)',\n            // Blue - Almost there\n            'rgba(75, 192, 192, 0.7)' // Green - Completed\n            ],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 205, 86, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'bottom'\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return `${context.parsed.y} activities`;\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Number of Activities'\n              },\n              ticks: {\n                stepSize: 1\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Progress Stage'\n              }\n            }\n          }\n        }\n      });\n\n      // Category Chart\n      const categoryLabels = Object.keys(this.categoryDistribution);\n      const categoryValues = Object.values(this.categoryDistribution);\n      this.categoryChart = new Chart(this.$refs.categoryChart, {\n        type: 'doughnut',\n        data: {\n          labels: categoryLabels,\n          datasets: [{\n            data: categoryValues,\n            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'right'\n            }\n          }\n        }\n      });\n    }\n  },\n  beforeUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n    if (this.progressChart) this.progressChart.destroy();\n    if (this.timelineChart) this.timelineChart.destroy();\n    if (this.categoryChart) this.categoryChart.destroy();\n  },\n  mounted() {\n    this.db = getFirestore();\n    this.auth = getAuth();\n    this.unsubscribe = onAuthStateChanged(this.auth, async user => {\n      if (user) {\n        this.userId = user.uid;\n        await this.loadActivities();\n      } else {\n        this.userId = null;\n        this.activities = [];\n        this.loading = false;\n      }\n    });\n  }\n};","map":{"version":3,"names":["getAuth","onAuthStateChanged","getFirestore","collection","addDoc","getDocs","getDoc","query","orderBy","serverTimestamp","doc","updateDoc","deleteDoc","where","Chart","registerables","register","name","data","unsubscribe","filterCategory","showCategoriesModal","newCategory","db","auth","userId","showAddForm","activities","loading","editingProgressId","activityProgress","progressColor","searchQuery","filterStatus","sortBy","sortField","sortDirection","showDeleteModal","activityToDelete","showLogModal","selectedActivity","activityLogs","logProgress","logNotes","currentView","expandedActivities","progressChart","categoryChart","defaultCategories","userCategories","newActivity","objective","category","customCategory","tools","done","progress","priority","deadline","notes","favorite","computed","allCategories","completedActivities","filter","a","length","inProgressActivities","highPriorityActivities","overdueActivities","isOverdue","filteredActivities","filtered","displayCategory","toLowerCase","includes","some","tool","sort","b","startedAt","seconds","priorityOrder","high","medium","low","Date","progressDistribution","distribution","forEach","activity","categoryDistribution","methods","handleCategoryChange","openCategoriesModal","addCategory","trim","push","removeCategory","index","splice","saveCategories","userRef","categories","error","console","alert","message","resetFilters","toggleAddForm","resetForm","updateProgressColor","toggleEditProgress","activityId","find","id","updateProgress","parseInt","validProgress","Math","max","min","activityRef","completedAt","activityIndex","findIndex","floor","now","updateCharts","updateActivityProgress","completeActivity","confirmDelete","deleteActivity","addTool","removeTool","formatDate","timestamp","short","date","toDate","toLocaleDateString","month","day","year","hour","minute","formatDeadline","dateString","isDeadlineApproaching","today","diffTime","diffDays","ceil","sortByField","field","submitActivity","filteredTools","isDone","activityData","currentActivityId","userActivitiesRef","loadActivities","warn","activitiesQuery","querySnapshot","docs","map","Array","isArray","Boolean","userDocRef","userDoc","exists","code","toggleFavorite","newFavoriteStatus","markAsComplete","editActivity","isEditing","$nextTick","document","querySelector","scrollIntoView","behavior","toggleActivityDetails","indexOf","showActivityLog","logsRef","logsQuery","addLogEntry","deleteLogEntry","logId","logRef","log","$refs","destroy","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","parsed","y","scales","beginAtZero","title","display","text","ticks","stepSize","x","categoryLabels","Object","keys","categoryValues","values","beforeUnmount","timelineChart","mounted","user","uid"],"sources":["/workspaces/JAVASCRIPT-S4/src/views/act.vue"],"sourcesContent":["<template>\r\n    <div class=\"activities-container\">\r\n      <div class=\"header-section\">\r\n        <h2 class=\"page-title\">My Activities</h2>\r\n        <div class=\"header-actions\">\r\n          <router-link to='/dash' class=\"back-link\">\r\n            <span class=\"back-icon\">←</span> Return to Discussions\r\n          </router-link>\r\n          <button @click=\"toggleAddForm\" class=\"add-button\">\r\n            {{ showAddForm ? 'Cancel' : 'Add Activity' }}\r\n            <span class=\"button-icon\">{{ showAddForm ? '×' : '+' }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <transition name=\"slide-fade\">\r\n        <form v-if=\"showAddForm\" @submit.prevent=\"submitActivity\" class=\"activity-form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"objective\">Objective:</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"objective\" \r\n              v-model=\"newActivity.objective\" \r\n              required \r\n              placeholder=\"What do you want to accomplish?\"\r\n              class=\"form-input\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label>Category:</label>\r\n            <div class=\"category-selector\">\r\n              <select \r\n                id=\"category\" \r\n                v-model=\"newActivity.category\"\r\n                @change=\"handleCategoryChange\"\r\n                class=\"form-input\"\r\n              >\r\n                <option value=\"\" disabled>Select a category</option>\r\n                <option v-for=\"category in allCategories\" :value=\"category\" :key=\"category\">\r\n                  {{ category }}\r\n                </option>\r\n                <option value=\"custom\">Custom Category...</option>\r\n              </select>\r\n              <input\r\n                v-if=\"newActivity.category === 'custom'\"\r\n                type=\"text\"\r\n                v-model=\"newActivity.customCategory\"\r\n                placeholder=\"Enter custom category\"\r\n                class=\"custom-category-input\"\r\n              >\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label>Tools/Technologies:</label>\r\n            <div v-for=\"(tool, index) in newActivity.tools\" :key=\"`tool-${index}`\" class=\"tool-input\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"newActivity.tools[index]\" \r\n                :placeholder=\"`Tool ${index + 1}`\"\r\n                class=\"form-input\"\r\n              >\r\n              <button \r\n                type=\"button\" \r\n                @click=\"removeTool(index)\" \r\n                class=\"remove-tool\"\r\n                :disabled=\"newActivity.tools.length <= 1\"\r\n                :title=\"newActivity.tools.length <= 1 ? 'At least one tool is required' : 'Remove tool'\"\r\n              >×</button>\r\n            </div>\r\n            <button type=\"button\" @click=\"addTool\" class=\"add-tool\">+ Add Tool</button>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"progress\">Progress (%):</label>\r\n            <div class=\"progress-input-container\">\r\n              <input \r\n                type=\"range\" \r\n                id=\"progress\" \r\n                v-model.number=\"newActivity.progress\" \r\n                min=\"0\" \r\n                max=\"100\" \r\n                step=\"5\"\r\n                class=\"progress-slider\"\r\n                @input=\"updateProgressColor\"\r\n              >\r\n              <span \r\n                class=\"progress-value\"\r\n                :style=\"{'color': progressColor}\"\r\n              >{{ newActivity.progress }}%</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"priority\">Priority:</label>\r\n            <select id=\"priority\" v-model=\"newActivity.priority\" class=\"form-input\">\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"deadline\">Deadline (optional):</label>\r\n            <input \r\n              type=\"date\" \r\n              id=\"deadline\" \r\n              v-model=\"newActivity.deadline\" \r\n              class=\"form-input\"\r\n              :min=\"new Date().toISOString().split('T')[0]\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"notes\">Notes (optional):</label>\r\n            <textarea\r\n              id=\"notes\"\r\n              v-model=\"newActivity.notes\"\r\n              placeholder=\"Add any additional notes...\"\r\n              class=\"form-input\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div class=\"form-actions\">\r\n            <button type=\"submit\" class=\"save-button\">\r\n              <span class=\"button-icon\">✓</span> Save Activity\r\n            </button>\r\n            <button type=\"button\" @click=\"resetForm\" class=\"reset-button\">\r\n              <span class=\"button-icon\">↻</span> Reset\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </transition>\r\n      \r\n      <div class=\"stats-container\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-value\">{{ completedActivities }}</div>\r\n          <div class=\"stat-label\">Completed</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-value\">{{ inProgressActivities }}</div>\r\n          <div class=\"stat-label\">In Progress</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-value\">{{ highPriorityActivities }}</div>\r\n          <div class=\"stat-label\">High Priority</div>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-value\">{{ overdueActivities }}</div>\r\n          <div class=\"stat-label\">Overdue</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Statistics Charts -->\r\n      <div class=\"charts-container\">\r\n        <div class=\"chart-card\">\r\n          <h3>Progress Distribution</h3>\r\n          <div class=\"chart-wrapper\">\r\n            <canvas ref=\"progressChart\"></canvas>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"chart-card\">\r\n          <h3>Category Breakdown</h3>\r\n          <div class=\"chart-wrapper\">\r\n            <canvas ref=\"categoryChart\" class=\"h\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- View Toggle -->\r\n      <div class=\"view-toggle\">\r\n        <button \r\n          @click=\"currentView = 'cards'\"\r\n          :class=\"{ 'active': currentView === 'cards' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-th-large\"></i> Card View\r\n        </button>\r\n        <button \r\n          @click=\"currentView = 'list'\"\r\n          :class=\"{ 'active': currentView === 'list' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-list\"></i> List View\r\n        </button>\r\n        <button \r\n          @click=\"currentView = 'table'\"\r\n          :class=\"{ 'active': currentView === 'table' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-table\"></i> Table View\r\n        </button>\r\n      </div>\r\n      \r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <div>Loading activities...</div>\r\n      </div>\r\n      \r\n      <!-- Card View -->\r\n      <div v-if=\"!loading && currentView === 'cards' && filteredActivities.length > 0\" class=\"activities-grid\">\r\n        <div \r\n          v-for=\"activity in filteredActivities\" \r\n          :key=\"activity.id\" \r\n          class=\"activity-card\"\r\n          :class=\"{\r\n            'completed-card': activity.progress === 100,\r\n            'priority-high': activity.priority === 'high',\r\n            'priority-medium': activity.priority === 'medium',\r\n            'priority-low': activity.priority === 'low',\r\n            'overdue-card': isOverdue(activity.deadline) && activity.progress !== 100\r\n          }\"\r\n        >\r\n          <div class=\"activity-header\">\r\n            <h4 class=\"activity-title\">{{ activity.objective || 'Untitled Activity' }}</h4>\r\n            <div class=\"activity-meta\">\r\n              <span class=\"activity-date\">{{ formatDate(activity.startedAt) }}</span>\r\n              <span \r\n                class=\"activity-priority\"\r\n                :class=\"{\r\n                  'priority-high-badge': activity.priority === 'high',\r\n                  'priority-medium-badge': activity.priority === 'medium',\r\n                  'priority-low-badge': activity.priority === 'low'\r\n                }\"\r\n              >\r\n                {{ activity.priority || 'medium' }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"activity-category\" v-if=\"displayCategory(activity)\">\r\n            <span class=\"category-label\">Category:</span>\r\n            <span class=\"category-value\">{{ displayCategory(activity) }}</span>\r\n          </div>\r\n          \r\n          <div class=\"activity-tools\" v-if=\"activity.tools && activity.tools.length > 0\">\r\n            <span class=\"tools-label\">Tools:</span>\r\n            <span \r\n              class=\"tool-tag\" \r\n              v-for=\"(tool, tIndex) in activity.tools\" \r\n              :key=\"`tag-${activity.id}-${tIndex}`\"\r\n            >\r\n              {{ tool }}\r\n            </span>\r\n          </div>\r\n          \r\n          <div class=\"activity-progress\">\r\n            <div class=\"progress-bar-container\">\r\n              <div \r\n                class=\"progress-bar\" \r\n                :style=\"{ width: `${activity.progress || 0}%` }\"\r\n                :class=\"{ \r\n                  'progress-low': (activity.progress || 0) < 30, \r\n                  'progress-mid': (activity.progress || 0) >= 30 && (activity.progress || 0) < 70,\r\n                  'progress-high': (activity.progress || 0) >= 70 \r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"progress-text\">{{ activity.progress || 0 }}% complete</div>\r\n          </div>\r\n          \r\n          <div class=\"activity-notes\" v-if=\"activity.notes\">\r\n            <div class=\"notes-label\">Notes:</div>\r\n            <div class=\"notes-content\">{{ activity.notes }}</div>\r\n          </div>\r\n          \r\n          <div class=\"activity-footer\">\r\n            <div class=\"activity-status\">\r\n              Status: <span :class=\"{ 'status-completed': activity.progress === 100 }\">\r\n                {{ activity.progress === 100 ? 'Completed' : 'In progress' }}\r\n              </span>\r\n            </div>\r\n            <div class=\"activity-deadline\" v-if=\"activity.deadline\">\r\n              Deadline: {{ formatDeadline(activity.deadline) }}\r\n              <span \r\n                class=\"deadline-warning\" \r\n                v-if=\"isDeadlineApproaching(activity.deadline) && activity.progress !== 100\"\r\n              >\r\n                ⏰\r\n              </span>\r\n              <span \r\n                class=\"deadline-danger\" \r\n                v-if=\"isOverdue(activity.deadline) && activity.progress !== 100\"\r\n              >\r\n                ‼️\r\n              </span>\r\n            </div>\r\n            <div class=\"activity-actions\">\r\n                <button \r\n    @click=\"markAsComplete(activity.id)\" \r\n    class=\"action-btn complete\"\r\n    v-if=\"activity.progress !== 100\"\r\n    title=\"Mark as Complete\"\r\n  >\r\n    <i class=\"fas fa-check\"></i>\r\n  </button>\r\n\r\n              <button @click=\"editActivity(activity)\" class=\"action-btn edit\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </button>\r\n              <button \r\n  @click.stop=\"toggleFavorite(activity.id)\" \r\n  class=\"action-btn favorite\"\r\n  :title=\"activity.favorite ? 'Remove from favorites' : 'Add to favorites'\"\r\n>\r\n  <i :class=\"activity.favorite ? 'fas fa-star' : 'far fa-star'\"></i>\r\n</button>\r\n              <button @click=\"confirmDelete(activity.id)\" class=\"action-btn delete\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- List View -->\r\n      <div v-if=\"!loading && currentView === 'list' && filteredActivities.length > 0\" class=\"activities-list\">\r\n        <div \r\n          v-for=\"activity in filteredActivities\" \r\n          :key=\"activity.id\" \r\n          class=\"activity-item\"\r\n          :class=\"{\r\n            'completed-item': activity.progress === 100,\r\n            'priority-high-item': activity.priority === 'high',\r\n            'overdue-item': isOverdue(activity.deadline) && activity.progress !== 100\r\n          }\"\r\n          @click=\"toggleActivityDetails(activity.id)\"\r\n        >\r\n          <div class=\"item-main\">\r\n            <div class=\"item-title\">{{ activity.objective || 'Untitled Activity' }}</div>\r\n            <div class=\"item-meta\">\r\n              <span class=\"item-category\">{{ displayCategory(activity) || 'No category' }}</span>\r\n              <span class=\"item-date\">{{ formatDate(activity.startedAt, true) }}</span>\r\n            </div>\r\n            <div class=\"item-progress\">\r\n              <div class=\"progress-bar-container\">\r\n                <div \r\n                  class=\"progress-bar\" \r\n                  :style=\"{ width: `${activity.progress || 0}%` }\"\r\n                  :class=\"{ \r\n                    'progress-low': (activity.progress || 0) < 30, \r\n                    'progress-mid': (activity.progress || 0) >= 30 && (activity.progress || 0) < 70,\r\n                    'progress-high': (activity.progress || 0) >= 70 \r\n                  }\"\r\n                ></div>\r\n              </div>\r\n              <span class=\"progress-text\">{{ activity.progress || 0 }}%</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div v-if=\"expandedActivities.includes(activity.id)\" class=\"item-details\">\r\n            <div class=\"details-section\">\r\n              <h5>Tools & Technologies</h5>\r\n              <div class=\"tools-container\">\r\n                <span \r\n                  class=\"tool-tag\" \r\n                  v-for=\"(tool, tIndex) in activity.tools\" \r\n                  :key=\"`tag-${activity.id}-${tIndex}`\"\r\n                >\r\n                  {{ tool }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"details-section\" v-if=\"activity.notes\">\r\n              <h5>Notes</h5>\r\n              <p class=\"notes-content\">{{ activity.notes }}</p>\r\n            </div>\r\n            \r\n            <div class=\"details-section\">\r\n              <h5>Status</h5>\r\n              <div class=\"status-info\">\r\n                <span class=\"status-text\" :class=\"{ 'status-completed': activity.progress === 100 }\">\r\n                  {{ activity.progress === 100 ? 'Completed' : 'In progress' }}\r\n                </span>\r\n                <span class=\"priority-badge\" :class=\"`priority-${activity.priority || 'medium'}-badge`\">\r\n                  {{ activity.priority || 'medium' }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"details-actions\">\r\n              <button @click.stop=\"editActivity(activity)\" class=\"btn small-btn\">\r\n                <i class=\"fas fa-edit\"></i> Edit\r\n              </button>\r\n              <button \r\n                @click.stop=\"updateActivityProgress(activity.id, 100)\" \r\n                class=\"btn small-btn complete\"\r\n                v-if=\"activity.progress !== 100\"\r\n              >\r\n                <i class=\"fas fa-check\"></i> Mark Complete\r\n              </button>\r\n              <button @click.stop=\"confirmDelete(activity.id)\" class=\"btn small-btn delete\">\r\n                <i class=\"fas fa-trash\"></i> Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Table View -->\r\n      <div v-if=\"!loading && currentView === 'table'\" class=\"activities-table\">\r\n        <div class=\"table-controls\">\r\n          <div class=\"search-container\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"searchQuery\" \r\n              placeholder=\"Search activities...\" \r\n              class=\"search-input\"\r\n            >\r\n            <span class=\"search-icon\">🔍</span>\r\n          </div>\r\n          <div class=\"filter-container\">\r\n            <label>Filter:</label>\r\n            <select v-model=\"filterStatus\" class=\"filter-select\">\r\n              <option value=\"all\">All Activities</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"in-progress\">In Progress</option>\r\n              <option value=\"overdue\">Overdue</option>\r\n              <option value=\"favorites\">Favorites</option>\r\n            </select>\r\n            <select v-model=\"filterCategory\" class=\"filter-select\">\r\n    <option value=\"\">All Categories</option>\r\n    <option v-for=\"category in allCategories\" :value=\"category\" :key=\"'filter-'+category\">\r\n      {{ category }}\r\n    </option>\r\n  </select>\r\n          </div>\r\n          <div class=\"sort-container\">\r\n            <label>Sort by:</label>\r\n            <select v-model=\"sortBy\" class=\"sort-select\">\r\n              <option value=\"date-desc\">Newest First</option>\r\n              <option value=\"date-asc\">Oldest First</option>\r\n              <option value=\"progress-asc\">Progress (Low to High)</option>\r\n              <option value=\"progress-desc\">Progress (High to Low)</option>\r\n              <option value=\"priority\">Priority</option>\r\n              <option value=\"deadline\">Deadline</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <!-- Empty state when no results -->\r\n  <div v-if=\"filteredActivities.length === 0\" class=\"empty-table-state\">\r\n    <p>No activities found matching your criteria.</p>\r\n    <button @click=\"resetFilters\" class=\"reset-filters-btn\">\r\n      Reset Filters\r\n    </button>\r\n  </div>\r\n        \r\n        <table v-if = \"filteredActivities.length>0\">\r\n          <thead>\r\n            <tr>\r\n              <th @click=\"sortByField('objective')\">\r\n                Objective\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'objective'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th @click=\"sortByField('category')\">\r\n                Category\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'category'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th @click=\"sortByField('progress')\">\r\n                Progress\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'progress'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th @click=\"sortByField('priority')\">\r\n                Priority\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'priority'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th @click=\"sortByField('startedAt')\">\r\n                Started\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'startedAt'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th @click=\"sortByField('deadline')\">\r\n                Deadline\r\n                <span class=\"sort-icon\" v-if=\"sortField === 'deadline'\">\r\n                  {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                </span>\r\n              </th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr \r\n              v-for=\"activity in filteredActivities\" \r\n              :key=\"activity.id\"\r\n              :class=\"{\r\n                'completed-row': activity.progress === 100,\r\n                'priority-high-row': activity.priority === 'high',\r\n                'overdue-row': isOverdue(activity.deadline) && activity.progress !== 100\r\n              }\"\r\n            >\r\n              <td>\r\n                <div class=\"activity-title\">\r\n                  {{ activity.objective || 'Untitled Activity' }}\r\n                  <span v-if=\"activity.favorite\" class=\"favorite-star\">★</span>\r\n                </div>\r\n                <div class=\"activity-tools\" v-if=\"activity.tools && activity.tools.length > 0\">\r\n                  <span \r\n                    class=\"tool-tag\" \r\n                    v-for=\"(tool, tIndex) in activity.tools\" \r\n                    :key=\"`tag-${activity.id}-${tIndex}`\"\r\n                  >\r\n                    {{ tool }}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td>{{ displayCategory(activity) || '—' }}</td>\r\n              <td>\r\n                <div class=\"progress-cell\">\r\n                  <div class=\"progress-bar-container\">\r\n                    <div \r\n                      class=\"progress-bar\" \r\n                      :style=\"{ width: `${activity.progress || 0}%` }\"\r\n                      :class=\"{ \r\n                        'progress-low': (activity.progress || 0) < 30, \r\n                        'progress-mid': (activity.progress || 0) >= 30 && (activity.progress || 0) < 70,\r\n                        'progress-high': (activity.progress || 0) >= 70 \r\n                      }\"\r\n                    ></div>\r\n                  </div>\r\n                  <span class=\"progress-text\">{{ activity.progress || 0 }}%</span>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <span class=\"priority-badge\" :class=\"`priority-${activity.priority || 'medium'}-badge`\">\r\n                  {{ activity.priority || 'medium' }}\r\n                </span>\r\n              </td>\r\n              <td>{{ formatDate(activity.startedAt, true) }}</td>\r\n              <td>\r\n                <div class=\"deadline-cell\" :class=\"{ 'overdue': isOverdue(activity.deadline) && activity.progress !== 100 }\">\r\n                  {{ activity.deadline ? formatDeadline(activity.deadline) : '—' }}\r\n                  <span \r\n                    v-if=\"isDeadlineApproaching(activity.deadline) && activity.progress !== 100\"\r\n                    class=\"deadline-warning\"\r\n                  >\r\n                    ⏰\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"table-actions\">\r\n                <button \r\n      @click.stop=\"markAsComplete(activity.id)\" \r\n      class=\"action-btn complete\"\r\n      v-if=\"activity.progress !== 100\"\r\n      title=\"Mark as Complete\"\r\n    >\r\n      <i class=\"fas fa-check\"></i>\r\n    </button>\r\n                  <button @click.stop=\"editActivity(activity)\" class=\"action-btn edit\">\r\n                    <i class=\"fas fa-edit\"></i>\r\n                  </button>\r\n                  <button \r\n  @click.stop=\"toggleFavorite(activity.id)\" \r\n  class=\"action-btn favorite\"\r\n  :title=\"activity.favorite ? 'Remove from favorites' : 'Add to favorites'\"\r\n>\r\n  <i :class=\"activity.favorite ? 'fas fa-star' : 'far fa-star'\"></i>\r\n</button>\r\n                  <button @click.stop=\"confirmDelete(activity.id)\" class=\"action-btn delete\">\r\n                    <i class=\"fas fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      <div v-if=\"!loading && activities.length === 0\" class=\"empty-state\">\r\n        <div class=\"empty-icon\">📊</div>\r\n        <h3>No activities yet</h3>\r\n        <p>Start by adding your first activity to track your progress!</p>\r\n        <button @click=\"toggleAddForm\" class=\"cta-button\">\r\n          Add Your First Activity\r\n        </button>\r\n      </div>\r\n  \r\n      <!-- Delete Confirmation Modal -->\r\n      <div v-if=\"showDeleteModal\" class=\"modal-overlay\">\r\n        <div class=\"modal-container\">\r\n          <div class=\"modal-header\">\r\n            <h3>Confirm Deletion</h3>\r\n            <button @click=\"showDeleteModal = false\" class=\"modal-close\">×</button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <p>Are you sure you want to delete this activity? This action cannot be undone.</p>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button @click=\"showDeleteModal = false\" class=\"modal-cancel\">Cancel</button>\r\n            <button @click=\"deleteActivity\" class=\"modal-confirm\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Activity Log Modal -->\r\n      <div v-if=\"showLogModal\" class=\"modal-overlay\">\r\n        <div class=\"modal-container large-modal\">\r\n          <div class=\"modal-header\">\r\n            <h3>Activity Log: {{ selectedActivity?.objective || 'Untitled Activity' }}</h3>\r\n            <button @click=\"showLogModal = false\" class=\"modal-close\">×</button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"log-container\">\r\n              <div class=\"log-form\">\r\n                <h4>Add Log Entry</h4>\r\n                <div class=\"form-group\">\r\n                  <label>Progress Update:</label>\r\n                  <input \r\n                    type=\"range\" \r\n                    v-model.number=\"logProgress\" \r\n                    min=\"0\" \r\n                    max=\"100\" \r\n                    step=\"5\"\r\n                    class=\"progress-slider\"\r\n                  >\r\n                  <span class=\"progress-value\">{{ logProgress }}%</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Notes:</label>\r\n                  <textarea v-model=\"logNotes\" placeholder=\"Describe what you accomplished...\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button @click=\"addLogEntry\" class=\"btn primary-btn\">Add Entry</button>\r\n              </div>\r\n              \r\n              <div class=\"log-entries\">\r\n                <h4>History</h4>\r\n                <div v-if=\"activityLogs.length === 0\" class=\"empty-logs\">\r\n                  No log entries yet\r\n                </div>\r\n                <div \r\n                  v-for=\"(log, index) in activityLogs\" \r\n                  :key=\"index\"\r\n                  class=\"log-entry\"\r\n                >\r\n                  <div class=\"log-header\">\r\n                    <span class=\"log-date\">{{ formatDate(log.timestamp) }}</span>\r\n                    <span class=\"log-progress\">{{ log.progress }}%</span>\r\n                  </div>\r\n                  <div class=\"log-content\" v-if=\"log.notes\">{{ log.notes }}</div>\r\n                  <button @click=\"deleteLogEntry(log.id)\" class=\"log-delete\">×</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n  import { \r\n    getFirestore, \r\n    collection, \r\n    addDoc, \r\n    getDocs,\r\n    getDoc, \r\n    query, \r\n    orderBy, \r\n    serverTimestamp, \r\n    doc, \r\n    updateDoc,\r\n    deleteDoc,\r\n    where\r\n  } from \"firebase/firestore\";\r\n  import { Chart, registerables } from 'chart.js';\r\n  Chart.register(...registerables);\r\n  import '@fortawesome/fontawesome-free/css/all.min.css'\r\n  export default {\r\n    name: 'EnhancedActivitiesPage',\r\n    \r\n    data() {\r\n      return {\r\n        unsubscribe : null,\r\n        filterCategory: '',\r\n        showCategoriesModal: false,\r\n        newCategory: '',\r\n        db: null,\r\n        auth: null,\r\n        userId: null,\r\n        showAddForm: false,\r\n        activities: [],\r\n        loading: true,\r\n        editingProgressId: null,\r\n        activityProgress: 0,\r\n        progressColor: '#4a89dc',\r\n        searchQuery: '',\r\n        filterStatus: 'all',\r\n        sortBy: 'date-desc',\r\n        sortField: 'date',\r\n        sortDirection: 'desc',\r\n        showDeleteModal: false,\r\n        activityToDelete: null,\r\n        showLogModal: false,\r\n        selectedActivity: null,\r\n        activityLogs: [],\r\n        logProgress: 0,\r\n        logNotes: '',\r\n        currentView: 'cards', // 'cards', 'list', 'table'\r\n        expandedActivities: [],\r\n        progressChart: null,\r\n        categoryChart: null,\r\n        defaultCategories: [\r\n          'Learning', 'Project', 'Work', 'Personal', \r\n          'Health', 'Finance', 'Creative', 'Other'\r\n        ],\r\n        userCategories: [],\r\n        newActivity: {\r\n          objective: \"\",\r\n          category: \"\",\r\n          customCategory: \"\",\r\n          tools: [\"\"],\r\n          done: false,\r\n          progress: 0,\r\n          priority: \"medium\",\r\n          deadline: \"\",\r\n          notes: \"\",\r\n          favorite: false\r\n        }\r\n      };\r\n    },\r\n    \r\n    computed: {\r\n      allCategories() {\r\n        return [...this.defaultCategories, ...this.userCategories];\r\n      },\r\n      \r\n      completedActivities() {\r\n        return this.activities.filter(a => a.progress === 100).length;\r\n      },\r\n      \r\n      inProgressActivities() {\r\n        return this.activities.filter(a => a.progress < 100).length;\r\n      },\r\n      \r\n      highPriorityActivities() {\r\n        return this.activities.filter(a => a.priority === 'high').length;\r\n      },\r\n      \r\n      overdueActivities() {\r\n        return this.activities.filter(a => this.isOverdue(a.deadline) && a.progress !== 100).length;\r\n      },\r\n      \r\n      filteredActivities() {\r\n        let filtered = [...this.activities];\r\n        \r\n        // Apply status filter\r\n        switch (this.filterStatus) {\r\n          case 'completed':\r\n            filtered = filtered.filter(a => a.progress === 100);\r\n            break;\r\n          case 'in-progress':\r\n            filtered = filtered.filter(a => a.progress < 100);\r\n            break;\r\n          case 'overdue':\r\n            filtered = filtered.filter(a => this.isOverdue(a.deadline) && a.progress !== 100);\r\n            break;\r\n          case 'favorites':\r\n            filtered = filtered.filter(a => a.favorite);\r\n            break;\r\n        }\r\n        if (this.filterCategory) {\r\n    filtered = filtered.filter(a => \r\n      this.displayCategory(a) === this.filterCategory\r\n    );\r\n  }\r\n    // Apply search filter\r\n        if (this.searchQuery) {\r\n    const query = this.searchQuery.toLowerCase();\r\n    filtered = filtered.filter(a => \r\n      a.objective.toLowerCase().includes(query) || \r\n      (a.tools && a.tools.some(tool => tool.toLowerCase().includes(query))) ||\r\n      (a.notes && a.notes.toLowerCase().includes(query)) ||\r\n      this.displayCategory(a).toLowerCase().includes(query)\r\n    );\r\n  }\r\n        // Apply sorting\r\n        switch (this.sortBy) {\r\n          case 'date-asc':\r\n            filtered.sort((a, b) => (a.startedAt?.seconds || 0) - (b.startedAt?.seconds || 0));\r\n            break;\r\n          case 'progress-asc':\r\n            filtered.sort((a, b) => (a.progress || 0) - (b.progress || 0));\r\n            break;\r\n          case 'progress-desc':\r\n            filtered.sort((a, b) => (b.progress || 0) - (a.progress || 0));\r\n            break;\r\n          case 'priority':\r\n            const priorityOrder = { high: 3, medium: 2, low: 1 };\r\n            filtered.sort((a, b) => priorityOrder[b.priority || 'medium'] - priorityOrder[a.priority || 'medium']);\r\n            break;\r\n          case 'deadline':\r\n            filtered.sort((a, b) => {\r\n              if (!a.deadline && !b.deadline) return 0;\r\n              if (!a.deadline) return 1;\r\n              if (!b.deadline) return -1;\r\n              return new Date(a.deadline) - new Date(b.deadline);\r\n            });\r\n            break;\r\n          default: // date-desc\r\n            filtered.sort((a, b) => (b.startedAt?.seconds || 0) - (a.startedAt?.seconds || 0));\r\n        }\r\n        \r\n        return filtered;\r\n      },\r\n      \r\n      progressDistribution() {\r\n        const distribution = {\r\n          '0-20%': 0,\r\n          '21-40%': 0,\r\n          '41-60%': 0,\r\n          '61-80%': 0,\r\n          '81-100%': 0\r\n        };\r\n        \r\n        this.activities.forEach(activity => {\r\n          const progress = activity.progress || 0;\r\n          if (progress <= 20) {\r\n            distribution['0-20%']++;\r\n          } else if (progress <= 40) {\r\n            distribution['21-40%']++;\r\n          } else if (progress <= 60) {\r\n            distribution['41-60%']++;\r\n          } else if (progress <= 80) {\r\n            distribution['61-80%']++;\r\n          } else {\r\n            distribution['81-100%']++;\r\n          }\r\n        });\r\n        \r\n        return distribution;\r\n      },\r\n      \r\n      categoryDistribution() {\r\n        const distribution = {};\r\n        \r\n        this.activities.forEach(activity => {\r\n          const category = this.displayCategory(activity) || 'Uncategorized';\r\n          distribution[category] = (distribution[category] || 0) + 1;\r\n        });\r\n        \r\n        return distribution;\r\n      },\r\n      \r\n      \r\n    },\r\n    \r\n    methods: {\r\n    handleCategoryChange() {\r\n  if (this.newActivity.category === 'custom') {\r\n    this.openCategoriesModal();\r\n    this.newActivity.customCategory = '';\r\n  }\r\n},\r\n    openCategoriesModal() {\r\n    this.showCategoriesModal = true;\r\n    this.newCategory = '';\r\n  },\r\n  \r\n  addCategory() {\r\n    if (this.newCategory.trim() && !this.userCategories.includes(this.newCategory.trim())) {\r\n      this.userCategories.push(this.newCategory.trim());\r\n      this.newCategory = '';\r\n    }\r\n  },\r\n  \r\n  removeCategory(index) {\r\n    this.userCategories.splice(index, 1);\r\n  },\r\n  \r\n  async saveCategories() {\r\n    try {\r\n      if (!this.userId) return;\r\n      \r\n      const userRef = doc(this.db, \"users\", this.userId);\r\n      await updateDoc(userRef, {\r\n        categories: this.userCategories\r\n      });\r\n      \r\n      this.showCategoriesModal = false;\r\n    } catch (error) {\r\n      console.error(\"Error saving categories:\", error);\r\n      alert(`Failed to save categories: ${error.message}`);\r\n    }\r\n  },\r\n    resetFilters() {\r\n  this.searchQuery = '';\r\n  this.filterStatus = 'all';\r\n  this.sortBy = 'date-desc';\r\n},\r\n      displayCategory(activity) {\r\n        return activity.customCategory || activity.category || '';\r\n      },\r\n      \r\n      toggleAddForm() {\r\n        this.showAddForm = !this.showAddForm;\r\n        if (!this.showAddForm) {\r\n          this.resetForm();\r\n        }\r\n      },\r\n      \r\n      updateProgressColor() {\r\n        const progress = this.newActivity.progress;\r\n        if (progress < 30) {\r\n          this.progressColor = '#ff9800';\r\n        } else if (progress < 70) {\r\n          this.progressColor = '#2196f3';\r\n        } else {\r\n          this.progressColor = '#4caf50';\r\n        }\r\n      },\r\n      \r\n      toggleEditProgress(activityId) {\r\n        if (this.editingProgressId === activityId) {\r\n          this.editingProgressId = null;\r\n        } else {\r\n          const activity = this.activities.find(a => a.id === activityId);\r\n          if (activity) {\r\n            this.activityProgress = activity.progress || 0;\r\n            this.editingProgressId = activityId;\r\n          }\r\n        }\r\n      },\r\n      \r\n      async updateProgress(activityId) {\r\n        try {\r\n          if (!this.userId || !activityId) return;\r\n          \r\n          const progress = parseInt(this.activityProgress) || 0;\r\n          const validProgress = Math.max(0, Math.min(100, progress));\r\n          \r\n          const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\r\n          \r\n          await updateDoc(activityRef, {\r\n            progress: validProgress,\r\n            done: validProgress === 100,\r\n            ...(validProgress === 100 ? { completedAt: serverTimestamp() } : {})\r\n          });\r\n          \r\n          const activityIndex = this.activities.findIndex(a => a.id === activityId);\r\n          if (activityIndex !== -1) {\r\n            this.activities[activityIndex].progress = validProgress;\r\n            this.activities[activityIndex].done = validProgress === 100;\r\n            if (validProgress === 100) {\r\n              this.activities[activityIndex].completedAt = { seconds: Math.floor(Date.now() / 1000) };\r\n            }\r\n          }\r\n          \r\n          this.editingProgressId = null;\r\n          this.updateCharts();\r\n        } catch (error) {\r\n          console.error(\"Error updating progress:\", error);\r\n          alert(`Failed to update progress: ${error.message}`);\r\n        }\r\n      },\r\n      \r\n      async updateActivityProgress(activityId, progress) {\r\n        this.activityProgress = progress;\r\n        await this.updateProgress(activityId);\r\n      },\r\n      \r\n      async completeActivity(activityId) {\r\n        this.activityProgress = 100;\r\n        await this.updateProgress(activityId);\r\n      },\r\n      \r\n      confirmDelete(activityId) {\r\n        this.activityToDelete = activityId;\r\n        this.showDeleteModal = true;\r\n      },\r\n      \r\n      async deleteActivity() {\r\n        try {\r\n          if (!this.userId || !this.activityToDelete) return;\r\n          \r\n          const activityRef = doc(this.db, \"users\", this.userId, \"activities\", this.activityToDelete);\r\n          await deleteDoc(activityRef);\r\n          \r\n          this.activities = this.activities.filter(a => a.id !== this.activityToDelete);\r\n          this.showDeleteModal = false;\r\n          this.activityToDelete = null;\r\n          this.updateCharts();\r\n        } catch (error) {\r\n          console.error(\"Error deleting activity:\", error);\r\n          alert(`Failed to delete activity: ${error.message}`);\r\n        }\r\n      },\r\n      \r\n      addTool() {\r\n        this.newActivity.tools.push(\"\");\r\n      },\r\n      \r\n      removeTool(index) {\r\n        this.newActivity.tools.splice(index, 1);\r\n        if (this.newActivity.tools.length === 0) {\r\n          this.newActivity.tools.push(\"\");\r\n        }\r\n      },\r\n      \r\n      resetForm() {\r\n        this.newActivity = {\r\n          objective: \"\",\r\n          category: \"\",\r\n          customCategory: \"\",\r\n          tools: [\"\"],\r\n          done: false,\r\n          progress: 0,\r\n          priority: \"medium\",\r\n          deadline: \"\",\r\n          notes: \"\",\r\n          favorite: false\r\n        };\r\n        this.progressColor = '#4a89dc';\r\n      },\r\n      \r\n      formatDate(timestamp, short = false) {\r\n        if (!timestamp) return 'N/A';\r\n        try {\r\n          const date = timestamp.toDate();\r\n          if (short) {\r\n            return date.toLocaleDateString('en-US', { \r\n              month: 'short', \r\n              day: 'numeric'\r\n            });\r\n          }\r\n          return date.toLocaleDateString('en-US', { \r\n            year: 'numeric', \r\n            month: 'short', \r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Date formatting error:\", error);\r\n          return 'Invalid date';\r\n        }\r\n      },\r\n      \r\n      formatDeadline(dateString) {\r\n        if (!dateString) return '';\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString('en-US', { \r\n          year: 'numeric', \r\n          month: 'short', \r\n          day: 'numeric'\r\n        });\r\n      },\r\n      \r\n      isDeadlineApproaching(dateString) {\r\n        if (!dateString) return false;\r\n        const deadline = new Date(dateString);\r\n        const today = new Date();\r\n        const diffTime = deadline - today;\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        return diffDays <= 3 && diffDays >= 0;\r\n      },\r\n      \r\n      isOverdue(dateString) {\r\n        if (!dateString) return false;\r\n        const deadline = new Date(dateString);\r\n        const today = new Date();\r\n        return deadline < today;\r\n      },\r\n      \r\n      sortByField(field) {\r\n        if (this.sortField === field) {\r\n          this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n        } else {\r\n          this.sortField = field;\r\n          this.sortDirection = 'desc';\r\n        }\r\n        this.sortBy = `${field}-${this.sortDirection}`;\r\n      },\r\n      \r\n      async submitActivity() {\r\n        try {\r\n          if (!this.userId || this.userId.trim() === \"\") {\r\n            alert(\"You must be logged in to add activities. Please login and try again.\");\r\n            return;\r\n          }\r\n          // Validate and prepare data\r\n    const filteredTools = this.newActivity.tools.filter(tool => tool && tool.trim() !== \"\");\r\n    const progress = parseInt(this.newActivity.progress) || 0;\r\n    const validProgress = Math.max(0, Math.min(100, progress));\r\n    const isDone = validProgress === 100;\r\n\r\n    const activityData = {\r\n      objective: (this.newActivity.objective || \"\").trim(),\r\n      category: this.newActivity.category === 'custom' ? '' : this.newActivity.category,\r\n      customCategory: this.newActivity.category === 'custom' ? this.newActivity.customCategory : '',\r\n      tools: filteredTools || [],\r\n      done: isDone,\r\n      progress: validProgress,\r\n      priority: this.newActivity.priority || 'medium',\r\n      notes: this.newActivity.notes || '',\r\n      favorite: this.newActivity.favorite || false\r\n    };\r\n\r\n    // Add deadline if provided\r\n    if (this.newActivity.deadline) {\r\n      activityData.deadline = this.newActivity.deadline;\r\n    }\r\n\r\n    // If editing existing activity\r\n    if (this.currentActivityId) {\r\n      const activityRef = doc(this.db, \"users\", this.userId, \"activities\", this.currentActivityId);\r\n      await updateDoc(activityRef, activityData);\r\n      \r\n      // Update local state\r\n      const index = this.activities.findIndex(a => a.id === this.currentActivityId);\r\n      if (index !== -1) {\r\n        this.activities[index] = {\r\n          ...this.activities[index],\r\n          ...activityData\r\n        };\r\n      }\r\n    } \r\n    // If adding new activity\r\n    else {\r\n      activityData.startedAt = serverTimestamp();\r\n      if (isDone) {\r\n        activityData.completedAt = serverTimestamp();\r\n      }\r\n      \r\n      const userActivitiesRef = collection(this.db, \"users\", this.userId, \"activities\");\r\n      await addDoc(userActivitiesRef, activityData);\r\n    }\r\n\r\n    await this.loadActivities();\r\n    this.resetForm();\r\n    this.showAddForm = false;\r\n    this.currentActivityId = null;\r\n  } catch (error) {\r\n    console.error(\"Error saving activity:\", error);\r\n    alert(`Failed to save activity: ${error.message}`);\r\n  }\r\n},\r\n      \r\n      async loadActivities() {\r\n        if (!this.userId) {\r\n          console.warn(\"Cannot load activities: No user ID available\");\r\n          this.loading = false;\r\n          this.activities = [];\r\n          return;\r\n        }\r\n        \r\n        this.loading = true;\r\n        try {\r\n          const userActivitiesRef = collection(this.db, \"users\", this.userId, \"activities\");\r\n          const activitiesQuery = query(userActivitiesRef, orderBy(\"startedAt\", \"desc\"));\r\n          const querySnapshot = await getDocs(activitiesQuery);\r\n          \r\n          this.activities = querySnapshot.docs.map(doc => {\r\n            const data = doc.data();\r\n            const progress = parseInt(data.progress) || 0;\r\n            \r\n            return {\r\n              id: doc.id,\r\n              objective: data.objective || \"Untitled Activity\",\r\n              category: data.category || '',\r\n              customCategory: data.customCategory || '',\r\n              tools: Array.isArray(data.tools) ? data.tools : [],\r\n              done: progress === 100 ? true : Boolean(data.done),\r\n              startedAt: data.startedAt || null,\r\n              completedAt: data.completedAt || null,\r\n              userId: data.userId || this.userId,\r\n              progress: progress,\r\n              priority: data.priority || 'medium',\r\n              deadline: data.deadline || null,\r\n              notes: data.notes || '',\r\n              favorite: data.favorite || false\r\n            };\r\n          });\r\n          \r\n          // Load user categories if they exist\r\n          const userDocRef = doc(this.db, \"users\", this.userId);\r\n          const userDoc = await getDoc(userDocRef);\r\n          if (userDoc.exists() && userDoc.data().categories) {\r\n            this.userCategories = userDoc.data().categories;\r\n          }\r\n          \r\n          this.updateCharts();\r\n        } catch (error) {\r\n          console.error(\"Error loading activities:\", error);\r\n          if (error.code === 'permission-denied') {\r\n            alert(\"Permission denied. You may not have access to view these activities.\");\r\n          } else {\r\n            alert(`Failed to load activities: ${error.message}`);\r\n          }\r\n          this.activities = [];\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      \r\n      async toggleFavorite(activityId) {\r\n        try {\r\n          if (!this.userId || !activityId) return;\r\n          \r\n          const activity = this.activities.find(a => a.id === activityId);\r\n          if (!activity) return;\r\n          \r\n          const newFavoriteStatus = !activity.favorite;\r\n          const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\r\n          \r\n          await updateDoc(activityRef, {\r\n            favorite: newFavoriteStatus\r\n          });\r\n          \r\n          activity.favorite = newFavoriteStatus;\r\n        } catch (error) {\r\n          console.error(\"Error toggling favorite:\", error);\r\n          alert(`Failed to update favorite status: ${error.message}`);\r\n        }\r\n      },\r\n      async markAsComplete(activityId) {\r\n  try {\r\n    if (!this.userId || !activityId) return;\r\n    \r\n    const activityRef = doc(this.db, \"users\", this.userId, \"activities\", activityId);\r\n    \r\n    await updateDoc(activityRef, {\r\n      progress: 100,\r\n      done: true,\r\n      completedAt: serverTimestamp()\r\n    });\r\n    \r\n    // Update local state\r\n    const activity = this.activities.find(a => a.id === activityId);\r\n    if (activity) {\r\n      activity.progress = 100;\r\n      activity.done = true;\r\n      activity.completedAt = { seconds: Math.floor(Date.now() / 1000) };\r\n    }\r\n    \r\n    this.updateCharts();\r\n  } catch (error) {\r\n    console.error(\"Error marking as complete:\", error);\r\n    alert(`Failed to mark as complete: ${error.message}`);\r\n  }\r\n},\r\n      \r\n      editActivity(activity) {\r\n        this.newActivity = { \r\n          objective: activity.objective,\r\n          category: activity.customCategory ? 'custom' : activity.category || '',\r\n          customCategory: activity.customCategory || '',\r\n          tools: [...(activity.tools || [])],\r\n          progress: activity.progress || 0,\r\n          priority: activity.priority || 'medium',\r\n          deadline: activity.deadline || '',\r\n          notes: activity.notes || '',\r\n          favorite: activity.favorite || false\r\n        };\r\n        \r\n        this.currentActivityId = activity.id;\r\n        this.isEditing = true;\r\n        this.showAddForm = true;\r\n        \r\n        // Scroll to form\r\n        this.$nextTick(() => {\r\n          document.querySelector('.activity-form')?.scrollIntoView({ behavior: 'smooth' });\r\n        });\r\n      },\r\n      \r\n      toggleActivityDetails(activityId) {\r\n        const index = this.expandedActivities.indexOf(activityId);\r\n        if (index === -1) {\r\n          this.expandedActivities.push(activityId);\r\n        } else {\r\n          this.expandedActivities.splice(index, 1);\r\n        }\r\n      },\r\n      \r\n      async showActivityLog(activity) {\r\n        this.selectedActivity = activity;\r\n        this.logProgress = activity.progress || 0;\r\n        this.logNotes = '';\r\n        this.showLogModal = true;\r\n        \r\n        try {\r\n          const logsRef = collection(this.db, \"users\", this.userId, \"activities\", activity.id, \"logs\");\r\n          const logsQuery = query(logsRef, orderBy(\"timestamp\", \"desc\"));\r\n          const querySnapshot = await getDocs(logsQuery);\r\n          \r\n          this.activityLogs = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          }));\r\n        } catch (error) {\r\n          console.error(\"Error loading activity logs:\", error);\r\n          this.activityLogs = [];\r\n        }\r\n      },\r\n      \r\n      async addLogEntry() {\r\n        try {\r\n          if (!this.userId || !this.selectedActivity) return;\r\n          \r\n          const logsRef = collection(this.db, \"users\", this.userId, \"activities\", this.selectedActivity.id, \"logs\");\r\n          \r\n          await addDoc(logsRef, {\r\n            progress: this.logProgress,\r\n            notes: this.logNotes,\r\n            timestamp: serverTimestamp()\r\n          });\r\n          \r\n          // Update activity progress if changed\r\n          if (this.logProgress !== this.selectedActivity.progress) {\r\n            await this.updateActivityProgress(this.selectedActivity.id, this.logProgress);\r\n          }\r\n          \r\n          // Reload logs\r\n          await this.showActivityLog(this.selectedActivity);\r\n          this.logNotes = '';\r\n        } catch (error) {\r\n          console.error(\"Error adding log entry:\", error);\r\n          alert(`Failed to add log entry: ${error.message}`);\r\n        }\r\n      },\r\n      \r\n      async deleteLogEntry(logId) {\r\n        try {\r\n          if (!this.userId || !this.selectedActivity || !logId) return;\r\n          \r\n          const logRef = doc(this.db, \"users\", this.userId, \"activities\", this.selectedActivity.id, \"logs\", logId);\r\n          await deleteDoc(logRef);\r\n          \r\n          this.activityLogs = this.activityLogs.filter(log => log.id !== logId);\r\n        } catch (error) {\r\n          console.error(\"Error deleting log entry:\", error);\r\n          alert(`Failed to delete log entry: ${error.message}`);\r\n        }\r\n      },\r\n      \r\n      updateCharts() {\r\n        if (!this.$refs.progressChart || !this.$refs.categoryChart) return;\r\n        \r\n        // Destroy existing charts if they exist\r\n        if (this.progressChart) this.progressChart.destroy();\r\n        if (this.categoryChart) this.categoryChart.destroy();\r\n        \r\n        // Progress Distribution Chart\r\n        this.progressChart = new Chart(this.$refs.progressChart, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: ['Not Started (0%)', 'Beginning (1-20%)', 'Progressing (21-50%)', 'Almost There (51-90%)', 'Completed (91-100%)'],\r\n      datasets: [{\r\n        label: 'Number of Activities',\r\n        data: [\r\n          this.activities.filter(a => (a.progress || 0) === 0).length,\r\n          this.activities.filter(a => (a.progress || 0) > 0 && (a.progress || 0) <= 20).length,\r\n          this.activities.filter(a => (a.progress || 0) > 20 && (a.progress || 0) <= 50).length,\r\n          this.activities.filter(a => (a.progress || 0) > 50 && (a.progress || 0) <= 90).length,\r\n          this.activities.filter(a => (a.progress || 0) > 90).length\r\n        ],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.7)',    // Red - Not started\r\n          'rgba(255, 159, 64, 0.7)',    // Orange - Beginning\r\n          'rgba(255, 205, 86, 0.7)',    // Yellow - Progressing\r\n          'rgba(54, 162, 235, 0.7)',   // Blue - Almost there\r\n          'rgba(75, 192, 192, 0.7)'    // Green - Completed\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n          'rgba(255, 205, 86, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(75, 192, 192, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      plugins: {\r\n        legend: {\r\n          position : 'bottom'\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: function(context) {\r\n              return `${context.parsed.y} activities`;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          title: {\r\n            display: true,\r\n            text: 'Number of Activities'\r\n          },\r\n          ticks: {\r\n            stepSize: 1\r\n          }\r\n        },\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: 'Progress Stage'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n        \r\n        \r\n        // Category Chart\r\n        const categoryLabels = Object.keys(this.categoryDistribution);\r\n        const categoryValues = Object.values(this.categoryDistribution);\r\n        \r\n        this.categoryChart = new Chart(this.$refs.categoryChart, {\r\n          type: 'doughnut',\r\n          data: {\r\n            labels: categoryLabels,\r\n            datasets: [{\r\n              data: categoryValues,\r\n              backgroundColor: [\r\n                'rgba(255, 99, 132, 0.7)',\r\n                'rgba(54, 162, 235, 0.7)',\r\n                'rgba(255, 206, 86, 0.7)',\r\n                'rgba(75, 192, 192, 0.7)',\r\n                'rgba(153, 102, 255, 0.7)',\r\n                'rgba(255, 159, 64, 0.7)'\r\n              ],\r\n              borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n              ],\r\n              borderWidth: 1\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n                        maintainAspectRatio: false,\r\n\r\n            plugins: {\r\n              legend: {\r\n                position: 'right'\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n     \r\n    beforeUnmount() {\r\n      if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n    }\r\n  if (this.progressChart) this.progressChart.destroy();\r\n  if (this.timelineChart) this.timelineChart.destroy();\r\n  if (this.categoryChart) this.categoryChart.destroy();\r\n},\r\n    mounted() {\r\n      this.db = getFirestore();\r\n      this.auth = getAuth();\r\n      \r\n       this.unsubscribe = onAuthStateChanged(this.auth, async (user) => {\r\n        if (user) {\r\n          this.userId = user.uid;\r\n          await this.loadActivities();\r\n        } else {\r\n          this.userId = null;\r\n          this.activities = [];\r\n          this.loading = false;\r\n        }\r\n      });\r\n     \r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Base Styles */\r\n  .activities-container {\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    background-color: #f5f9ff;\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  /* Header Section */\r\n  .header-section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 2rem;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 1px solid #d6e4ff;\r\n  }\r\n  \r\n  .page-title {\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    margin: 0;\r\n    color: #2c3e50;\r\n    background: linear-gradient(to right, #3a7bd5, #00d2ff);\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n  \r\n  .header-actions {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  /* Buttons */\r\n  .button-icon {\r\n    margin-left: 5px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .add-button {\r\n    background: linear-gradient(135deg, #3a7bd5, #00d2ff);\r\n    color: white;\r\n    border: none;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 4px 6px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  .add-button:hover {\r\n    background: linear-gradient(135deg, #2a6bc4, #00c2f0);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 8px rgba(58, 123, 213, 0.3);\r\n  }\r\n  \r\n  .back-link {\r\n    text-decoration: none;\r\n    color: #3a7bd5;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n    padding: 0.5rem;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .back-link:hover {\r\n    background-color: rgba(58, 123, 213, 0.1);\r\n  }\r\n  \r\n  .back-icon {\r\n    margin-right: 5px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  /* Form Styles */\r\n  .activity-form {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    margin-bottom: 2rem;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n    border: 1px solid #e0ecff;\r\n    animation: slideDown 0.3s ease;\r\n  }\r\n  \r\n  @keyframes slideDown {\r\n    from { opacity: 0; transform: translateY(-20px); }\r\n    to { opacity: 1; transform: translateY(0); }\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 1.25rem;\r\n  }\r\n  \r\n  .form-group label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 600;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .form-input {\r\n    width: 100%;\r\n    padding: 0.75rem;\r\n    border: 1px solid #d6e4ff;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  .form-input:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  textarea.form-input {\r\n    min-height: 100px;\r\n    resize: vertical;\r\n  }\r\n  \r\n  /* Category Selector */\r\n  .category-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .custom-category-input {\r\n    padding: 0.75rem;\r\n    border: 1px solid #d6e4ff;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  /* Tool Inputs */\r\n  .tool-input {\r\n    display: flex;\r\n    margin-bottom: 0.5rem;\r\n    align-items: center;\r\n  }\r\n  \r\n  .tool-input input {\r\n    flex-grow: 1;\r\n    margin-right: 0.5rem;\r\n  }\r\n  \r\n  .remove-tool {\r\n    background: #ff6b6b;\r\n    color: white;\r\n    border: none;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .remove-tool:hover {\r\n    background: #ff5252;\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  .remove-tool:disabled {\r\n    background: #cccccc;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n  \r\n  .add-tool {\r\n    background: #4dabf7;\r\n    color: white;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-size: 0.9rem;\r\n    margin-top: 0.5rem;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .add-tool:hover {\r\n    background: #339af0;\r\n  }\r\n  \r\n  /* Progress Input */\r\n  .progress-input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .progress-slider {\r\n    flex-grow: 1;\r\n    height: 8px;\r\n    border-radius: 4px;\r\n    background: #e0ecff;\r\n    outline: none;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .progress-slider::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: #3a7bd5;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  }\r\n  \r\n  .progress-slider::-webkit-slider-thumb:hover {\r\n    transform: scale(1.1);\r\n    background: #2a6bc4;\r\n  }\r\n  \r\n  .progress-value {\r\n    min-width: 3.5rem;\r\n    font-weight: 600;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Form Actions */\r\n  .form-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .save-button {\r\n    background: linear-gradient(135deg, #4dabf7, #3a7bd5);\r\n    color: white;\r\n    border: none;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 2px 5px rgba(77, 171, 247, 0.3);\r\n  }\r\n  \r\n  .save-button:hover {\r\n    background: linear-gradient(135deg, #339af0, #2a6bc4);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(77, 171, 247, 0.4);\r\n  }\r\n  \r\n  .reset-button {\r\n    background-color: #e0ecff;\r\n    color: #3a7bd5;\r\n    border: none;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .reset-button:hover {\r\n    background-color: #d0e0ff;\r\n  }\r\n  \r\n  /* Stats Container */\r\n  .stats-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n    gap: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .stat-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1.5rem;\r\n    text-align: center;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n    transition: all 0.3s ease;\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .stat-card:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    margin-bottom: 0.5rem;\r\n    color: #3a7bd5;\r\n  }\r\n  \r\n  .stat-label {\r\n    color: #6c757d;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  /* Charts Container */\r\n  .charts-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 1.5rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .chart-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1.5rem;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .chart-card h3 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    color: #2c3e50;\r\n    font-size: 1.25rem;\r\n  }\r\n  \r\n  .chart-wrapper {\r\n    position: relative;\r\n    height: 250px;\r\n    width:100%;\r\n  }\r\n  \r\n  \r\n  /* View Toggle */\r\n  .view-toggle {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n    margin-bottom: 1.5rem;\r\n    background: white;\r\n    padding: 1rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 6px rgba(0,0,0,0.05);\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .view-btn {\r\n    background: #e0ecff;\r\n    color: #3a7bd5;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .view-btn.active {\r\n    background: #3a7bd5;\r\n    color: white;\r\n  }\r\n  \r\n  .view-btn:hover:not(.active) {\r\n    background: #d0e0ff;\r\n  }\r\n  \r\n  /* Loading State */\r\n  .loading-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .loading-spinner {\r\n    width: 50px;\r\n    height: 50px;\r\n    border: 4px solid rgba(58, 123, 213, 0.2);\r\n    border-radius: 50%;\r\n    border-top-color: #3a7bd5;\r\n    animation: spin 1s ease-in-out infinite;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  \r\n  /* Card View */\r\n  .activities-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .activity-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1.5rem;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n    transition: all 0.3s ease;\r\n    border: 1px solid #e0ecff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n  }\r\n  \r\n  .activity-card:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  .activity-card.completed-card {\r\n    border-left: 4px solid #51cf66;\r\n  }\r\n  \r\n  .activity-card.priority-high {\r\n    border-left: 4px solid #ff6b6b;\r\n  }\r\n  \r\n  .activity-card.priority-medium {\r\n    border-left: 4px solid #ff922b;\r\n  }\r\n  \r\n  .activity-card.priority-low {\r\n    border-left: 4px solid #51cf66;\r\n  }\r\n  \r\n  .activity-card.overdue-card {\r\n    border-left: 4px solid #ff6b6b;\r\n    animation: pulse 2s infinite;\r\n  }\r\n  \r\n  @keyframes pulse {\r\n    0% { box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.4); }\r\n    70% { box-shadow: 0 0 0 10px rgba(255, 107, 107, 0); }\r\n    100% { box-shadow: 0 0 0 0 rgba(255, 107, 107, 0); }\r\n  }\r\n  \r\n  .activity-header {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .activity-title {\r\n    margin: 0;\r\n    font-size: 1.25rem;\r\n    color: #2c3e50;\r\n    word-break: break-word;\r\n  }\r\n  \r\n  .activity-meta {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 0.5rem;\r\n    font-size: 0.85rem;\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .activity-date {\r\n    font-size: 0.8rem;\r\n  }\r\n  \r\n  .activity-priority {\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 12px;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: capitalize;\r\n  }\r\n  \r\n  .priority-high-badge {\r\n    background-color: #fff0f0;\r\n    color: #e03131;\r\n  }\r\n  \r\n  .priority-medium-badge {\r\n    background-color: #fff4e6;\r\n    color: #e67700;\r\n  }\r\n  \r\n  .priority-low-badge {\r\n    background-color: #ebfbee;\r\n    color: #2b8a3e;\r\n  }\r\n  \r\n  .activity-category {\r\n    margin: 0.5rem 0;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .category-label {\r\n    font-weight: 600;\r\n    margin-right: 0.5rem;\r\n  }\r\n  \r\n  /* Activity Tools */\r\n  .activity-tools {\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .tools-label {\r\n    font-weight: 600;\r\n    margin-right: 0.5rem;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .tool-tag {\r\n    display: inline-block;\r\n    background: #e3f2fd;\r\n    color: #1976d2;\r\n    padding: 0.25rem 0.75rem;\r\n    border-radius: 12px;\r\n    font-size: 0.8rem;\r\n    margin-right: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .tool-tag:hover {\r\n    background: #bbdefb;\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  /* Progress Bar */\r\n  .activity-progress {\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .progress-bar-container {\r\n    height: 8px;\r\n    background-color: #e0ecff;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .progress-bar {\r\n    height: 100%;\r\n    transition: width 0.5s ease;\r\n  }\r\n  \r\n  .progress-low {\r\n    background-color: #ff922b;\r\n  }\r\n  \r\n  .progress-mid {\r\n    background-color: #3a7bd5;\r\n  }\r\n  \r\n  .progress-high {\r\n    background-color: #51cf66;\r\n  }\r\n  \r\n  .progress-text {\r\n    font-size: 0.9rem;\r\n    color: #6c757d;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Activity Notes */\r\n  .activity-notes {\r\n    margin: 1rem 0;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .notes-label {\r\n    font-weight: 600;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  \r\n  .notes-content {\r\n    background: #f5f9ff;\r\n    padding: 0.75rem;\r\n    border-radius: 8px;\r\n    border: 1px dashed #d6e4ff;\r\n    white-space: pre-wrap;\r\n  }\r\n  \r\n  /* Activity Footer */\r\n  .activity-footer {\r\n    margin-top: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    gap: 0.5rem;\r\n    font-size: 0.85rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .activity-status {\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .status-completed {\r\n    color: #51cf66;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .activity-deadline {\r\n    color: #6c757d;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .deadline-warning {\r\n    color: #ff922b;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .deadline-danger {\r\n    color: #ff6b6b;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .activity-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .action-btn {\r\n    background: none;\r\n    border: none;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .action-btn.edit {\r\n    color: #3a7bd5;\r\n  }\r\n  .action-btn.complete {\r\n  color: #4CAF50; /* Green color */\r\n}\r\n\r\n.action-btn.complete:hover {\r\n  color: #3d8b40; /* Darker green on hover */\r\n}\r\n  \r\n  .action-btn.edit:hover {\r\n    background: rgba(58, 123, 213, 0.1);\r\n  }\r\n  \r\n  .action-btn.favorite {\r\n    color: #f1c40f;\r\n  }\r\n  \r\n  .action-btn.favorite:hover {\r\n    background: rgba(241, 196, 15, 0.1);\r\n  }\r\n  \r\n  .action-btn.delete {\r\n    color: #ff6b6b;\r\n  }\r\n  \r\n  .action-btn.delete:hover {\r\n    background: rgba(255, 107, 107, 0.1);\r\n  }\r\n  \r\n  /* List View */\r\n  .activities-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .activity-item {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1rem;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n    border: 1px solid #e0ecff;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .activity-item:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  .activity-item.completed-item {\r\n    border-left: 4px solid #51cf66;\r\n  }\r\n  \r\n  .activity-item.priority-high-item {\r\n    border-left: 4px solid #ff6b6b;\r\n  }\r\n  \r\n  .activity-item.overdue-item {\r\n    border-left: 4px solid #ff6b6b;\r\n    animation: pulse 2s infinite;\r\n  }\r\n  \r\n  .item-main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .item-title {\r\n    font-weight: 600;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .item-meta {\r\n    display: flex;\r\n    gap: 1rem;\r\n    font-size: 0.85rem;\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .item-category {\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .item-date {\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .item-progress {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    margin-top: 0.5rem;\r\n  }\r\n  \r\n  .item-progress .progress-bar-container {\r\n    flex-grow: 1;\r\n    height: 6px;\r\n  }\r\n  \r\n  .item-progress .progress-text {\r\n    font-size: 0.8rem;\r\n    min-width: 3rem;\r\n  }\r\n  \r\n  .item-details {\r\n    margin-top: 1rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px dashed #e0ecff;\r\n  }\r\n  \r\n  .details-section {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .details-section h5 {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 0.9rem;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .tools-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .notes-content {\r\n    font-size: 0.9rem;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n  }\r\n  \r\n  .status-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .status-text {\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .status-completed {\r\n    color: #51cf66;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .priority-badge {\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 12px;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: capitalize;\r\n  }\r\n  \r\n  .priority-high-badge {\r\n    background-color: #fff0f0;\r\n    color: #e03131;\r\n  }\r\n  \r\n  .priority-medium-badge {\r\n    background-color: #fff4e6;\r\n    color: #e67700;\r\n  }\r\n  \r\n  .priority-low-badge {\r\n    background-color: #ebfbee;\r\n    color: #2b8a3e;\r\n  }\r\n  \r\n  .details-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .btn {\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    border-radius: 6px;\r\n    font-size: 0.85rem;\r\n    cursor: pointer;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .btn.small-btn {\r\n    padding: 0.25rem 0.75rem;\r\n    font-size: 0.8rem;\r\n  }\r\n  \r\n  .btn.complete {\r\n    background: #51cf66;\r\n    color: white;\r\n  }\r\n  \r\n  .btn.complete:hover {\r\n    background: #40c057;\r\n  }\r\n  \r\n  .btn.delete {\r\n    background: #ff6b6b;\r\n    color: white;\r\n  }\r\n  \r\n  .btn.delete:hover {\r\n    background: #ff5252;\r\n  }\r\n  \r\n  /* Table View */\r\n  .activities-table {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1.5rem;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n    border: 1px solid #e0ecff;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .table-controls {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n    align-items: center;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    flex-grow: 1;\r\n    min-width: 200px;\r\n  }\r\n  \r\n  .search-input {\r\n    width: 100%;\r\n    padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n    border: 1px solid #d6e4ff;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  .search-input:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 1rem;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .filter-container, .sort-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .filter-select, .sort-select {\r\n    padding: 0.75rem;\r\n    border: 1px solid #d6e4ff;\r\n    border-radius: 8px;\r\n    font-size: 0.9rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  .filter-select:focus, .sort-select:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    padding: 1rem;\r\n    text-align: left;\r\n    border-bottom: 1px solid #e0ecff;\r\n  }\r\n  \r\n  th {\r\n    font-weight: 600;\r\n    color: #2c3e50;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  th:hover {\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  .sort-icon {\r\n    margin-left: 0.5rem;\r\n  }\r\n  \r\n  tr:hover td {\r\n    background-color: #f5f9ff;\r\n  }\r\n  \r\n  .completed-row {\r\n    background-color: rgba(81, 207, 102, 0.05);\r\n  }\r\n  \r\n  .priority-high-row {\r\n    background-color: rgba(255, 107, 107, 0.05);\r\n  }\r\n  \r\n  .overdue-row {\r\n    animation: pulse-bg 2s infinite;\r\n  }\r\n  \r\n  @keyframes pulse-bg {\r\n    0% { background-color: rgba(255, 107, 107, 0.05); }\r\n    50% { background-color: rgba(255, 107, 107, 0.1); }\r\n    100% { background-color: rgba(255, 107, 107, 0.05); }\r\n  }\r\n  \r\n  .activity-title {\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .favorite-star {\r\n    color: #f1c40f;\r\n    margin-left: 0.5rem;\r\n  }\r\n  \r\n  .progress-cell {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .progress-cell .progress-bar-container {\r\n    flex-grow: 1;\r\n    height: 6px;\r\n  }\r\n  \r\n  .progress-cell .progress-text {\r\n    min-width: 3rem;\r\n    text-align: right;\r\n  }\r\n  \r\n  .deadline-cell {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .deadline-cell.overdue {\r\n    color: #ff6b6b;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .table-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  /* Empty State */\r\n  .empty-state {\r\n    text-align: center;\r\n    padding: 3rem;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n    margin-top: 2rem;\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .empty-icon {\r\n    font-size: 3rem;\r\n    margin-bottom: 1rem;\r\n    opacity: 0.7;\r\n    color: #3a7bd5;\r\n  }\r\n  \r\n  .empty-state h3 {\r\n    margin: 0.5rem 0;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .empty-state p {\r\n    color: #6c757d;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .cta-button {\r\n    background: linear-gradient(135deg, #3a7bd5, #00d2ff);\r\n    color: white;\r\n    border: none;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 4px 6px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  .cta-button:hover {\r\n    background: linear-gradient(135deg, #2a6bc4, #00c2f0);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 8px rgba(58, 123, 213, 0.3);\r\n  }\r\n  \r\n  /* Modal */\r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n    animation: fadeIn 0.3s ease;\r\n  }\r\n  \r\n  .modal-container {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);\r\n    width: 90%;\r\n    max-width: 500px;\r\n    overflow: hidden;\r\n    animation: modalSlideUp 0.3s ease;\r\n  }\r\n  \r\n  .modal-container.large-modal {\r\n    max-width: 800px;\r\n  }\r\n  \r\n  @keyframes modalSlideUp {\r\n    from { transform: translateY(20px); opacity: 0; }\r\n    to { transform: translateY(0); opacity: 1; }\r\n  }\r\n  \r\n  .modal-header {\r\n    padding: 1rem 1.5rem;\r\n    border-bottom: 1px solid #e0ecff;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .modal-header h3 {\r\n    margin: 0;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .modal-close {\r\n    background: none;\r\n    border: none;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    color: #6c757d;\r\n    transition: all 0.3s ease;\r\n    padding: 0.25rem;\r\n  }\r\n  \r\n  .modal-close:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  \r\n  .modal-body {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .log-container {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .log-form {\r\n    padding: 1rem;\r\n    border-right: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .log-entries {\r\n    padding: 1rem;\r\n    max-height: 400px;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .log-entry {\r\n    position: relative;\r\n    padding: 1rem;\r\n    margin-bottom: 1rem;\r\n    background: #f5f9ff;\r\n    border-radius: 8px;\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .log-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .log-date {\r\n    color: #6c757d;\r\n    font-size: 0.85rem;\r\n  }\r\n  \r\n  .log-progress {\r\n    color: #3a7bd5;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .log-content {\r\n    font-size: 0.9rem;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n  }\r\n  \r\n  .log-delete {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n    background: none;\r\n    border: none;\r\n    color: #ff6b6b;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .log-delete:hover {\r\n    background: rgba(255, 107, 107, 0.1);\r\n  }\r\n  \r\n  .empty-logs {\r\n    color: #6c757d;\r\n    text-align: center;\r\n    padding: 2rem;\r\n    font-style: italic;\r\n  }\r\n  \r\n  .modal-footer {\r\n    padding: 1rem 1.5rem;\r\n    border-top: 1px solid #e0ecff;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .modal-cancel {\r\n    background: #e0ecff;\r\n    color: #3a7bd5;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .modal-cancel:hover {\r\n    background: #d0e0ff;\r\n  }\r\n  \r\n  .modal-confirm {\r\n    background: #ff6b6b;\r\n    color: white;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .modal-confirm:hover {\r\n    background: #ff5252;\r\n  }\r\n  \r\n  /* Responsive Adjustments */\r\n  @media (max-width: 768px) {\r\n    .header-section {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .header-actions {\r\n      width: 100%;\r\n      justify-content: space-between;\r\n    }\r\n    \r\n    .charts-container {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .log-container {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .log-form {\r\n      border-right: none;\r\n      border-bottom: 1px solid #e0ecff;\r\n      padding-bottom: 1.5rem;\r\n    }\r\n    \r\n    .modal-container.large-modal {\r\n      max-height: 80vh;\r\n      overflow-y: auto;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 480px) {\r\n    .activities-container {\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .form-actions {\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .save-button, .reset-button {\r\n      width: 100%;\r\n    }\r\n    \r\n    .table-controls {\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n    }\r\n    \r\n    .filter-container, .sort-container {\r\n      width: 100%;\r\n    }\r\n    \r\n    .filter-select, .sort-select {\r\n      width: 100%;\r\n    }\r\n  }\r\n  .manage-categories-btn {\r\n  margin-left: 10px;\r\n  padding: 8px 12px;\r\n  background: #f0f2f5;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  color: #555;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.manage-categories-btn:hover {\r\n  background: #e0e2e5;\r\n  border-color: #ccc;\r\n}\r\n\r\n.manage-categories-btn i {\r\n  font-size: 14px;\r\n}\r\n.filter-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.75rem;\r\n  border: 1px solid #d6e4ff;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n  transition: all 0.3s ease;\r\n  background-color: #f5f9ff;\r\n  min-width: 150px;\r\n}\r\n\r\n.empty-table-state {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  margin-top: 1rem;\r\n  border: 1px dashed #e0ecff;\r\n}\r\n\r\n.reset-filters-btn {\r\n  margin-top: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  background: #3a7bd5;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.reset-filters-btn:hover {\r\n  background: #2a6bc4;\r\n}\r\n.action-btn.favorite {\r\n  color: #f1c40f;\r\n}\r\n\r\n.action-btn.favorite:hover {\r\n  background: rgba(241, 196, 15, 0.1);\r\n}\r\n\r\n/* Ensure Font Awesome icons are visible */\r\n.fas, .far {\r\n  font-size: 1rem;\r\n  width: 1em;\r\n  height: 1em;\r\n  display: inline-block;\r\n}\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}