{"ast":null,"code":"import { getAuth, EmailAuthProvider, reauthenticateWithCredential, updatePassword, updateEmail, sendEmailVerification, updateProfile as updateAuthProfile } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: \"ProfilePage\",\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    // User data\n    const firstName = ref('');\n    const lastName = ref('');\n    const oldPass = ref('');\n    const newPass = ref('');\n    const newEmail = ref('');\n    const userId = ref('');\n    const successMessage = ref('');\n    const errorMessage = ref('');\n    const email = ref('');\n    const emailVerified = ref(false);\n    const isOnline = ref(false);\n    const profileImageUrl = ref('');\n    const isUploading = ref(false);\n    const uploadProgress = ref(0);\n    const profileImagePath = ref('');\n    const imageUrlInput = ref('');\n    const darkMode = ref(false);\n\n    // Social media links\n    const socialLinks = ref({\n      github: '',\n      linkedin: '',\n      instagram: '',\n      facebook: '',\n      discord: ''\n    });\n\n    // Toggle dark mode\n    const toggleDarkMode = () => {\n      darkMode.value = !darkMode.value;\n      if (darkMode.value) {\n        document.documentElement.classList.add('dark-theme');\n      } else {\n        document.documentElement.classList.remove('dark-theme');\n      }\n      localStorage.setItem('darkMode', darkMode.value);\n    };\n\n    // Get current user on component load\n    const getCurrentUser = () => {\n      const auth = getAuth();\n      return auth.currentUser;\n    };\n\n    // Safely determine user ID from either auth or route params\n    const determineUserId = () => {\n      const currentUser = getCurrentUser();\n      if (currentUser?.uid) {\n        return currentUser.uid;\n      }\n      if (route.params.userid) {\n        return route.params.userid;\n      }\n      return null;\n    };\n    const fetchUserData = async () => {\n      try {\n        console.log(\"Fetching user data...\");\n        const id = determineUserId();\n        if (!id) {\n          errorMessage.value = \"No user ID found. Please log in.\";\n          console.error(\"User ID not found\");\n          setTimeout(() => {\n            router.push('/dash');\n          }, 2000);\n          return;\n        }\n        userId.value = id;\n        console.log(\"User ID:\", userId.value);\n        const db = getFirestore();\n        const userDoc = await getDoc(doc(db, \"users\", userId.value));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          firstName.value = userData.firstName || '';\n          lastName.value = userData.lastName || '';\n          email.value = userData.email || '';\n          isOnline.value = userData.isOnline || false;\n          if (userData.profileImageUrl) {\n            profileImageUrl.value = userData.profileImageUrl;\n            profileImagePath.value = userData.profileImagePath || '';\n            console.log(\"Loaded profile image:\", profileImageUrl.value);\n          }\n          if (userData.socialLinks) {\n            socialLinks.value = {\n              ...socialLinks.value,\n              ...userData.socialLinks\n            };\n          }\n          const currentUser = getCurrentUser();\n          if (currentUser) {\n            emailVerified.value = currentUser.emailVerified || false;\n            if (!email.value && currentUser.email) {\n              email.value = currentUser.email;\n              await updateDoc(doc(db, 'users', userId.value), {\n                email: currentUser.email,\n                updatedAt: new Date()\n              });\n            }\n          }\n          console.log(\"User data loaded successfully\");\n        } else {\n          const currentUser = getCurrentUser();\n          if (currentUser) {\n            console.log(\"Creating new user document...\");\n            await setDoc(doc(db, 'users', userId.value), {\n              firstName: '',\n              lastName: '',\n              email: currentUser.email || '',\n              isOnline: true,\n              profileImageUrl: '',\n              profileImagePath: '',\n              socialLinks: {},\n              createdAt: new Date()\n            });\n            email.value = currentUser.email || '';\n            emailVerified.value = currentUser.emailVerified || false;\n            console.log(\"New user document created\");\n          } else {\n            console.error(\"No user found in Auth or Firestore\");\n            errorMessage.value = \"User not found. Please log in again.\";\n            setTimeout(() => {\n              router.push('/login');\n            }, 2000);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        errorMessage.value = \"Failed to fetch user data: \" + error.message;\n      }\n    };\n    const setImageFromUrl = async () => {\n      if (!imageUrlInput.value) return;\n      try {\n        successMessage.value = '';\n        errorMessage.value = '';\n        isUploading.value = true;\n        if (!userId.value) {\n          const id = determineUserId();\n          if (!id) {\n            errorMessage.value = \"User ID not found. Please log in again.\";\n            isUploading.value = false;\n            return;\n          }\n          userId.value = id;\n        }\n        try {\n          new URL(imageUrlInput.value);\n        } catch (e) {\n          errorMessage.value = \"Please enter a valid URL\";\n          isUploading.value = false;\n          return;\n        }\n        try {\n          const imgPromise = new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = () => resolve(true);\n            img.onerror = () => reject(new Error(\"Could not load image from URL\"));\n            img.src = imageUrlInput.value;\n          });\n          await imgPromise;\n        } catch (loadError) {\n          errorMessage.value = \"Could not load image from this URL. Please check that it's a valid, accessible image URL.\";\n          isUploading.value = false;\n          return;\n        }\n        const currentUser = getCurrentUser();\n        if (currentUser) {\n          try {\n            await updateAuthProfile(currentUser, {\n              photoURL: imageUrlInput.value\n            });\n            console.log(\"Auth profile updated with URL\");\n          } catch (authError) {\n            console.error(\"Failed to update auth profile:\", authError);\n          }\n        }\n        const db = getFirestore();\n        await updateDoc(doc(db, 'users', userId.value), {\n          profileImageUrl: imageUrlInput.value,\n          profileImagePath: 'external_url',\n          updatedAt: new Date()\n        });\n        profileImageUrl.value = imageUrlInput.value;\n        profileImagePath.value = 'external_url';\n        successMessage.value = \"Profile picture updated successfully!\";\n        imageUrlInput.value = '';\n      } catch (error) {\n        console.error(\"Set image URL error:\", error);\n        errorMessage.value = \"Failed to set profile picture: \" + error.message;\n      } finally {\n        isUploading.value = false;\n      }\n    };\n    const handleImageError = () => {\n      if (profileImageUrl.value) {\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\n        profileImageUrl.value = '/default-avatar.png';\n      }\n    };\n    const handleImageUpload = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n      if (!validTypes.includes(file.type)) {\n        errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\n        return;\n      }\n      const maxSize = 500 * 1024;\n      if (file.size > maxSize) {\n        errorMessage.value = \"Image size must be less than 500KB\";\n        return;\n      }\n      try {\n        isUploading.value = true;\n        uploadProgress.value = 0;\n        successMessage.value = '';\n        errorMessage.value = '';\n        if (!userId.value) {\n          const id = determineUserId();\n          if (!id) {\n            errorMessage.value = \"User ID not found. Please log in again.\";\n            isUploading.value = false;\n            return;\n          }\n          userId.value = id;\n        }\n        const reader = new FileReader();\n        reader.onloadstart = () => {\n          uploadProgress.value = 10;\n        };\n        reader.onprogress = event => {\n          if (event.lengthComputable) {\n            const progress = Math.round(event.loaded / event.total * 90);\n            uploadProgress.value = progress;\n          }\n        };\n        reader.onerror = () => {\n          errorMessage.value = \"Failed to read image file\";\n          isUploading.value = false;\n        };\n        reader.onload = async e => {\n          try {\n            uploadProgress.value = 95;\n            const base64Image = e.target.result;\n            const currentUser = getCurrentUser();\n            if (currentUser) {\n              try {\n                await updateAuthProfile(currentUser, {\n                  photoURL: base64Image\n                });\n                console.log(\"Auth profile updated with base64 image\");\n              } catch (authError) {\n                console.error(\"Failed to update auth profile:\", authError);\n              }\n            }\n            const db = getFirestore();\n            await updateDoc(doc(db, 'users', userId.value), {\n              profileImageUrl: base64Image,\n              profileImagePath: 'base64_image',\n              updatedAt: new Date()\n            });\n            profileImageUrl.value = base64Image;\n            profileImagePath.value = 'base64_image';\n            successMessage.value = \"Profile picture updated successfully!\";\n            uploadProgress.value = 100;\n          } catch (finalError) {\n            console.error(\"Error saving base64 image:\", finalError);\n            errorMessage.value = \"Failed to save image: \" + finalError.message;\n          } finally {\n            isUploading.value = false;\n          }\n        };\n        reader.readAsDataURL(file);\n      } catch (error) {\n        console.error(\"Upload handler error:\", error);\n        errorMessage.value = \"Failed to process image: \" + error.message;\n        isUploading.value = false;\n      }\n    };\n    const removeProfilePicture = async () => {\n      if (isUploading.value) return;\n      try {\n        successMessage.value = '';\n        errorMessage.value = '';\n        if (!profileImageUrl.value) {\n          errorMessage.value = \"No profile picture to remove\";\n          return;\n        }\n        isUploading.value = true;\n        console.log(\"Removing profile picture\");\n        if (!userId.value) {\n          const id = determineUserId();\n          if (!id) {\n            errorMessage.value = \"User ID not found. Please log in again.\";\n            isUploading.value = false;\n            return;\n          }\n          userId.value = id;\n        }\n        const currentUser = getCurrentUser();\n        if (currentUser) {\n          try {\n            await updateAuthProfile(currentUser, {\n              photoURL: null\n            });\n            console.log(\"Auth profile photo URL cleared\");\n          } catch (authError) {\n            console.error(\"Error updating auth profile:\", authError);\n          }\n        }\n        const db = getFirestore();\n        await updateDoc(doc(db, 'users', userId.value), {\n          profileImageUrl: '',\n          profileImagePath: '',\n          updatedAt: new Date()\n        });\n        profileImageUrl.value = '';\n        profileImagePath.value = '';\n        successMessage.value = \"Profile picture removed successfully!\";\n      } catch (error) {\n        console.error(\"Remove profile picture error:\", error);\n        errorMessage.value = \"Failed to remove profile picture: \" + error.message;\n      } finally {\n        isUploading.value = false;\n      }\n    };\n    const isValidEmail = email => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    };\n    const updateProfile = async () => {\n      if (isUploading.value) return;\n      try {\n        successMessage.value = '';\n        errorMessage.value = '';\n        if (!userId.value) {\n          const id = determineUserId();\n          if (!id) {\n            errorMessage.value = \"User ID not found. Please log in again.\";\n            return;\n          }\n          userId.value = id;\n        }\n        const currentUser = getCurrentUser();\n        if (!currentUser) {\n          errorMessage.value = \"You must be logged in to update your profile\";\n          return;\n        }\n        if (!firstName.value.trim() || !lastName.value.trim()) {\n          errorMessage.value = \"First and last name are required\";\n          return;\n        }\n        const db = getFirestore();\n        const updateData = {\n          firstName: firstName.value.trim(),\n          lastName: lastName.value.trim(),\n          socialLinks: socialLinks.value,\n          updatedAt: new Date()\n        };\n        console.log(\"Updating profile with data:\", updateData);\n        await updateDoc(doc(db, 'users', userId.value), updateData);\n        console.log(\"Basic profile data updated successfully\");\n        if (oldPass.value) {\n          try {\n            console.log(\"Re-authenticating user for sensitive operations\");\n            const userEmail = currentUser.email || email.value;\n            if (!userEmail) {\n              errorMessage.value = \"No email found for authentication. Please contact support.\";\n              return;\n            }\n            const credential = EmailAuthProvider.credential(userEmail, oldPass.value);\n            await reauthenticateWithCredential(currentUser, credential);\n            console.log(\"Re-authentication successful\");\n            if (newPass.value) {\n              if (newPass.value.length < 6) {\n                errorMessage.value = \"Password must be at least 6 characters\";\n                return;\n              }\n              console.log(\"Updating password\");\n              await updatePassword(currentUser, newPass.value);\n              oldPass.value = '';\n              newPass.value = '';\n              successMessage.value = \"Password updated successfully!\";\n              console.log(\"Password updated successfully\");\n            }\n            if (newEmail.value && newEmail.value !== userEmail) {\n              if (!isValidEmail(newEmail.value)) {\n                errorMessage.value = \"Please enter a valid email address\";\n                return;\n              }\n              console.log(\"Updating email address to:\", newEmail.value);\n              await updateEmail(currentUser, newEmail.value);\n              console.log(\"Auth email updated\");\n              await sendEmailVerification(currentUser);\n              console.log(\"Verification email sent\");\n              await updateDoc(doc(db, 'users', userId.value), {\n                email: newEmail.value,\n                updatedAt: new Date()\n              });\n              console.log(\"Firestore email updated\");\n              email.value = newEmail.value;\n              successMessage.value = successMessage.value ? successMessage.value + \" Email updated successfully! Verification email sent.\" : \"Email updated successfully! Verification email sent.\";\n              newEmail.value = '';\n            }\n          } catch (authError) {\n            console.error(\"Authentication error:\", authError);\n            errorMessage.value = \"Authentication failed: \" + authError.message;\n            return;\n          }\n        } else if (newPass.value || newEmail.value) {\n          errorMessage.value = \"Current password is required to change password or email\";\n          return;\n        }\n        if (!successMessage.value) {\n          successMessage.value = \"Profile updated successfully!\";\n        }\n      } catch (error) {\n        console.error(\"Update profile error:\", error);\n        errorMessage.value = \"Failed to update profile: \" + error.message;\n      }\n    };\n    onMounted(async () => {\n      const savedTheme = localStorage.getItem('darkMode');\n      if (savedTheme !== null) {\n        darkMode.value = savedTheme === 'true';\n        if (darkMode.value) {\n          document.documentElement.classList.add('dark-theme');\n        }\n      } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        darkMode.value = true;\n        document.documentElement.classList.add('dark-theme');\n      }\n      console.log(\"ProfilePage component mounted\");\n      await fetchUserData();\n    });\n    return {\n      firstName,\n      lastName,\n      oldPass,\n      newPass,\n      newEmail,\n      userId,\n      successMessage,\n      errorMessage,\n      email,\n      emailVerified,\n      isOnline,\n      profileImageUrl,\n      isUploading,\n      uploadProgress,\n      imageUrlInput,\n      socialLinks,\n      darkMode,\n      toggleDarkMode,\n      setImageFromUrl,\n      handleImageError,\n      handleImageUpload,\n      removeProfilePicture,\n      updateProfile\n    };\n  }\n};","map":{"version":3,"names":["getAuth","EmailAuthProvider","reauthenticateWithCredential","updatePassword","updateEmail","sendEmailVerification","updateProfile","updateAuthProfile","getFirestore","doc","getDoc","setDoc","updateDoc","onMounted","ref","useRoute","useRouter","name","setup","route","router","firstName","lastName","oldPass","newPass","newEmail","userId","successMessage","errorMessage","email","emailVerified","isOnline","profileImageUrl","isUploading","uploadProgress","profileImagePath","imageUrlInput","darkMode","socialLinks","github","linkedin","instagram","facebook","discord","toggleDarkMode","value","document","documentElement","classList","add","remove","localStorage","setItem","getCurrentUser","auth","currentUser","determineUserId","uid","params","userid","fetchUserData","console","log","id","error","setTimeout","push","db","userDoc","exists","userData","data","updatedAt","Date","createdAt","message","setImageFromUrl","URL","e","imgPromise","Promise","resolve","reject","img","Image","onload","onerror","Error","src","loadError","photoURL","authError","handleImageError","handleImageUpload","event","file","target","files","validTypes","includes","type","maxSize","size","reader","FileReader","onloadstart","onprogress","lengthComputable","progress","Math","round","loaded","total","base64Image","result","finalError","readAsDataURL","removeProfilePicture","isValidEmail","emailRegex","test","trim","updateData","userEmail","credential","length","savedTheme","getItem","window","matchMedia","matches"],"sources":["/workspaces/JAVASCRIPT-S4/src/views/profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\" :class=\"{ 'dark-mode': darkMode }\">\r\n    <!-- Header with logo and toggle button -->\r\n    <div class=\"header-section\">\r\n      <div class=\"logo\">\r\n        <img src=\"/logoDev.jpg\" alt=\"Logo\" />\r\n        <div class=\"logo-text\">Profile Page</div>\r\n      </div>\r\n      <button @click=\"toggleDarkMode\" class=\"theme-toggle-btn\">\r\n        <i :class=\"darkMode ? 'fas fa-sun' : 'fas fa-moon'\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"profile-header\">\r\n      <div class=\"status-indicator\">\r\n        <span class=\"status-label\">Status:</span>\r\n        <span class=\"status-value\" :class=\"{ 'online': isOnline }\">\r\n          {{ isOnline ? 'Online' : 'Offline' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"profile-form\">\r\n      <div class=\"profile-picture-section\">\r\n        <div class=\"profile-picture-container\">\r\n          <img \r\n            :src=\"profileImageUrl || '/default-avatar.png'\" \r\n            alt=\"Profile Picture\" \r\n            class=\"profile-picture\"\r\n            @error=\"handleImageError\"\r\n          />\r\n          <div v-if=\"isUploading\" class=\"upload-overlay\">\r\n            <div class=\"upload-progress\">{{ uploadProgress }}%</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"profile-picture-actions\">\r\n          <div class=\"image-url-form\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"imageUrlInput\" \r\n              placeholder=\"Enter image URL\" \r\n              class=\"image-url-input\"\r\n            >\r\n            <button \r\n              @click=\"setImageFromUrl\" \r\n              class=\"url-button\"\r\n              :disabled=\"isUploading || !imageUrlInput\"\r\n            >\r\n              Set Image\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"or-divider\">- OR -</div>\r\n          \r\n          <label for=\"profilePicture\" class=\"upload-button\">\r\n            <span class=\"upload-icon\">📷</span> Choose Photo\r\n          </label>\r\n          <input \r\n            id=\"profilePicture\" \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            @change=\"handleImageUpload\" \r\n            class=\"file-input\"\r\n          >\r\n          <button \r\n            v-if=\"profileImageUrl\" \r\n            @click=\"removeProfilePicture\" \r\n            class=\"remove-button\"\r\n            :disabled=\"isUploading\"\r\n          >\r\n            Remove Photo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          v-model=\"firstName\"\r\n          :placeholder=\"firstName || 'Enter your first name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input \r\n          id=\"lastName\"\r\n          type=\"text\" \r\n          v-model=\"lastName\" \r\n          :placeholder=\"lastName || 'Enter your last name'\"\r\n          required\r\n        >\r\n      </div>\r\n\r\n      <!-- Social Media Section -->\r\n      <div class=\"social-media-section\">\r\n        <h3>Social Media Accounts</h3>\r\n        <div class=\"social-input-group\">\r\n          <div class=\"social-input\">\r\n            <i class=\"fab fa-github\"></i>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"socialLinks.github\" \r\n              placeholder=\"GitHub username\"\r\n            >\r\n          </div>\r\n          <div class=\"social-input\">\r\n            <i class=\"fab fa-linkedin\"></i>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"socialLinks.linkedin\" \r\n              placeholder=\"LinkedIn URL\"\r\n            >\r\n          </div>\r\n          <div class=\"social-input\">\r\n            <i class=\"fab fa-instagram\"></i>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"socialLinks.instagram\" \r\n              placeholder=\"Instagram username\"\r\n            >\r\n          </div>\r\n          <div class=\"social-input\">\r\n            <i class=\"fab fa-facebook\"></i>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"socialLinks.facebook\" \r\n              placeholder=\"Facebook URL\"\r\n            >\r\n          </div>\r\n          <div class=\"social-input\">\r\n            <i class=\"fab fa-discord\"></i>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"socialLinks.discord\" \r\n              placeholder=\"Discord username#1234\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"currentPassword\">Current Password</label>\r\n        <input \r\n          id=\"currentPassword\"\r\n          type=\"password\" \r\n          v-model=\"oldPass\" \r\n          placeholder=\"Enter current password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\">New Password</label>\r\n        <input \r\n          id=\"newPassword\"\r\n          type=\"password\" \r\n          v-model=\"newPass\" \r\n          placeholder=\"Enter new password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newEmail\">Email</label>\r\n        <p class=\"email-help\">Type new email here if you want to change yours</p>\r\n        <input\r\n          id=\"newEmail\" \r\n          type=\"email\" \r\n          v-model=\"newEmail\" \r\n          :placeholder=\"email\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-actions\">\r\n        <button @click=\"updateProfile\" class=\"save-button\" :disabled=\"isUploading\">Save Changes</button>\r\n      </div>\r\n      \r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    </div>\r\n    \r\n    <div class=\"navigation-links\">\r\n      <router-link to=\"/dash\" class=\"back-link\">\r\n        <span class=\"back-icon\">←</span> Return to Dashboard\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAuth,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  updatePassword,\r\n  updateEmail,\r\n  sendEmailVerification,\r\n  updateProfile as updateAuthProfile\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    \r\n    // User data\r\n    const firstName = ref('');\r\n    const lastName = ref('');\r\n    const oldPass = ref('');\r\n    const newPass = ref('');\r\n    const newEmail = ref('');\r\n    const userId = ref('');\r\n    const successMessage = ref('');\r\n    const errorMessage = ref('');\r\n    const email = ref('');\r\n    const emailVerified = ref(false);\r\n    const isOnline = ref(false);\r\n    const profileImageUrl = ref('');\r\n    const isUploading = ref(false);\r\n    const uploadProgress = ref(0);\r\n    const profileImagePath = ref('');\r\n    const imageUrlInput = ref('');\r\n    const darkMode = ref(false);\r\n    \r\n    // Social media links\r\n    const socialLinks = ref({\r\n      github: '',\r\n      linkedin: '',\r\n      instagram: '',\r\n      facebook: '',\r\n      discord: ''\r\n    });\r\n\r\n    // Toggle dark mode\r\n    const toggleDarkMode = () => {\r\n      darkMode.value = !darkMode.value;\r\n      if (darkMode.value) {\r\n        document.documentElement.classList.add('dark-theme');\r\n      } else {\r\n        document.documentElement.classList.remove('dark-theme');\r\n      }\r\n      localStorage.setItem('darkMode', darkMode.value);\r\n    };\r\n\r\n    // Get current user on component load\r\n    const getCurrentUser = () => {\r\n      const auth = getAuth();\r\n      return auth.currentUser;\r\n    };\r\n    \r\n    // Safely determine user ID from either auth or route params\r\n    const determineUserId = () => {\r\n      const currentUser = getCurrentUser();\r\n      if (currentUser?.uid) {\r\n        return currentUser.uid;\r\n      }\r\n      \r\n      if (route.params.userid) {\r\n        return route.params.userid;\r\n      }\r\n      \r\n      return null;\r\n    };\r\n    \r\n    const fetchUserData = async () => {\r\n      try {\r\n        console.log(\"Fetching user data...\");\r\n        const id = determineUserId();\r\n        \r\n        if (!id) {\r\n          errorMessage.value = \"No user ID found. Please log in.\";\r\n          console.error(\"User ID not found\");\r\n          setTimeout(() => {\r\n            router.push('/dash');\r\n          }, 2000);\r\n          return;\r\n        }\r\n        \r\n        userId.value = id;\r\n        console.log(\"User ID:\", userId.value);\r\n        \r\n        const db = getFirestore();\r\n        const userDoc = await getDoc(doc(db, \"users\", userId.value));\r\n        \r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n          firstName.value = userData.firstName || '';\r\n          lastName.value = userData.lastName || '';\r\n          email.value = userData.email || '';\r\n          isOnline.value = userData.isOnline || false;\r\n          \r\n          if (userData.profileImageUrl) {\r\n            profileImageUrl.value = userData.profileImageUrl;\r\n            profileImagePath.value = userData.profileImagePath || '';\r\n            console.log(\"Loaded profile image:\", profileImageUrl.value);\r\n          }\r\n          \r\n          if (userData.socialLinks) {\r\n            socialLinks.value = {\r\n              ...socialLinks.value,\r\n              ...userData.socialLinks\r\n            };\r\n          }\r\n          \r\n          const currentUser = getCurrentUser();\r\n          if (currentUser) {\r\n            emailVerified.value = currentUser.emailVerified || false;\r\n            \r\n            if (!email.value && currentUser.email) {\r\n              email.value = currentUser.email;\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                email: currentUser.email,\r\n                updatedAt: new Date()\r\n              });\r\n            }\r\n          }\r\n          \r\n          console.log(\"User data loaded successfully\");\r\n        } else {\r\n          const currentUser = getCurrentUser();\r\n          \r\n          if (currentUser) {\r\n            console.log(\"Creating new user document...\");\r\n            await setDoc(doc(db, 'users', userId.value), {\r\n              firstName: '',\r\n              lastName: '',\r\n              email: currentUser.email || '',\r\n              isOnline: true,\r\n              profileImageUrl: '',\r\n              profileImagePath: '',\r\n              socialLinks: {},\r\n              createdAt: new Date()\r\n            });\r\n            \r\n            email.value = currentUser.email || '';\r\n            emailVerified.value = currentUser.emailVerified || false;\r\n            console.log(\"New user document created\");\r\n          } else {\r\n            console.error(\"No user found in Auth or Firestore\");\r\n            errorMessage.value = \"User not found. Please log in again.\";\r\n            setTimeout(() => {\r\n              router.push('/login');\r\n            }, 2000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        errorMessage.value = \"Failed to fetch user data: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    const setImageFromUrl = async () => {\r\n      if (!imageUrlInput.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        isUploading.value = true;\r\n        \r\n        if (!userId.value) {\r\n          const id = determineUserId();\r\n          if (!id) {\r\n            errorMessage.value = \"User ID not found. Please log in again.\";\r\n            isUploading.value = false;\r\n            return;\r\n          }\r\n          userId.value = id;\r\n        }\r\n        \r\n        try {\r\n          new URL(imageUrlInput.value);\r\n        } catch (e) {\r\n          errorMessage.value = \"Please enter a valid URL\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          const imgPromise = new Promise((resolve, reject) => {\r\n            const img = new Image();\r\n            img.onload = () => resolve(true);\r\n            img.onerror = () => reject(new Error(\"Could not load image from URL\"));\r\n            img.src = imageUrlInput.value;\r\n          });\r\n          \r\n          await imgPromise;\r\n        } catch (loadError) {\r\n          errorMessage.value = \"Could not load image from this URL. Please check that it's a valid, accessible image URL.\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        const currentUser = getCurrentUser();\r\n        if (currentUser) {\r\n          try {\r\n            await updateAuthProfile(currentUser, {\r\n              photoURL: imageUrlInput.value\r\n            });\r\n            console.log(\"Auth profile updated with URL\");\r\n          } catch (authError) {\r\n            console.error(\"Failed to update auth profile:\", authError);\r\n          }\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: imageUrlInput.value,\r\n          profileImagePath: 'external_url',\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        profileImageUrl.value = imageUrlInput.value;\r\n        profileImagePath.value = 'external_url';\r\n        successMessage.value = \"Profile picture updated successfully!\";\r\n        \r\n        imageUrlInput.value = '';\r\n        \r\n      } catch (error) {\r\n        console.error(\"Set image URL error:\", error);\r\n        errorMessage.value = \"Failed to set profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const handleImageError = () => {\r\n      if (profileImageUrl.value) {\r\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\r\n        profileImageUrl.value = '/default-avatar.png';\r\n      }\r\n    };\r\n    \r\n    const handleImageUpload = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n      if (!validTypes.includes(file.type)) {\r\n        errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\r\n        return;\r\n      }\r\n      \r\n      const maxSize = 500 * 1024;\r\n      if (file.size > maxSize) {\r\n        errorMessage.value = \"Image size must be less than 500KB\";\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        isUploading.value = true;\r\n        uploadProgress.value = 0;\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!userId.value) {\r\n          const id = determineUserId();\r\n          if (!id) {\r\n            errorMessage.value = \"User ID not found. Please log in again.\";\r\n            isUploading.value = false;\r\n            return;\r\n          }\r\n          userId.value = id;\r\n        }\r\n        \r\n        const reader = new FileReader();\r\n        \r\n        reader.onloadstart = () => {\r\n          uploadProgress.value = 10;\r\n        };\r\n        \r\n        reader.onprogress = (event) => {\r\n          if (event.lengthComputable) {\r\n            const progress = Math.round((event.loaded / event.total) * 90);\r\n            uploadProgress.value = progress;\r\n          }\r\n        };\r\n        \r\n        reader.onerror = () => {\r\n          errorMessage.value = \"Failed to read image file\";\r\n          isUploading.value = false;\r\n        };\r\n        \r\n        reader.onload = async (e) => {\r\n          try {\r\n            uploadProgress.value = 95;\r\n            const base64Image = e.target.result;\r\n            \r\n            const currentUser = getCurrentUser();\r\n            if (currentUser) {\r\n              try {\r\n                await updateAuthProfile(currentUser, {\r\n                  photoURL: base64Image\r\n                });\r\n                console.log(\"Auth profile updated with base64 image\");\r\n              } catch (authError) {\r\n                console.error(\"Failed to update auth profile:\", authError);\r\n              }\r\n            }\r\n            \r\n            const db = getFirestore();\r\n            await updateDoc(doc(db, 'users', userId.value), {\r\n              profileImageUrl: base64Image,\r\n              profileImagePath: 'base64_image',\r\n              updatedAt: new Date()\r\n            });\r\n            \r\n            profileImageUrl.value = base64Image;\r\n            profileImagePath.value = 'base64_image';\r\n            successMessage.value = \"Profile picture updated successfully!\";\r\n            uploadProgress.value = 100;\r\n          } catch (finalError) {\r\n            console.error(\"Error saving base64 image:\", finalError);\r\n            errorMessage.value = \"Failed to save image: \" + finalError.message;\r\n          } finally {\r\n            isUploading.value = false;\r\n          }\r\n        };\r\n        \r\n        reader.readAsDataURL(file);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Upload handler error:\", error);\r\n        errorMessage.value = \"Failed to process image: \" + error.message;\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const removeProfilePicture = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!profileImageUrl.value) {\r\n          errorMessage.value = \"No profile picture to remove\";\r\n          return;\r\n        }\r\n        \r\n        isUploading.value = true;\r\n        console.log(\"Removing profile picture\");\r\n        \r\n        if (!userId.value) {\r\n          const id = determineUserId();\r\n          if (!id) {\r\n            errorMessage.value = \"User ID not found. Please log in again.\";\r\n            isUploading.value = false;\r\n            return;\r\n          }\r\n          userId.value = id;\r\n        }\r\n        \r\n        const currentUser = getCurrentUser();\r\n        if (currentUser) {\r\n          try {\r\n            await updateAuthProfile(currentUser, {\r\n              photoURL: null\r\n            });\r\n            console.log(\"Auth profile photo URL cleared\");\r\n          } catch (authError) {\r\n            console.error(\"Error updating auth profile:\", authError);\r\n          }\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: '',\r\n          profileImagePath: '',\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        profileImageUrl.value = '';\r\n        profileImagePath.value = '';\r\n        successMessage.value = \"Profile picture removed successfully!\";\r\n      } catch (error) {\r\n        console.error(\"Remove profile picture error:\", error);\r\n        errorMessage.value = \"Failed to remove profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n    \r\n    const updateProfile = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!userId.value) {\r\n          const id = determineUserId();\r\n          if (!id) {\r\n            errorMessage.value = \"User ID not found. Please log in again.\";\r\n            return;\r\n          }\r\n          userId.value = id;\r\n        }\r\n        \r\n        const currentUser = getCurrentUser();\r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          return;\r\n        }\r\n        \r\n        if (!firstName.value.trim() || !lastName.value.trim()) {\r\n          errorMessage.value = \"First and last name are required\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        \r\n        const updateData = {\r\n          firstName: firstName.value.trim(),\r\n          lastName: lastName.value.trim(),\r\n          socialLinks: socialLinks.value,\r\n          updatedAt: new Date()\r\n        };\r\n        \r\n        console.log(\"Updating profile with data:\", updateData);\r\n        await updateDoc(doc(db, 'users', userId.value), updateData);\r\n        console.log(\"Basic profile data updated successfully\");\r\n        \r\n        if (oldPass.value) {\r\n          try {\r\n            console.log(\"Re-authenticating user for sensitive operations\");\r\n            const userEmail = currentUser.email || email.value;\r\n            if (!userEmail) {\r\n              errorMessage.value = \"No email found for authentication. Please contact support.\";\r\n              return;\r\n            }\r\n            \r\n            const credential = EmailAuthProvider.credential(userEmail, oldPass.value);\r\n            await reauthenticateWithCredential(currentUser, credential);\r\n            console.log(\"Re-authentication successful\");\r\n            \r\n            if (newPass.value) {\r\n              if (newPass.value.length < 6) {\r\n                errorMessage.value = \"Password must be at least 6 characters\";\r\n                return;\r\n              }\r\n              console.log(\"Updating password\");\r\n              await updatePassword(currentUser, newPass.value);\r\n              oldPass.value = '';\r\n              newPass.value = '';\r\n              successMessage.value = \"Password updated successfully!\";\r\n              console.log(\"Password updated successfully\");\r\n            }\r\n            \r\n            if (newEmail.value && newEmail.value !== userEmail) {\r\n              if (!isValidEmail(newEmail.value)) {\r\n                errorMessage.value = \"Please enter a valid email address\";\r\n                return;\r\n              }\r\n              \r\n              console.log(\"Updating email address to:\", newEmail.value);\r\n              await updateEmail(currentUser, newEmail.value);\r\n              console.log(\"Auth email updated\");\r\n              \r\n              await sendEmailVerification(currentUser);\r\n              console.log(\"Verification email sent\");\r\n              \r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                email: newEmail.value,\r\n                updatedAt: new Date()\r\n              });\r\n              console.log(\"Firestore email updated\");\r\n              \r\n              email.value = newEmail.value;\r\n              \r\n              successMessage.value = successMessage.value \r\n                ? successMessage.value + \" Email updated successfully! Verification email sent.\"\r\n                : \"Email updated successfully! Verification email sent.\";\r\n              \r\n              newEmail.value = '';\r\n            }\r\n          } catch (authError) {\r\n            console.error(\"Authentication error:\", authError);\r\n            errorMessage.value = \"Authentication failed: \" + authError.message;\r\n            return;\r\n          }\r\n        } else if (newPass.value || newEmail.value) {\r\n          errorMessage.value = \"Current password is required to change password or email\";\r\n          return;\r\n        }\r\n        \r\n        if (!successMessage.value) {\r\n          successMessage.value = \"Profile updated successfully!\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Update profile error:\", error);\r\n        errorMessage.value = \"Failed to update profile: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    onMounted(async () => {\r\n      const savedTheme = localStorage.getItem('darkMode');\r\n      if (savedTheme !== null) {\r\n        darkMode.value = savedTheme === 'true';\r\n        if (darkMode.value) {\r\n          document.documentElement.classList.add('dark-theme');\r\n        }\r\n      } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        darkMode.value = true;\r\n        document.documentElement.classList.add('dark-theme');\r\n      }\r\n      \r\n      console.log(\"ProfilePage component mounted\");\r\n      await fetchUserData();\r\n    });\r\n    \r\n    return {\r\n      firstName,\r\n      lastName,\r\n      oldPass,\r\n      newPass,\r\n      newEmail,\r\n      userId,\r\n      successMessage,\r\n      errorMessage,\r\n      email,\r\n      emailVerified,\r\n      isOnline,\r\n      profileImageUrl,\r\n      isUploading,\r\n      uploadProgress,\r\n      imageUrlInput,\r\n      socialLinks,\r\n      darkMode,\r\n      toggleDarkMode,\r\n      setImageFromUrl,\r\n      handleImageError,\r\n      handleImageUpload,\r\n      removeProfilePicture,\r\n      updateProfile\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* CSS Variables for Light Mode */\r\n.profile-container {\r\n  --primary-blue: #3498db;\r\n  --primary-dark-blue: #2980b9;\r\n  --primary-light-blue: #e1f0fa;\r\n  --secondary-blue: #2c3e50;\r\n  --accent-blue: #1abc9c;\r\n  --text-color: #2c3e50;\r\n  --text-light: #7f8c8d;\r\n  --bg-color: #f9f9f9;\r\n  --card-bg: #ffffff;\r\n  --border-color: #eaeaea;\r\n  --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n  \r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  color: var(--text-color);\r\n  background-color: var(--bg-color);\r\n  border-radius: 10px;\r\n  box-shadow: var(--shadow-lg);\r\n  transition: background-color 0.3s, color 0.3s;\r\n}\r\n\r\n/* Dark Mode Variables */\r\n.profile-container.dark-mode {\r\n  --primary-blue: #3498db;\r\n  --primary-dark-blue: #2980b9;\r\n  --primary-light-blue: rgba(52, 152, 219, 0.1);\r\n  --secondary-blue: #ecf0f1;\r\n  --accent-blue: #1abc9c;\r\n  --text-color: #ecf0f1;\r\n  --text-light: #bdc3c7;\r\n  --bg-color: #0f172a;\r\n  --card-bg: #1e293b;\r\n  --border-color: #334155;\r\n  --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* Header Section */\r\n.header-section {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* Theme Toggle Button */\r\n.theme-toggle-btn {\r\n  background: var(--primary-light-blue);\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  color: var(--primary-blue);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.theme-toggle-btn:hover {\r\n  background: var(--primary-blue);\r\n  color: white;\r\n  transform: rotate(15deg);\r\n}\r\n\r\n/* Logo Styles */\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.logo img {\r\n  height: 100px;\r\n  width: 100px;\r\n  \r\n}\r\n\r\n.logo-text {\r\n  font-size: 1.8em;\r\n  color: var(--primary-blue);\r\n  font-weight: bold;\r\n}\r\n\r\n.profile-header {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.profile-header h2 {\r\n  color: var(--secondary-blue);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.status-indicator {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: var(--card-bg);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 20px;\r\n  box-shadow: var(--shadow-sm);\r\n}\r\n\r\n.status-label {\r\n  font-weight: 500;\r\n  margin-right: 0.5rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.status-value {\r\n  font-weight: 600;\r\n}\r\n\r\n.status-value.online {\r\n  color: #4CAF50;\r\n}\r\n\r\n.profile-form {\r\n  background-color: var(--card-bg);\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: var(--shadow-md);\r\n}\r\n\r\n/* Profile Picture Section */\r\n.profile-picture-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.profile-picture-container {\r\n  position: relative;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 1rem;\r\n  border: 3px solid var(--border-color);\r\n  box-shadow: var(--shadow-md);\r\n}\r\n\r\n.profile-picture {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.upload-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.profile-picture-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.image-url-form {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.image-url-input {\r\n  flex: 1;\r\n  padding: 0.6rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px 0 0 4px;\r\n  font-size: 0.9rem;\r\n  background-color: var(--card-bg);\r\n  color: var(--text-color);\r\n}\r\n\r\n.url-button {\r\n  padding: 0.6rem 1rem;\r\n  background-color: var(--primary-blue);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0 4px 4px 0;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.url-button:hover:not(:disabled) {\r\n  background-color: var(--primary-dark-blue);\r\n}\r\n\r\n.url-button:disabled {\r\n  background-color: var(--border-color);\r\n  cursor: not-allowed;\r\n}\r\n\r\n.or-divider {\r\n  margin: 0.5rem 0;\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.upload-button {\r\n  display: inline-block;\r\n  padding: 0.6rem 1rem;\r\n  background-color: #2ecc71;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 0.5rem;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #27ae60;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.remove-button {\r\n  padding: 0.6rem 1rem;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.remove-button:hover:not(:disabled) {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.remove-button:disabled {\r\n  background-color: var(--border-color);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Form Groups */\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: var(--secondary-blue);\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.2s;\r\n  background-color: var(--card-bg);\r\n  color: var(--text-color);\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: var(--primary-blue);\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\r\n}\r\n\r\n.email-help {\r\n  margin: 0.3rem 0;\r\n  font-size: 0.85rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n/* Social Media Section */\r\n.social-media-section {\r\n  margin: 2rem 0;\r\n  padding: 1.5rem;\r\n  background-color: var(--primary-light-blue);\r\n  border-radius: 8px;\r\n}\r\n\r\n.social-media-section h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 1.5rem;\r\n  color: var(--secondary-blue);\r\n}\r\n\r\n.social-input-group {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.social-input {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: var(--card-bg);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.social-input i {\r\n  width: 30px;\r\n  text-align: center;\r\n  color: var(--text-light);\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.social-input input {\r\n  flex: 1;\r\n  border: none;\r\n  padding: 0.5rem;\r\n  font-size: 0.9rem;\r\n  background-color: transparent;\r\n  color: var(--text-color);\r\n}\r\n\r\n.social-input input:focus {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n/* Form Actions */\r\n.form-actions {\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.save-button {\r\n  padding: 0.8rem 2rem;\r\n  background-color: var(--primary-blue);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.save-button:hover:not(:disabled) {\r\n  background-color: var(--primary-dark-blue);\r\n}\r\n\r\n.save-button:disabled {\r\n  background-color: var(--border-color);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Messages */\r\n.success-message {\r\n  margin-top: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #3c763d;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #a94442;\r\n}\r\n\r\n/* Navigation Links */\r\n.navigation-links {\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.back-link {\r\n  display: inline-block;\r\n  padding: 0.6rem 1rem;\r\n  color: var(--primary-blue);\r\n  text-decoration: none;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.back-link:hover {\r\n  color: var(--primary-dark-blue);\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n/* Font Awesome Icons */\r\n@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css');\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .profile-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .profile-form {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .social-input-group {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .logo-text {\r\n    font-size: 1.5em;\r\n  }\r\n  \r\n  .logo img {\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}