{"ast":null,"code":"import { collection, doc, getDocs, addDoc, updateDoc, deleteDoc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { db, auth } from '@/services/firebase';\nexport default {\n  name: 'EnhancedSkillsManager',\n  data() {\n    return {\n      skills: [],\n      newSkill: {\n        name: '',\n        category: '',\n        learningHours: 0,\n        certificates: 0,\n        projects: 0,\n        level: 'Beginner',\n        date: new Date().toISOString().split('T')[0]\n      },\n      isEditing: false,\n      currentSkillId: null,\n      searchTerm: '',\n      filterLevel: 'all',\n      filterCategory: 'all',\n      sortBy: 'name-asc',\n      sortField: 'name',\n      sortDirection: 'asc',\n      showDeleteModal: false,\n      skillToDelete: null,\n      currentUser: null,\n      loading: false,\n      error: null,\n      showCategoryModal: false,\n      newCategory: '',\n      categoryError: '',\n      defaultCategories: ['Frontend', 'Backend', 'Database', 'DevOps', 'Design', 'Mobile', 'Cloud', 'Data Science', 'AI/ML', 'Cybersecurity', 'Networking', 'Testing'],\n      userCategories: [],\n      skillSuggestions: [],\n      showSuggestions: false,\n      popularSkills: ['JavaScript', 'Python', 'Java', 'C#', 'PHP', 'TypeScript', 'React', 'Vue', 'Angular', 'Node.js', 'Express', 'Django', 'Flask', 'Spring', 'Laravel', 'Ruby on Rails', 'HTML', 'CSS', 'SASS', 'Bootstrap', 'Tailwind CSS', 'MySQL', 'PostgreSQL', 'MongoDB', 'Redis', 'Firebase', 'Docker', 'Kubernetes', 'AWS', 'Azure', 'GCP', 'Git', 'GitHub', 'GitLab', 'CI/CD', 'Jenkins', 'REST API', 'GraphQL', 'WebSockets', 'OAuth', 'Jest', 'Mocha', 'Chai', 'Cypress', 'Selenium'],\n      currentView: 'table',\n      expandedSkills: [],\n      darkMode: false\n    };\n  },\n  computed: {\n    allCategories() {\n      return [...this.defaultCategories, ...this.userCategories];\n    },\n    calculatedLevel() {\n      return this.calculateSkillLevel(this.newSkill);\n    },\n    progressPercentage() {\n      const hours = Number(this.newSkill.learningHours) || 0;\n      const certs = Number(this.newSkill.certificates) || 0;\n      const projs = Number(this.newSkill.projects) || 0;\n      let score = 0;\n      if (hours < 10) score += 1;else if (hours < 50) score += 2;else if (hours < 100) score += 3;else score += 4;\n      score += Math.min(certs * 2, 4);\n      score += Math.min(projs, 4);\n      return Math.min(score / 12 * 100, 100);\n    },\n    totalSkills() {\n      return this.skills.length;\n    },\n    advancedSkills() {\n      return this.skills.filter(skill => skill.level === 'Advanced').length;\n    },\n    totalLearningHours() {\n      return this.skills.reduce((total, skill) => total + (skill.learningHours || 0), 0);\n    },\n    levelDistribution() {\n      const distribution = {\n        Beginner: 0,\n        Intermediate: 0,\n        Advanced: 0\n      };\n      this.skills.forEach(skill => {\n        distribution[skill.level]++;\n      });\n      return distribution;\n    },\n    maxLevelCount() {\n      return Math.max(...Object.values(this.levelDistribution));\n    },\n    filteredSkills() {\n      let filtered = [...this.skills];\n      if (this.searchTerm) {\n        const term = this.searchTerm.toLowerCase();\n        filtered = filtered.filter(skill => (skill.name || '').toLowerCase().includes(term) || (skill.category || '').toLowerCase().includes(term));\n      }\n      if (this.filterLevel !== 'all') {\n        filtered = filtered.filter(skill => skill.level === this.filterLevel);\n      }\n      if (this.filterCategory !== 'all') {\n        filtered = filtered.filter(skill => skill.category === this.filterCategory);\n      }\n      return this.sortSkills(filtered);\n    }\n  },\n  watch: {\n    sortBy(newVal) {\n      const [field, direction] = newVal.split('-');\n      this.sortField = field;\n      this.sortDirection = direction;\n    },\n    'newSkill.category'(newVal) {\n      if (newVal === 'custom') {\n        this.showCategoryModal = true;\n        this.newSkill.category = '';\n      }\n    }\n  },\n  methods: {\n    toggleTheme() {\n      this.darkMode = !this.darkMode;\n      localStorage.setItem('darkMode', this.darkMode);\n      if (this.darkMode) {\n        document.documentElement.classList.add('dark-mode');\n      } else {\n        document.documentElement.classList.remove('dark-mode');\n      }\n    },\n    getLevelClass(level) {\n      switch (level) {\n        case 'Beginner':\n          return 'level-beginner';\n        case 'Intermediate':\n          return 'level-intermediate';\n        case 'Advanced':\n          return 'level-advanced';\n        default:\n          return '';\n      }\n    },\n    calculateSkillLevel(skill) {\n      const hours = Number(skill.learningHours) || 0;\n      const certs = Number(skill.certificates) || 0;\n      const projs = Number(skill.projects) || 0;\n      let score = 0;\n      if (hours < 10) score += 1;else if (hours < 50) score += 2;else if (hours < 100) score += 3;else score += 4;\n      score += Math.min(certs * 2, 4);\n      score += Math.min(projs, 4);\n      if (score <= 3) return 'Beginner';else if (score <= 8) return 'Intermediate';else return 'Advanced';\n    },\n    async loadSkills() {\n      this.loading = true;\n      this.error = null;\n      try {\n        if (!this.currentUser) {\n          throw new Error('User not authenticated');\n        }\n        const skillsCol = collection(db, 'users', this.currentUser.uid, 'skills');\n        const snapshot = await getDocs(skillsCol);\n        this.skills = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      } catch (error) {\n        console.error(\"Error loading skills: \", error);\n        this.error = `Loading error: ${error.message}`;\n        this.skills = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadUserCategories() {\n      if (!this.currentUser) return;\n      try {\n        const userDocRef = doc(db, 'users', this.currentUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        if (userDoc.exists()) {\n          this.userCategories = userDoc.data().categories || [];\n        }\n      } catch (error) {\n        console.error(\"Error loading categories: \", error);\n      }\n    },\n    async handleAddSkill() {\n      this.error = null;\n      try {\n        if (!this.currentUser) {\n          throw new Error('User not authenticated');\n        }\n        const name = this.newSkill.name.trim();\n        if (!name) {\n          throw new Error('Please enter skill name');\n        }\n        if (!this.newSkill.category) {\n          throw new Error('Please select a category');\n        }\n        const skillData = {\n          ...this.newSkill,\n          name: name,\n          level: this.calculateSkillLevel(this.newSkill),\n          updatedAt: serverTimestamp()\n        };\n        const userDocRef = doc(db, 'users', this.currentUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        if (!userDoc.exists()) {\n          await setDoc(userDocRef, {\n            email: this.currentUser.email,\n            createdAt: serverTimestamp(),\n            categories: [...this.defaultCategories]\n          });\n        }\n        if (this.isEditing) {\n          if (!this.currentSkillId) {\n            throw new Error('Missing skill ID for update');\n          }\n          const skillDocRef = doc(db, 'users', this.currentUser.uid, 'skills', this.currentSkillId);\n          await updateDoc(skillDocRef, skillData);\n          const index = this.skills.findIndex(s => s.id === this.currentSkillId);\n          if (index !== -1) {\n            this.skills[index] = {\n              id: this.currentSkillId,\n              ...skillData\n            };\n          }\n          this.cancelEdit();\n        } else {\n          const exists = this.skills.some(skill => skill.name.toLowerCase() === name.toLowerCase());\n          if (exists) {\n            throw new Error('This skill already exists');\n          }\n          const skillsColRef = collection(db, 'users', this.currentUser.uid, 'skills');\n          const docRef = await addDoc(skillsColRef, {\n            ...skillData,\n            createdAt: serverTimestamp()\n          });\n          this.skills.push({\n            id: docRef.id,\n            ...skillData\n          });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error saving skill: \", error);\n        this.error = error.message || \"An error occurred while saving\";\n        alert(this.error);\n      }\n    },\n    editSkill(skillId) {\n      const skill = this.skills.find(s => s.id === skillId);\n      if (skill) {\n        this.newSkill = {\n          name: skill.name,\n          category: skill.category || '',\n          learningHours: skill.learningHours,\n          certificates: skill.certificates,\n          projects: skill.projects,\n          date: skill.date || new Date().toISOString().split('T')[0]\n        };\n        this.isEditing = true;\n        this.currentSkillId = skillId;\n        this.$nextTick(() => {\n          document.querySelector('.skills-form').scrollIntoView({\n            behavior: 'smooth'\n          });\n        });\n      }\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.currentSkillId = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.newSkill = {\n        name: '',\n        category: '',\n        learningHours: 0,\n        certificates: 0,\n        projects: 0,\n        level: 'Beginner',\n        date: new Date().toISOString().split('T')[0]\n      };\n      this.error = null;\n      this.showSuggestions = false;\n    },\n    confirmDelete(skillId) {\n      this.skillToDelete = skillId;\n      this.showDeleteModal = true;\n    },\n    async deleteSkill() {\n      if (!this.skillToDelete) return;\n      this.error = null;\n      try {\n        if (!this.currentUser) {\n          throw new Error('User not authenticated');\n        }\n        await deleteDoc(doc(db, 'users', this.currentUser.uid, 'skills', this.skillToDelete));\n        this.skills = this.skills.filter(skill => skill.id !== this.skillToDelete);\n        if (this.isEditing && this.currentSkillId === this.skillToDelete) {\n          this.cancelEdit();\n        }\n      } catch (error) {\n        console.error(\"Error deleting skill: \", error);\n        this.error = error.message || \"An error occurred while deleting\";\n        alert(this.error);\n      } finally {\n        this.showDeleteModal = false;\n        this.skillToDelete = null;\n      }\n    },\n    formatDate(dateString, short = false) {\n      if (!dateString) return '';\n      try {\n        const date = new Date(dateString);\n        if (short) {\n          return date.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric'\n          });\n        }\n        return date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        });\n      } catch (e) {\n        return dateString;\n      }\n    },\n    sortSkills(skills) {\n      return [...skills].sort((a, b) => {\n        let compareA, compareB;\n        switch (this.sortField) {\n          case 'name':\n            compareA = (a.name || '').toLowerCase();\n            compareB = (b.name || '').toLowerCase();\n            break;\n          case 'category':\n            compareA = (a.category || '').toLowerCase();\n            compareB = (b.category || '').toLowerCase();\n            break;\n          case 'level':\n            const levelOrder = {\n              'Beginner': 1,\n              'Intermediate': 2,\n              'Advanced': 3\n            };\n            compareA = levelOrder[a.level];\n            compareB = levelOrder[b.level];\n            break;\n          case 'learningHours':\n            compareA = a.learningHours || 0;\n            compareB = b.learningHours || 0;\n            break;\n          case 'certificates':\n            compareA = a.certificates || 0;\n            compareB = b.certificates || 0;\n            break;\n          case 'projects':\n            compareA = a.projects || 0;\n            compareB = b.projects || 0;\n            break;\n          case 'date':\n            compareA = new Date(a.date || 0);\n            compareB = new Date(b.date || 0);\n            break;\n          default:\n            compareA = a.name.toLowerCase();\n            compareB = b.name.toLowerCase();\n        }\n        if (compareA < compareB) {\n          return this.sortDirection === 'asc' ? -1 : 1;\n        }\n        if (compareA > compareB) {\n          return this.sortDirection === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    },\n    sortByField(field) {\n      if (this.sortField === field) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortField = field;\n        this.sortDirection = 'asc';\n      }\n      this.sortBy = `${field}-${this.sortDirection}`;\n    },\n    searchSkillSuggestions() {\n      if (!this.newSkill.name) {\n        this.skillSuggestions = [];\n        return;\n      }\n      const term = this.newSkill.name.toLowerCase();\n      this.skillSuggestions = this.popularSkills.filter(skill => skill.toLowerCase().includes(term)).slice(0, 5);\n    },\n    selectSuggestion(suggestion) {\n      this.newSkill.name = suggestion;\n      this.showSuggestions = false;\n    },\n    async addNewCategory() {\n      this.categoryError = '';\n      const category = this.newCategory.trim();\n      if (!category) {\n        this.categoryError = 'Please enter a category name';\n        return;\n      }\n      if (this.allCategories.includes(category)) {\n        this.categoryError = 'This category already exists';\n        return;\n      }\n      try {\n        this.userCategories.push(category);\n        this.newCategory = '';\n        this.showCategoryModal = false;\n        if (this.currentUser) {\n          const userDocRef = doc(db, 'users', this.currentUser.uid);\n          await updateDoc(userDocRef, {\n            categories: [...this.userCategories]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error saving categories: \", error);\n        this.categoryError = \"Failed to save category\";\n      }\n    },\n    toggleSkillDetails(skillId) {\n      const index = this.expandedSkills.indexOf(skillId);\n      if (index === -1) {\n        this.expandedSkills.push(skillId);\n      } else {\n        this.expandedSkills.splice(index, 1);\n      }\n    }\n  },\n  created() {\n    // Initialize dark mode from localStorage\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    this.darkMode = savedDarkMode;\n    if (this.darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    }\n    this.unsubscribeAuth = onAuthStateChanged(auth, user => {\n      this.currentUser = user;\n      if (user) {\n        this.loadSkills();\n        this.loadUserCategories();\n      } else {\n        this.skills = [];\n        this.userCategories = [];\n      }\n    });\n  },\n  beforeUnmount() {\n    if (this.unsubscribeAuth) {\n      this.unsubscribeAuth();\n    }\n  }\n};","map":{"version":3,"names":["collection","doc","getDocs","addDoc","updateDoc","deleteDoc","getDoc","setDoc","serverTimestamp","getAuth","onAuthStateChanged","db","auth","name","data","skills","newSkill","category","learningHours","certificates","projects","level","date","Date","toISOString","split","isEditing","currentSkillId","searchTerm","filterLevel","filterCategory","sortBy","sortField","sortDirection","showDeleteModal","skillToDelete","currentUser","loading","error","showCategoryModal","newCategory","categoryError","defaultCategories","userCategories","skillSuggestions","showSuggestions","popularSkills","currentView","expandedSkills","darkMode","computed","allCategories","calculatedLevel","calculateSkillLevel","progressPercentage","hours","Number","certs","projs","score","Math","min","totalSkills","length","advancedSkills","filter","skill","totalLearningHours","reduce","total","levelDistribution","distribution","Beginner","Intermediate","Advanced","forEach","maxLevelCount","max","Object","values","filteredSkills","filtered","term","toLowerCase","includes","sortSkills","watch","newVal","field","direction","newSkill.category","methods","toggleTheme","localStorage","setItem","document","documentElement","classList","add","remove","getLevelClass","loadSkills","Error","skillsCol","uid","snapshot","docs","map","id","console","message","loadUserCategories","userDocRef","userDoc","exists","categories","handleAddSkill","trim","skillData","updatedAt","email","createdAt","skillDocRef","index","findIndex","s","cancelEdit","some","skillsColRef","docRef","push","resetForm","alert","editSkill","skillId","find","$nextTick","querySelector","scrollIntoView","behavior","confirmDelete","deleteSkill","formatDate","dateString","short","toLocaleDateString","month","day","year","e","sort","a","b","compareA","compareB","levelOrder","sortByField","searchSkillSuggestions","slice","selectSuggestion","suggestion","addNewCategory","toggleSkillDetails","indexOf","splice","created","savedDarkMode","getItem","unsubscribeAuth","user","beforeUnmount"],"sources":["/workspaces/JAVASCRIPT-S4/src/views/skills2.vue"],"sourcesContent":["<template>\r\n  <div class=\"skills-manager\" :class=\"{ 'dark-mode': darkMode }\">\r\n    <div class=\"header-section\">\r\n      <div class=\"header-content\">\r\n        <div class=\"logo\">\r\n          <img src=\"/logoDev.jpg\" alt=\"Logo\" />\r\n          <div class=\"logo-text\">\r\n            <h1>Skills Dashboard</h1>\r\n            <router-link to=\"/dash\" class=\"return-to-dash\">\r\n              ← Return to Main Dashboard\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"header-controls\">\r\n          <button class=\"theme-toggle\" @click=\"toggleTheme\">\r\n            <i :class=\"darkMode ? 'fas fa-sun' : 'fas fa-moon'\"></i>\r\n            <span>{{ darkMode ? 'Light Mode' : 'Dark Mode' }}</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"header-stats\">\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-value\">{{ totalSkills }}</div>\r\n            <div class=\"stat-label\">Total Skills</div>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-value\">{{ advancedSkills }}</div>\r\n            <div class=\"stat-label\">Advanced</div>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-value\">{{ totalLearningHours }}</div>\r\n            <div class=\"stat-label\">Learning Hours</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"skills-container\">\r\n      <div class=\"skills-form-container\">\r\n        <div class=\"skills-form\">\r\n          <h2>{{ isEditing ? 'Edit Skill' : 'Add New Skill' }}</h2>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"skillName\">Skill Name</label>\r\n              <div class=\"autocomplete-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"skillName\"\r\n                  v-model=\"newSkill.name\"\r\n                  placeholder=\"e.g. React, Python, Docker...\"\r\n                  @keyup.enter=\"handleAddSkill\"\r\n                  @input=\"searchSkillSuggestions\"\r\n                  @focus=\"showSuggestions = true\"\r\n                  @blur=\"() => { this.$nextTick(() => { showSuggestions = false }) }\"\r\n                />\r\n                <div v-if=\"showSuggestions && skillSuggestions.length\" class=\"suggestions-dropdown\">\r\n                  <div \r\n                    v-for=\"suggestion in skillSuggestions\" \r\n                    :key=\"suggestion\"\r\n                    class=\"suggestion-item\"\r\n                    @mousedown=\"selectSuggestion(suggestion)\"\r\n                  >\r\n                    {{ suggestion }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"category\">Category</label>\r\n              <div class=\"category-selector\">\r\n                <select \r\n                  id=\"category\" \r\n                  v-model=\"newSkill.category\"\r\n                >\r\n                  <option value=\"\" disabled>Select a category</option>\r\n                  <option v-for=\"category in allCategories\" :value=\"category\" :key=\"category\">\r\n                    {{ category }}\r\n                  </option>\r\n                  <option value=\"custom\">Add New Category...</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"learningHours\">Learning Hours</label>\r\n              <div class=\"input-with-icon\">\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"learningHours\"\r\n                  v-model.number=\"newSkill.learningHours\"\r\n                  min=\"0\"\r\n                  placeholder=\"Hours spent learning\"\r\n                />\r\n                <span class=\"input-icon\">⏱️</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"certificates\">Certificates</label>\r\n              <div class=\"input-with-icon\">\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"certificates\"\r\n                  v-model.number=\"newSkill.certificates\"\r\n                  min=\"0\"\r\n                  placeholder=\"Number of certificates\"\r\n                />\r\n                <span class=\"input-icon\">📜</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"projects\">Projects</label>\r\n              <div class=\"input-with-icon\">\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"projects\"\r\n                  v-model.number=\"newSkill.projects\"\r\n                  min=\"0\"\r\n                  placeholder=\"Projects completed\"\r\n                />\r\n                <span class=\"input-icon\">💼</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"acquisitionDate\">Last Practiced</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"acquisitionDate\"\r\n                v-model=\"newSkill.date\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"skill-preview\">\r\n            <div class=\"preview-header\">\r\n              <span>Skill Level:</span>\r\n              <span :class=\"['skill-level', getLevelClass(calculatedLevel)]\">\r\n                {{ calculatedLevel }}\r\n              </span>\r\n            </div>\r\n            <div class=\"progress-container\">\r\n              <div class=\"progress-bar\" :style=\"{ width: progressPercentage + '%' }\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-actions\">\r\n            <button v-if=\"isEditing\" @click=\"cancelEdit\" class=\"btn cancel-btn\">\r\n              Cancel\r\n            </button>\r\n            <button @click=\"handleAddSkill\" class=\"btn primary-btn\">\r\n              {{ isEditing ? 'Update Skill' : 'Add Skill' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"skills-visualization\">\r\n          <h3>Skills Distribution</h3>\r\n          <div class=\"chart-container\">\r\n            <div class=\"chart-legend\">\r\n              <div v-for=\"(count, level) in levelDistribution\" :key=\"level\" class=\"legend-item\">\r\n                <span class=\"legend-color\" :class=\"getLevelClass(level)\"></span>\r\n                <span>{{ level }} ({{ count }})</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart\">\r\n              <div \r\n                v-for=\"(count, level) in levelDistribution\" \r\n                :key=\"level\"\r\n                class=\"chart-segment\"\r\n                :class=\"getLevelClass(level)\"\r\n                :style=\"{ height: (count / maxLevelCount) * 100 + '%' }\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"view-toggle\">\r\n        <button \r\n          @click=\"currentView = 'table'\"\r\n          :class=\"{ 'active': currentView === 'table' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-table\"></i> Table\r\n        </button>\r\n        <button \r\n          @click=\"currentView = 'cards'\"\r\n          :class=\"{ 'active': currentView === 'cards' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-th-large\"></i> Cards\r\n        </button>\r\n        <button \r\n          @click=\"currentView = 'list'\"\r\n          :class=\"{ 'active': currentView === 'list' }\"\r\n          class=\"view-btn\"\r\n        >\r\n          <i class=\"fas fa-list\"></i> List\r\n        </button>\r\n      </div>\r\n      \r\n      <div v-if=\"currentView === 'table'\" class=\"skills-list-container\">\r\n        <div class=\"list-controls\">\r\n          <div class=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"searchTerm\"\r\n              placeholder=\"Search skills...\"\r\n            />\r\n            <span class=\"search-icon\">🔍</span>\r\n          </div>\r\n          \r\n          <div class=\"filter-group\">\r\n            <label>Filter:</label>\r\n            <select v-model=\"filterLevel\">\r\n              <option value=\"all\">All Levels</option>\r\n              <option value=\"Beginner\">Beginner</option>\r\n              <option value=\"Intermediate\">Intermediate</option>\r\n              <option value=\"Advanced\">Advanced</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"filter-group\">\r\n            <label>Category:</label>\r\n            <select v-model=\"filterCategory\">\r\n              <option value=\"all\">All Categories</option>\r\n              <option v-for=\"category in allCategories\" :value=\"category\" :key=\"category\">\r\n                {{ category }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"filter-group\">\r\n            <label>Sort by:</label>\r\n            <select v-model=\"sortBy\">\r\n              <option value=\"name-asc\">Name (A-Z)</option>\r\n              <option value=\"name-desc\">Name (Z-A)</option>\r\n              <option value=\"level-asc\">Level (Low-High)</option>\r\n              <option value=\"level-desc\">Level (High-Low)</option>\r\n              <option value=\"hours-asc\">Hours (Low-High)</option>\r\n              <option value=\"hours-desc\">Hours (High-Low)</option>\r\n              <option value=\"date-asc\">Date (Old-New)</option>\r\n              <option value=\"date-desc\">Date (New-Old)</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"filteredSkills.length > 0\" class=\"skills-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th @click=\"sortByField('name')\">\r\n                  Skill\r\n                  <span class=\"sort-icon\" v-if=\"sortField === 'name'\">\r\n                    {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                  </span>\r\n                </th>\r\n                <th @click=\"sortByField('category')\">\r\n                  Category\r\n                  <span class=\"sort-icon\" v-if=\"sortField === 'category'\">\r\n                    {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                  </span>\r\n                </th>\r\n                <th @click=\"sortByField('level')\">\r\n                  Level\r\n                  <span class=\"sort-icon\" v-if=\"sortField === 'level'\">\r\n                    {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                  </span>\r\n                </th>\r\n                <th @click=\"sortByField('learningHours')\">\r\n                  Hours\r\n                  <span class=\"sort-icon\" v-if=\"sortField === 'learningHours'\">\r\n                    {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                  </span>\r\n                </th>\r\n                <th @click=\"sortByField('date')\">\r\n                  Last Practiced\r\n                  <span class=\"sort-icon\" v-if=\"sortField === 'date'\">\r\n                    {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n                  </span>\r\n                </th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"skill in filteredSkills\" :key=\"skill.id\">\r\n                <td>\r\n                  <div class=\"skill-name-cell\">\r\n                    <span class=\"skill-name\">{{ skill.name }}</span>\r\n                    <span class=\"skill-category-mobile\">{{ skill.category }}</span>\r\n                  </div>\r\n                </td>\r\n                <td class=\"skill-category\">{{ skill.category }}</td>\r\n                <td>\r\n                  <span :class=\"['skill-level', getLevelClass(skill.level)]\">\r\n                    {{ skill.level }}\r\n                  </span>\r\n                </td>\r\n                <td>{{ skill.learningHours || 0 }}h</td>\r\n                <td>{{ formatDate(skill.date) }}</td>\r\n                <td class=\"actions\">\r\n                  <button @click=\"editSkill(skill.id)\" class=\"action-btn edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button @click=\"confirmDelete(skill.id)\" class=\"action-btn delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        <div v-else class=\"empty-state\">\r\n          <div class=\"empty-icon\">📊</div>\r\n          <h3>No skills found</h3>\r\n          <p>{{ searchTerm ? 'Try a different search term' : 'Add your first skill to get started' }}</p>\r\n          <button v-if=\"!searchTerm\" @click=\"showAddForm = true\" class=\"btn primary-btn\">\r\n            Add Your First Skill\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"currentView === 'cards'\" class=\"skills-cards-container\">\r\n        <div class=\"cards-grid\">\r\n          <div \r\n            v-for=\"skill in filteredSkills\" \r\n            :key=\"skill.id\"\r\n            class=\"skill-card\"\r\n            :class=\"getLevelClass(skill.level)\"\r\n          >\r\n            <div class=\"card-header\">\r\n              <h3>{{ skill.name }}</h3>\r\n              <span class=\"card-category\">{{ skill.category }}</span>\r\n            </div>\r\n            \r\n            <div class=\"card-body\">\r\n              <div class=\"skill-level-badge\">{{ skill.level }}</div>\r\n              \r\n              <div class=\"skill-stats\">\r\n                <div class=\"stat\">\r\n                  <span class=\"stat-icon\">⏱️</span>\r\n                  <span class=\"stat-value\">{{ skill.learningHours || 0 }}h</span>\r\n                </div>\r\n                <div class=\"stat\">\r\n                  <span class=\"stat-icon\">📜</span>\r\n                  <span class=\"stat-value\">{{ skill.certificates || 0 }}</span>\r\n                </div>\r\n                <div class=\"stat\">\r\n                  <span class=\"stat-icon\">💼</span>\r\n                  <span class=\"stat-value\">{{ skill.projects || 0 }}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"last-practiced\">\r\n                Last practiced: {{ formatDate(skill.date) }}\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"card-actions\">\r\n              <button @click=\"editSkill(skill.id)\" class=\"card-btn edit\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </button>\r\n              <button @click=\"confirmDelete(skill.id)\" class=\"card-btn delete\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"currentView === 'list'\" class=\"skills-compact-list\">\r\n        <div \r\n          v-for=\"skill in filteredSkills\" \r\n          :key=\"skill.id\"\r\n          class=\"compact-skill-item\"\r\n          @click=\"toggleSkillDetails(skill.id)\"\r\n        >\r\n          <div class=\"compact-skill-main\">\r\n            <span class=\"skill-name\">{{ skill.name }}</span>\r\n            <span :class=\"['skill-level', getLevelClass(skill.level)]\">\r\n              {{ skill.level }}\r\n            </span>\r\n            <span class=\"skill-hours\">{{ skill.learningHours || 0 }}h</span>\r\n            <span class=\"skill-date\">{{ formatDate(skill.date, true) }}</span>\r\n          </div>\r\n          \r\n          <div v-if=\"expandedSkills.includes(skill.id)\" class=\"compact-skill-details\">\r\n            <div class=\"detail-row\">\r\n              <span>Category:</span>\r\n              <span>{{ skill.category }}</span>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <span>Certificates:</span>\r\n              <span>{{ skill.certificates || 0 }}</span>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <span>Projects:</span>\r\n              <span>{{ skill.projects || 0 }}</span>\r\n            </div>\r\n            <div class=\"detail-actions\">\r\n              <button @click.stop=\"editSkill(skill.id)\" class=\"btn small-btn\">\r\n                Edit\r\n              </button>\r\n              <button @click.stop=\"confirmDelete(skill.id)\" class=\"btn small-btn delete\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"showDeleteModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Confirm Deletion</h3>\r\n          <button @click=\"showDeleteModal = false\" class=\"modal-close\">×</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>Are you sure you want to delete this skill? This action cannot be undone.</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"showDeleteModal = false\" class=\"btn cancel-btn\">Cancel</button>\r\n          <button @click=\"deleteSkill\" class=\"btn delete-btn\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"showCategoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Add New Category</h3>\r\n          <button @click=\"showCategoryModal = false\" class=\"modal-close\">×</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"add-category\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"newCategory\" \r\n              placeholder=\"Enter category name\"\r\n              @keyup.enter=\"addNewCategory\"\r\n            />\r\n            <div v-if=\"categoryError\" class=\"error-message\">{{ categoryError }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"showCategoryModal = false\" class=\"btn cancel-btn\">Cancel</button>\r\n          <button @click=\"addNewCategory\" class=\"btn primary-btn\">Add Category</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { collection, doc, getDocs, addDoc, updateDoc, deleteDoc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { db, auth } from '@/services/firebase';\r\n\r\nexport default {\r\n  name: 'EnhancedSkillsManager',\r\n  data() {\r\n    return {\r\n      skills: [],\r\n      newSkill: {\r\n        name: '',\r\n        category: '',\r\n        learningHours: 0,\r\n        certificates: 0,\r\n        projects: 0,\r\n        level: 'Beginner',\r\n        date: new Date().toISOString().split('T')[0],\r\n      },\r\n      isEditing: false,\r\n      currentSkillId: null,\r\n      searchTerm: '',\r\n      filterLevel: 'all',\r\n      filterCategory: 'all',\r\n      sortBy: 'name-asc',\r\n      sortField: 'name',\r\n      sortDirection: 'asc',\r\n      showDeleteModal: false,\r\n      skillToDelete: null,\r\n      currentUser: null,\r\n      loading: false,\r\n      error: null,\r\n      showCategoryModal: false,\r\n      newCategory: '',\r\n      categoryError: '',\r\n      defaultCategories: [\r\n        'Frontend', 'Backend', 'Database', 'DevOps', \r\n        'Design', 'Mobile', 'Cloud', 'Data Science',\r\n        'AI/ML', 'Cybersecurity', 'Networking', 'Testing'\r\n      ],\r\n      userCategories: [],\r\n      skillSuggestions: [],\r\n      showSuggestions: false,\r\n      popularSkills: [\r\n        'JavaScript', 'Python', 'Java', 'C#', 'PHP', 'TypeScript',\r\n        'React', 'Vue', 'Angular', 'Node.js', 'Express', 'Django',\r\n        'Flask', 'Spring', 'Laravel', 'Ruby on Rails',\r\n        'HTML', 'CSS', 'SASS', 'Bootstrap', 'Tailwind CSS',\r\n        'MySQL', 'PostgreSQL', 'MongoDB', 'Redis', 'Firebase',\r\n        'Docker', 'Kubernetes', 'AWS', 'Azure', 'GCP',\r\n        'Git', 'GitHub', 'GitLab', 'CI/CD', 'Jenkins',\r\n        'REST API', 'GraphQL', 'WebSockets', 'OAuth',\r\n        'Jest', 'Mocha', 'Chai', 'Cypress', 'Selenium'\r\n      ],\r\n      currentView: 'table',\r\n      expandedSkills: [],\r\n      darkMode: false\r\n    };\r\n  },\r\n  computed: {\r\n    allCategories() {\r\n      return [...this.defaultCategories, ...this.userCategories];\r\n    },\r\n    calculatedLevel() {\r\n      return this.calculateSkillLevel(this.newSkill);\r\n    },\r\n    progressPercentage() {\r\n      const hours = Number(this.newSkill.learningHours) || 0;\r\n      const certs = Number(this.newSkill.certificates) || 0;\r\n      const projs = Number(this.newSkill.projects) || 0;\r\n      \r\n      let score = 0;\r\n      \r\n      if (hours < 10) score += 1;\r\n      else if (hours < 50) score += 2;\r\n      else if (hours < 100) score += 3;\r\n      else score += 4;\r\n      \r\n      score += Math.min(certs * 2, 4);\r\n      score += Math.min(projs, 4);\r\n      \r\n      return Math.min((score / 12) * 100, 100);\r\n    },\r\n    totalSkills() {\r\n      return this.skills.length;\r\n    },\r\n    advancedSkills() {\r\n      return this.skills.filter(skill => skill.level === 'Advanced').length;\r\n    },\r\n    totalLearningHours() {\r\n      return this.skills.reduce((total, skill) => total + (skill.learningHours || 0), 0);\r\n    },\r\n    levelDistribution() {\r\n      const distribution = {\r\n        Beginner: 0,\r\n        Intermediate: 0,\r\n        Advanced: 0\r\n      };\r\n      \r\n      this.skills.forEach(skill => {\r\n        distribution[skill.level]++;\r\n      });\r\n      \r\n      return distribution;\r\n    },\r\n    maxLevelCount() {\r\n      return Math.max(...Object.values(this.levelDistribution));\r\n    },\r\n    filteredSkills() {\r\n      let filtered = [...this.skills];\r\n      \r\n      if (this.searchTerm) {\r\n        const term = this.searchTerm.toLowerCase();\r\n        filtered = filtered.filter(skill => \r\n          (skill.name || '').toLowerCase().includes(term) ||\r\n          (skill.category || '').toLowerCase().includes(term)\r\n        );\r\n      }\r\n      \r\n      if (this.filterLevel !== 'all') {\r\n        filtered = filtered.filter(skill => skill.level === this.filterLevel);\r\n      }\r\n      \r\n      if (this.filterCategory !== 'all') {\r\n        filtered = filtered.filter(skill => skill.category === this.filterCategory);\r\n      }\r\n      \r\n      return this.sortSkills(filtered);\r\n    }\r\n  },\r\n  watch: {\r\n    sortBy(newVal) {\r\n      const [field, direction] = newVal.split('-');\r\n      this.sortField = field;\r\n      this.sortDirection = direction;\r\n    },\r\n    'newSkill.category'(newVal) {\r\n      if (newVal === 'custom') {\r\n        this.showCategoryModal = true;\r\n        this.newSkill.category = '';\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleTheme() {\r\n      this.darkMode = !this.darkMode;\r\n      localStorage.setItem('darkMode', this.darkMode);\r\n      if (this.darkMode) {\r\n        document.documentElement.classList.add('dark-mode');\r\n      } else {\r\n        document.documentElement.classList.remove('dark-mode');\r\n      }\r\n    },\r\n    getLevelClass(level) {\r\n      switch (level) {\r\n        case 'Beginner': return 'level-beginner';\r\n        case 'Intermediate': return 'level-intermediate';\r\n        case 'Advanced': return 'level-advanced';\r\n        default: return '';\r\n      }\r\n    },\r\n    \r\n    calculateSkillLevel(skill) {\r\n      const hours = Number(skill.learningHours) || 0;\r\n      const certs = Number(skill.certificates) || 0;\r\n      const projs = Number(skill.projects) || 0;\r\n      \r\n      let score = 0;\r\n      \r\n      if (hours < 10) score += 1;\r\n      else if (hours < 50) score += 2;\r\n      else if (hours < 100) score += 3;\r\n      else score += 4;\r\n      \r\n      score += Math.min(certs * 2, 4);\r\n      score += Math.min(projs, 4);\r\n      \r\n      if (score <= 3) return 'Beginner';\r\n      else if (score <= 8) return 'Intermediate';\r\n      else return 'Advanced';\r\n    },\r\n    \r\n    async loadSkills() {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        if (!this.currentUser) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const skillsCol = collection(db, 'users', this.currentUser.uid, 'skills');\r\n        const snapshot = await getDocs(skillsCol);\r\n        this.skills = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error loading skills: \", error);\r\n        this.error = `Loading error: ${error.message}`;\r\n        this.skills = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async loadUserCategories() {\r\n      if (!this.currentUser) return;\r\n      \r\n      try {\r\n        const userDocRef = doc(db, 'users', this.currentUser.uid);\r\n        const userDoc = await getDoc(userDocRef);\r\n        \r\n        if (userDoc.exists()) {\r\n          this.userCategories = userDoc.data().categories || [];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading categories: \", error);\r\n      }\r\n    },\r\n    \r\n    async handleAddSkill() {\r\n      this.error = null;\r\n      \r\n      try {\r\n        if (!this.currentUser) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const name = this.newSkill.name.trim();\r\n        if (!name) {\r\n          throw new Error('Please enter skill name');\r\n        }\r\n\r\n        if (!this.newSkill.category) {\r\n          throw new Error('Please select a category');\r\n        }\r\n\r\n        const skillData = {\r\n          ...this.newSkill,\r\n          name: name,\r\n          level: this.calculateSkillLevel(this.newSkill),\r\n          updatedAt: serverTimestamp(),\r\n        };\r\n\r\n        const userDocRef = doc(db, 'users', this.currentUser.uid);\r\n        const userDoc = await getDoc(userDocRef);\r\n        \r\n        if (!userDoc.exists()) {\r\n          await setDoc(userDocRef, { \r\n            email: this.currentUser.email,\r\n            createdAt: serverTimestamp(),\r\n            categories: [...this.defaultCategories]\r\n          });\r\n        }\r\n        \r\n        if (this.isEditing) {\r\n          if (!this.currentSkillId) {\r\n            throw new Error('Missing skill ID for update');\r\n          }\r\n          \r\n          const skillDocRef = doc(db, 'users', this.currentUser.uid, 'skills', this.currentSkillId);\r\n          await updateDoc(skillDocRef, skillData);\r\n          \r\n          const index = this.skills.findIndex(s => s.id === this.currentSkillId);\r\n          if (index !== -1) {\r\n            this.skills[index] = {\r\n              id: this.currentSkillId,\r\n              ...skillData\r\n            };\r\n          }\r\n          \r\n          this.cancelEdit();\r\n        } else {\r\n          const exists = this.skills.some(\r\n            skill => skill.name.toLowerCase() === name.toLowerCase()\r\n          );\r\n          if (exists) {\r\n            throw new Error('This skill already exists');\r\n          }\r\n\r\n          const skillsColRef = collection(db, 'users', this.currentUser.uid, 'skills');\r\n          const docRef = await addDoc(skillsColRef, {\r\n            ...skillData,\r\n            createdAt: serverTimestamp()\r\n          });\r\n          \r\n          this.skills.push({\r\n            id: docRef.id,\r\n            ...skillData\r\n          });\r\n        }\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error(\"Error saving skill: \", error);\r\n        this.error = error.message || \"An error occurred while saving\";\r\n        alert(this.error);\r\n      }\r\n    },\r\n    \r\n    editSkill(skillId) {\r\n      const skill = this.skills.find(s => s.id === skillId);\r\n      if (skill) {\r\n        this.newSkill = { \r\n          name: skill.name,\r\n          category: skill.category || '',\r\n          learningHours: skill.learningHours,\r\n          certificates: skill.certificates,\r\n          projects: skill.projects,\r\n          date: skill.date || new Date().toISOString().split('T')[0],\r\n        };\r\n        this.isEditing = true;\r\n        this.currentSkillId = skillId;\r\n        this.$nextTick(() => {\r\n          document.querySelector('.skills-form').scrollIntoView({ behavior: 'smooth' });\r\n        });\r\n      }\r\n    },\r\n    \r\n    cancelEdit() {\r\n      this.isEditing = false;\r\n      this.currentSkillId = null;\r\n      this.resetForm();\r\n    },\r\n    \r\n    resetForm() {\r\n      this.newSkill = {\r\n        name: '',\r\n        category: '',\r\n        learningHours: 0,\r\n        certificates: 0,\r\n        projects: 0,\r\n        level: 'Beginner',\r\n        date: new Date().toISOString().split('T')[0],\r\n      };\r\n      this.error = null;\r\n      this.showSuggestions = false;\r\n    },\r\n    \r\n    confirmDelete(skillId) {\r\n      this.skillToDelete = skillId;\r\n      this.showDeleteModal = true;\r\n    },\r\n    \r\n    async deleteSkill() {\r\n      if (!this.skillToDelete) return;\r\n      \r\n      this.error = null;\r\n      try {\r\n        if (!this.currentUser) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        await deleteDoc(doc(db, 'users', this.currentUser.uid, 'skills', this.skillToDelete));\r\n        this.skills = this.skills.filter(skill => skill.id !== this.skillToDelete);\r\n\r\n        if (this.isEditing && this.currentSkillId === this.skillToDelete) {\r\n          this.cancelEdit();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting skill: \", error);\r\n        this.error = error.message || \"An error occurred while deleting\";\r\n        alert(this.error);\r\n      } finally {\r\n        this.showDeleteModal = false;\r\n        this.skillToDelete = null;\r\n      }\r\n    },\r\n    \r\n    formatDate(dateString, short = false) {\r\n      if (!dateString) return '';\r\n      \r\n      try {\r\n        const date = new Date(dateString);\r\n        if (short) {\r\n          return date.toLocaleDateString('en-US', { \r\n            month: 'short', \r\n            day: 'numeric'\r\n          });\r\n        }\r\n        return date.toLocaleDateString('en-US', { \r\n          year: 'numeric', \r\n          month: 'short', \r\n          day: 'numeric'\r\n        });\r\n      } catch (e) {\r\n        return dateString;\r\n      }\r\n    },\r\n    \r\n    sortSkills(skills) {\r\n      return [...skills].sort((a, b) => {\r\n        let compareA, compareB;\r\n        switch (this.sortField) {\r\n          case 'name':\r\n            compareA = (a.name || '').toLowerCase();\r\n            compareB = (b.name || '').toLowerCase();\r\n            break;\r\n          case 'category':\r\n            compareA = (a.category || '').toLowerCase();\r\n            compareB = (b.category || '').toLowerCase();\r\n            break;\r\n          case 'level':\r\n            const levelOrder = { 'Beginner': 1, 'Intermediate': 2, 'Advanced': 3 };\r\n            compareA = levelOrder[a.level];\r\n            compareB = levelOrder[b.level];\r\n            break;\r\n          case 'learningHours':\r\n            compareA = a.learningHours || 0;\r\n            compareB = b.learningHours || 0;\r\n            break;\r\n          case 'certificates':\r\n            compareA = a.certificates || 0;\r\n            compareB = b.certificates || 0;\r\n            break;\r\n          case 'projects':\r\n            compareA = a.projects || 0;\r\n            compareB = b.projects || 0;\r\n            break;\r\n          case 'date':\r\n            compareA = new Date(a.date || 0);\r\n            compareB = new Date(b.date || 0);\r\n            break;\r\n          default:\r\n            compareA = a.name.toLowerCase();\r\n            compareB = b.name.toLowerCase();\r\n        }\r\n        \r\n        if (compareA < compareB) {\r\n          return this.sortDirection === 'asc' ? -1 : 1;\r\n        }\r\n        if (compareA > compareB) {\r\n          return this.sortDirection === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    },\r\n    \r\n    sortByField(field) {\r\n      if (this.sortField === field) {\r\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n      } else {\r\n        this.sortField = field;\r\n        this.sortDirection = 'asc';\r\n      }\r\n      this.sortBy = `${field}-${this.sortDirection}`;\r\n    },\r\n    \r\n    searchSkillSuggestions() {\r\n      if (!this.newSkill.name) {\r\n        this.skillSuggestions = [];\r\n        return;\r\n      }\r\n      \r\n      const term = this.newSkill.name.toLowerCase();\r\n      this.skillSuggestions = this.popularSkills\r\n        .filter(skill => skill.toLowerCase().includes(term))\r\n        .slice(0, 5);\r\n    },\r\n    \r\n    selectSuggestion(suggestion) {\r\n      this.newSkill.name = suggestion;\r\n      this.showSuggestions = false;\r\n    },\r\n    \r\n    async addNewCategory() {\r\n      this.categoryError = '';\r\n      const category = this.newCategory.trim();\r\n      \r\n      if (!category) {\r\n        this.categoryError = 'Please enter a category name';\r\n        return;\r\n      }\r\n      \r\n      if (this.allCategories.includes(category)) {\r\n        this.categoryError = 'This category already exists';\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.userCategories.push(category);\r\n        this.newCategory = '';\r\n        this.showCategoryModal = false;\r\n        \r\n        if (this.currentUser) {\r\n          const userDocRef = doc(db, 'users', this.currentUser.uid);\r\n          await updateDoc(userDocRef, {\r\n            categories: [...this.userCategories]\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error saving categories: \", error);\r\n        this.categoryError = \"Failed to save category\";\r\n      }\r\n    },\r\n    \r\n    toggleSkillDetails(skillId) {\r\n      const index = this.expandedSkills.indexOf(skillId);\r\n      if (index === -1) {\r\n        this.expandedSkills.push(skillId);\r\n      } else {\r\n        this.expandedSkills.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Initialize dark mode from localStorage\r\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\r\n    this.darkMode = savedDarkMode;\r\n    if (this.darkMode) {\r\n      document.documentElement.classList.add('dark-mode');\r\n    }\r\n\r\n    this.unsubscribeAuth = onAuthStateChanged(auth, (user) => {\r\n      this.currentUser = user;\r\n      if (user) {\r\n        this.loadSkills();\r\n        this.loadUserCategories();\r\n      } else {\r\n        this.skills = [];\r\n        this.userCategories = [];\r\n      }\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    if (this.unsubscribeAuth) {\r\n      this.unsubscribeAuth();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Base Styles */\r\n.skills-manager {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  color: #2c3e50;\r\n  background-color: #f8fafc;\r\n  min-height: 100vh;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n/* Dark Mode Styles */\r\n.skills-manager.dark-mode {\r\n  background-color: #0f172a;\r\n  color: #e2e8f0;\r\n}\r\n\r\n.dark-mode .skills-form,\r\n.dark-mode .skills-visualization,\r\n.dark-mode .skills-table,\r\n.dark-mode .empty-state,\r\n.dark-mode .list-controls,\r\n.dark-mode .modal-container {\r\n  background-color: #1e293b;\r\n  color: #e2e8f0;\r\n  border-color: #334155;\r\n}\r\n\r\n.dark-mode .form-group input,\r\n.dark-mode .form-group select,\r\n.dark-mode .search-container input,\r\n.dark-mode .filter-group select {\r\n  background-color: #334155;\r\n  color: #e2e8f0;\r\n  border-color: #475569;\r\n}\r\n\r\n.dark-mode .skill-preview {\r\n  background-color: #1e293b;\r\n  border-color: #334155;\r\n}\r\n\r\n.dark-mode .progress-container {\r\n  background-color: #334155;\r\n}\r\n\r\n.dark-mode .progress-text {\r\n  color: #e2e8f0;\r\n}\r\n\r\n.dark-mode .skill-name,\r\n.dark-mode .skill-category,\r\n.dark-mode .skill-category-mobile,\r\n.dark-mode .empty-state h3 {\r\n  color: #e2e8f0;\r\n}\r\n\r\n.dark-mode .empty-state p,\r\n.dark-mode .skill-category-mobile,\r\n.dark-mode .card-category {\r\n  color: #94a3b8;\r\n}\r\n\r\n.dark-mode .skill-card {\r\n  background-color: #1e293b;\r\n  border-color: #334155;\r\n}\r\n\r\n.dark-mode .header-section {\r\n  background: linear-gradient(135deg, #1e3a8a, #0c4a6e);\r\n}\r\n\r\n.dark-mode .stat-card {\r\n  background: rgba(30, 58, 138, 0.3);\r\n}\r\n\r\n.dark-mode .return-to-dash {\r\n  color: rgba(248, 250, 252, 0.8);\r\n}\r\n\r\n/* Header Section */\r\n.header-section {\r\n  background: linear-gradient(135deg, #3a7bd5, #00d2ff);\r\n  color: white;\r\n  padding: 2rem 0;\r\n  margin-bottom: 2rem;\r\n  border-radius: 0 0 12px 12px;\r\n  box-shadow: 0 4px 12px rgba(58, 123, 213, 0.2);\r\n}\r\n\r\n\r\n  \r\n  .header-content {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    gap: 2rem;\r\n  }\r\n  \r\n  \r\n  .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .logo img {\r\n    height: 150px;\r\n    width: 150px;\r\n    \r\n    object-fit: cover;\r\n\r\n  }\r\n  .logo h1 {\r\n    margin: 0;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n  \r\n  .header-stats {\r\n    display: flex;\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .stat-card {\r\n    background: rgba(255, 255, 255, 0.15);\r\n    padding: 1rem 1.5rem;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    min-width: 120px;\r\n    backdrop-filter: blur(5px);\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .stat-card:hover {\r\n    transform: translateY(-3px);\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 1.8rem;\r\n    font-weight: 700;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 0.9rem;\r\n    opacity: 0.9;\r\n  }\r\n  \r\n  /* Skills Container */\r\n  .skills-container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .skills-form-container {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 2rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  @media (max-width: 1024px) {\r\n    .skills-form-container {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n  \r\n  /* Skills Form */\r\n  .skills-form {\r\n    background: white;\r\n    padding: 2rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .skills-form h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1.5rem;\r\n    color: #2c3e50;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .form-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .form-group label {\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n    font-size: 0.95rem;\r\n  }\r\n  \r\n  .form-group input,\r\n  .form-group select {\r\n    padding: 0.75rem 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  .form-group input:focus,\r\n  .form-group select:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  .input-with-icon {\r\n    position: relative;\r\n  }\r\n  \r\n  .input-with-icon .input-icon {\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    font-size: 1rem;\r\n    opacity: 0.6;\r\n  }\r\n  \r\n  /* Autocomplete */\r\n  .autocomplete-container {\r\n    position: relative;\r\n  }\r\n  \r\n  .suggestions-dropdown {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    background: white;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 0 0 8px 8px;\r\n    z-index: 10;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .suggestion-item {\r\n    padding: 0.75rem 1rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .suggestion-item:hover {\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  /* Skill Preview */\r\n  .skill-preview {\r\n    background-color: #f8fafc;\r\n    padding: 1.5rem;\r\n    border-radius: 8px;\r\n    margin-bottom: 1.5rem;\r\n    border: 1px dashed #e2e8f0;\r\n  }\r\n  \r\n  .preview-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .skill-level {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 50px;\r\n    font-size: 0.9rem;\r\n    font-weight: 600;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .level-beginner {\r\n    background-color: rgba(52, 152, 219, 0.15);\r\n    color: #2980b9;\r\n  }\r\n  \r\n  .level-intermediate {\r\n    background-color: rgba(46, 204, 113, 0.15);\r\n    color: #27ae60;\r\n  }\r\n  \r\n  .level-advanced {\r\n    background-color: rgba(155, 89, 182, 0.15);\r\n    color: #8e44ad;\r\n  }\r\n  \r\n  .progress-container {\r\n    height: 8px;\r\n    background-color: #e2e8f0;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .progress-bar {\r\n    height: 100%;\r\n    background: linear-gradient(90deg, #3a7bd5, #00d2ff);\r\n    border-radius: 4px;\r\n    transition: width 0.5s ease;\r\n  }\r\n  \r\n  /* Form Actions */\r\n  .form-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .btn {\r\n    padding: 0.75rem 1.5rem;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .btn:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .primary-btn {\r\n    background: linear-gradient(135deg, #3a7bd5, #00d2ff);\r\n    color: white;\r\n  }\r\n  \r\n  .primary-btn:hover {\r\n    background: linear-gradient(135deg, #2a6bc4, #00c2f0);\r\n  }\r\n  \r\n  .cancel-btn {\r\n    background-color: #e2e8f0;\r\n    color: #4a5568;\r\n  }\r\n  \r\n  .cancel-btn:hover {\r\n    background-color: #cbd5e0;\r\n  }\r\n  \r\n  /* Skills Visualization */\r\n  .skills-visualization {\r\n    background: white;\r\n    padding: 2rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .skills-visualization h3 {\r\n    margin-top: 0;\r\n    margin-bottom: 1.5rem;\r\n    color: #2c3e50;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .chart-container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 1.5rem;\r\n    height: 200px;\r\n  }\r\n  \r\n  .chart-legend {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .legend-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .legend-color {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .legend-color.level-beginner {\r\n    background-color: #3498db;\r\n  }\r\n  \r\n  .legend-color.level-intermediate {\r\n    background-color: #2ecc71;\r\n  }\r\n  \r\n  .legend-color.level-advanced {\r\n    background-color: #9b59b6;\r\n  }\r\n  \r\n  .chart {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 1rem;\r\n    height: 100%;\r\n  }\r\n  \r\n  .chart-segment {\r\n    flex: 1;\r\n    border-radius: 4px 4px 0 0;\r\n    transition: height 0.5s ease;\r\n    position: relative;\r\n  }\r\n  \r\n  .chart-segment.level-beginner {\r\n    background-color: #3498db;\r\n  }\r\n  \r\n  .chart-segment.level-intermediate {\r\n    background-color: #2ecc71;\r\n  }\r\n  \r\n  .chart-segment.level-advanced {\r\n    background-color: #9b59b6;\r\n  }\r\n  \r\n  /* View Toggle */\r\n  .view-toggle {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n    margin: 1.5rem 0;\r\n  }\r\n  \r\n  .view-btn {\r\n    padding: 0.5rem 1rem;\r\n    background-color: #e2e8f0;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .view-btn.active {\r\n    background-color: #3a7bd5;\r\n    color: white;\r\n  }\r\n  \r\n  /* List Controls */\r\n  .list-controls {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    flex: 1;\r\n    min-width: 250px;\r\n  }\r\n  \r\n  .search-container input {\r\n    width: 100%;\r\n    padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  .search-container input:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 1rem;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #a0aec0;\r\n  }\r\n  \r\n  .filter-group {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .filter-group label {\r\n    font-weight: 600;\r\n    font-size: 0.95rem;\r\n    color: #4a5568;\r\n  }\r\n  \r\n  .filter-group select {\r\n    padding: 0.75rem 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    transition: all 0.3s ease;\r\n    background-color: #f8fafc;\r\n    min-width: 150px;\r\n  }\r\n  \r\n  .filter-group select:focus {\r\n    outline: none;\r\n    border-color: #3a7bd5;\r\n    box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);\r\n  }\r\n  \r\n  /* Skills Table */\r\n  .skills-table {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .skills-table table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .skills-table th,\r\n  .skills-table td {\r\n    padding: 1rem 1.25rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .skills-table th {\r\n    text-align: left;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .skills-table th:hover {\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  .skills-table tr:last-child td {\r\n    border-bottom: none;\r\n  }\r\n  \r\n  .skills-table tr:hover td {\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  .sort-icon {\r\n    margin-left: 0.5rem;\r\n  }\r\n  \r\n  .skill-name-cell {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .skill-category-mobile {\r\n    display: none;\r\n    font-size: 0.8rem;\r\n    color: #718096;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  /* Actions */\r\n  .actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .action-btn {\r\n    padding: 0.5rem 0.75rem;\r\n    border: none;\r\n    border-radius: 6px;\r\n    font-size: 0.85rem;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .action-btn:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .edit-btn {\r\n    background-color: rgba(52, 152, 219, 0.15);\r\n    color: #2980b9;\r\n  }\r\n  \r\n  .edit-btn:hover {\r\n    background-color: rgba(52, 152, 219, 0.25);\r\n  }\r\n  \r\n  .delete-btn {\r\n    background-color: rgba(231, 76, 60, 0.15);\r\n    color: #c0392b;\r\n  }\r\n  \r\n  .delete-btn:hover {\r\n    background-color: rgba(231, 76, 60, 0.25);\r\n  }\r\n  \r\n  /* Empty State */\r\n  .empty-state {\r\n    background: white;\r\n    padding: 3rem 2rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n    text-align: center;\r\n  }\r\n  \r\n  .empty-icon {\r\n    font-size: 3rem;\r\n    margin-bottom: 1rem;\r\n    opacity: 0.7;\r\n  }\r\n  \r\n  .empty-state h3 {\r\n    margin: 0 0 0.5rem;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .empty-state p {\r\n    margin: 0 0 1.5rem;\r\n    color: #718096;\r\n  }\r\n  \r\n  /* Card View */\r\n  .skills-cards-container {\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .cards-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .skill-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .skill-card.level-beginner {\r\n    border-top: 4px solid #3498db;\r\n  }\r\n  \r\n  .skill-card.level-intermediate {\r\n    border-top: 4px solid #2ecc71;\r\n  }\r\n  \r\n  .skill-card.level-advanced {\r\n    border-top: 4px solid #9b59b6;\r\n  }\r\n  \r\n  .card-header {\r\n    padding: 1.25rem 1.25rem 0.75rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .card-header h3 {\r\n    margin: 0;\r\n    font-size: 1.25rem;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .card-category {\r\n    font-size: 0.85rem;\r\n    color: #718096;\r\n    display: block;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 1.25rem;\r\n    flex: 1;\r\n  }\r\n  \r\n  .skill-level-badge {\r\n    display: inline-block;\r\n    padding: 0.25rem 0.75rem;\r\n    border-radius: 50px;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .skill-card.level-beginner .skill-level-badge {\r\n    background-color: rgba(52, 152, 219, 0.15);\r\n    color: #2980b9;\r\n  }\r\n  \r\n  .skill-card.level-intermediate .skill-level-badge {\r\n    background-color: rgba(46, 204, 113, 0.15);\r\n    color: #27ae60;\r\n  }\r\n  \r\n  .skill-card.level-advanced .skill-level-badge {\r\n    background-color: rgba(155, 89, 182, 0.15);\r\n    color: #8e44ad;\r\n  }\r\n  \r\n  .skill-stats {\r\n    display: flex;\r\n    gap: 1rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .stat {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .stat-icon {\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-weight: 600;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .last-practiced {\r\n    font-size: 0.85rem;\r\n    color: #718096;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .card-actions {\r\n    display: flex;\r\n    border-top: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .card-btn {\r\n    flex: 1;\r\n    padding: 0.75rem;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .card-btn.edit {\r\n    color: #3498db;\r\n  }\r\n  \r\n  .card-btn.delete {\r\n    color: #e74c3c;\r\n  }\r\n  \r\n  .card-btn:hover {\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  /* Compact List View */\r\n  .skills-compact-list {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    border: 1px solid #e0ecff;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .compact-skill-item {\r\n    padding: 1rem 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .compact-skill-item:last-child {\r\n    border-bottom: none;\r\n  }\r\n  \r\n  .compact-skill-item:hover {\r\n    background-color: #f8fafc;\r\n  }\r\n  \r\n  .compact-skill-main {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .skill-name {\r\n    flex: 1;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .skill-hours {\r\n    min-width: 60px;\r\n    text-align: right;\r\n  }\r\n  \r\n  .skill-date {\r\n    min-width: 80px;\r\n    text-align: right;\r\n    font-size: 0.85rem;\r\n    color: #718096;\r\n  }\r\n  \r\n  .compact-skill-details {\r\n    margin-top: 1rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px dashed #e2e8f0;\r\n  }\r\n  \r\n  .detail-row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .detail-row span:first-child {\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n  }\r\n  \r\n  .detail-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .small-btn {\r\n    padding: 0.5rem 0.75rem;\r\n    font-size: 0.85rem;\r\n  }\r\n  \r\n  /* Modal */\r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .modal-container {\r\n    background: white;\r\n    border-radius: 12px;\r\n    width: 100%;\r\n    max-width: 500px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .modal-header {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .modal-header h3 {\r\n    margin: 0;\r\n    font-size: 1.25rem;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .modal-close {\r\n    background: none;\r\n    border: none;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    color: #718096;\r\n    padding: 0 0.5rem;\r\n  }\r\n  \r\n  .modal-close:hover {\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .modal-body {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .modal-footer {\r\n    padding: 1.5rem;\r\n    border-top: 1px solid #e2e8f0;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .delete-btn {\r\n    background-color: rgba(231, 76, 60, 0.9);\r\n    color: white;\r\n  }\r\n  \r\n  .delete-btn:hover {\r\n    background-color: rgba(231, 76, 60, 1);\r\n  }\r\n  \r\n  /* Add Category Modal */\r\n  .add-category {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .add-category input {\r\n    padding: 0.75rem 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .error-message {\r\n    color: #e74c3c;\r\n    font-size: 0.9rem;\r\n    margin-top: 0.5rem;\r\n  }\r\n  \r\n  /* Responsive Adjustments */\r\n  @media (max-width: 768px) {\r\n    .header-content {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .header-stats {\r\n      width: 100%;\r\n      justify-content: space-between;\r\n    }\r\n    \r\n    .stat-card {\r\n      flex: 1;\r\n      min-width: auto;\r\n    }\r\n    \r\n    .list-controls {\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .filter-group {\r\n      width: 100%;\r\n    }\r\n    \r\n    .filter-group select {\r\n      flex: 1;\r\n    }\r\n    \r\n    .skills-table th, \r\n    .skills-table td {\r\n      padding: 0.75rem;\r\n    }\r\n    \r\n    .skill-category {\r\n      display: none;\r\n    }\r\n    \r\n    .skill-category-mobile {\r\n      display: inline;\r\n    }\r\n    \r\n    .actions {\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .compact-skill-main {\r\n      flex-wrap: wrap;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .skill-name {\r\n      flex: 100%;\r\n    }\r\n    \r\n    .skill-hours, .skill-date {\r\n      text-align: left;\r\n      min-width: auto;\r\n    }\r\n  }\r\n  .return-to-dash {\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-top: 0.25rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}