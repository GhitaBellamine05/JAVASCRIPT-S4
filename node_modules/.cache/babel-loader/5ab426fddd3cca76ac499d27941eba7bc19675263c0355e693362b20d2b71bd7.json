{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/JAVASCRIPT-S4/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/JAVASCRIPT-S4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/home.vue';\nimport { auth } from '@/services/firebase'; // Import your Firebase auth instance\n\nvar routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/skills',\n  name: 'skills',\n  component: function component() {\n    return import('../views/skills2.vue');\n  }\n}, {\n  path: '/Activities',\n  name: 'Activities',\n  component: function component() {\n    return import('../views/act.vue');\n  }\n}, {\n  path: '/timeline',\n  name: 'Timelines',\n  component: function component() {\n    return import('../views/time.vue');\n  }\n}, {\n  path: '/projects',\n  name: 'projects',\n  component: function component() {\n    return import('../views/p.vue');\n  }\n}, {\n  path: '/objectives',\n  name: 'objectives',\n  component: function component() {\n    return import('../views/objectives.vue');\n  }\n}, {\n  path: '/dash',\n  name: 'dash',\n  component: function component() {\n    return import('../views/interactive.vue');\n  }\n}, {\n  path: '/community/projects',\n  name: 'CommunityProjects',\n  component: function component() {\n    return import('../views/communityProjects.vue');\n  }\n}, {\n  path: '/community/projects/:id',\n  name: 'ProjectDetails',\n  component: function component() {\n    return import('../views/ProjectsDetails.vue');\n  },\n  props: true // This allows passing route params as props\n}, {\n  path: '/community',\n  name: 'community',\n  component: function component() {\n    return import('../views/community.vue');\n  }\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: function component() {\n    return import('../views/profile.vue');\n  }\n}, {\n  path: '/forgot',\n  name: 'Forgot',\n  component: function component() {\n    return import('../views/forgetPage.vue');\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach(/*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(to, from, next) {\n    var requiresAuth, currentUser, user;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          requiresAuth = to.matched.some(function (record) {\n            return record.meta.requiresAuth;\n          });\n          currentUser = auth.currentUser; // Get current user from Firebase\n          if (!(requiresAuth && !currentUser)) {\n            _context.next = 6;\n            break;\n          }\n          // Redirect to login if route requires auth and user is not logged in\n          next('/');\n          _context.next = 14;\n          break;\n        case 6:\n          if (!to.meta.requiredRole) {\n            _context.next = 13;\n            break;\n          }\n          _context.next = 9;\n          return getCurrentUserData();\n        case 9:\n          user = _context.sent;\n          // You need to implement this\n          if (user.role !== to.meta.requiredRole) {\n            next('/'); // or to a 'not authorized' page\n          } else {\n            next();\n          }\n          _context.next = 14;\n          break;\n        case 13:\n          next();\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","auth","routes","path","name","component","props","router","history","process","env","BASE_URL","beforeEach","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","to","from","next","requiresAuth","currentUser","user","wrap","_callee$","_context","prev","matched","some","record","meta","requiredRole","getCurrentUserData","sent","role","stop","_x","_x2","_x3","apply","arguments"],"sources":["/workspaces/JAVASCRIPT-S4/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/home.vue'\nimport { auth } from '@/services/firebase' // Import your Firebase auth instance\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n\n  },\n  {\n    path: '/skills',\n    name: 'skills',\n    component: () => import('../views/skills2.vue'),\n    \n  },\n  {\n    path: '/Activities',\n    name: 'Activities',\n    component: () => import('../views/act.vue'),\n    \n  },\n  {\n    path: '/timeline',\n    name: 'Timelines',\n    component: () => import('../views/time.vue'),\n    \n  },\n  {\n    path: '/projects',\n    name: 'projects',\n    component: () => import('../views/p.vue'),\n    \n  },\n  {\n    path: '/objectives',  \n    name: 'objectives',\n    component: () => import('../views/objectives.vue'),\n   \n  },\n  {\n    path: '/dash',\n    name: 'dash',\n    component: () => import('../views/interactive.vue'),\n    \n  },\n  {\n    path: '/community/projects',\n    name: 'CommunityProjects',\n    component: ()=> import('../views/communityProjects.vue')\n  },\n  {\n    path: '/community/projects/:id',\n    name: 'ProjectDetails',\n    component: () => import('../views/ProjectsDetails.vue'),\n    props: true // This allows passing route params as props\n  },\n  {\n    path: '/community',\n    name: 'community',\n    component: () => import('../views/community.vue'),\n\n  }, \n  { \n    path: '/profile',\n    name: 'profile',\n    component: () => import('../views/profile.vue'),\n   \n  }, \n  { \n    path: '/forgot',\n    name: 'Forgot',\n    component: () => import('../views/forgetPage.vue'),\n   \n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Navigation guard to check authentication\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const currentUser = auth.currentUser // Get current user from Firebase\n  \n  if (requiresAuth && !currentUser) {\n    // Redirect to login if route requires auth and user is not logged in\n    next('/')\n  } else if (to.meta.requiredRole) {\n    // Additional role check (example implementation)\n    const user = await getCurrentUserData() // You need to implement this\n    if (user.role !== to.meta.requiredRole) {\n      next('/') // or to a 'not authorized' page\n    } else {\n      next()\n    }\n  } else {\n    next()\n  }\n})\n\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}