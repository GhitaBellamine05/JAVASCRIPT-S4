{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/home.vue';\nimport { auth } from '@/services/firebase'; // Import your Firebase auth instance\n\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/skills',\n  name: 'skills',\n  component: () => import('../views/skills2.vue')\n}, {\n  path: '/Activities',\n  name: 'Activities',\n  component: () => import('../views/act.vue')\n}, {\n  path: '/timeline',\n  name: 'Timelines',\n  component: () => import('../views/time.vue')\n}, {\n  path: '/projects',\n  name: 'projects',\n  component: () => import('../views/p.vue')\n}, {\n  path: '/objectives',\n  name: 'objectives',\n  component: () => import('../views/objectives.vue')\n}, {\n  path: '/dash',\n  name: 'dash',\n  component: () => import('../views/interactive.vue')\n}, {\n  path: '/community/projects',\n  name: 'CommunityProjects',\n  component: () => import('../views/communityProjects.vue')\n}, {\n  path: '/community/projects/:id',\n  name: 'ProjectDetails',\n  component: () => import('../views/ProjectsDetails.vue'),\n  props: true // This allows passing route params as props\n}, {\n  path: '/community',\n  name: 'community',\n  component: () => import('../views/community.vue')\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: () => import('../views/profile.vue')\n}, {\n  path: '/forgot',\n  name: 'Forgot',\n  component: () => import('../views/forgetPage.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const currentUser = auth.currentUser; // Get current user from Firebase\n\n  if (requiresAuth && !currentUser) {\n    // Redirect to login if route requires auth and user is not logged in\n    next('/');\n  } else if (to.meta.requiredRole) {\n    // Additional role check (example implementation)\n    const user = await getCurrentUserData(); // You need to implement this\n    if (user.role !== to.meta.requiredRole) {\n      next('/'); // or to a 'not authorized' page\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","auth","routes","path","name","component","props","router","history","process","env","BASE_URL","beforeEach","to","from","next","requiresAuth","matched","some","record","meta","currentUser","requiredRole","user","getCurrentUserData","role"],"sources":["/workspaces/JAVASCRIPT-S4/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/home.vue'\nimport { auth } from '@/services/firebase' // Import your Firebase auth instance\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n\n  },\n  {\n    path: '/skills',\n    name: 'skills',\n    component: () => import('../views/skills2.vue'),\n    \n  },\n  {\n    path: '/Activities',\n    name: 'Activities',\n    component: () => import('../views/act.vue'),\n    \n  },\n  {\n    path: '/timeline',\n    name: 'Timelines',\n    component: () => import('../views/time.vue'),\n    \n  },\n  {\n    path: '/projects',\n    name: 'projects',\n    component: () => import('../views/p.vue'),\n    \n  },\n  {\n    path: '/objectives',  \n    name: 'objectives',\n    component: () => import('../views/objectives.vue'),\n   \n  },\n  {\n    path: '/dash',\n    name: 'dash',\n    component: () => import('../views/interactive.vue'),\n    \n  },\n  {\n    path: '/community/projects',\n    name: 'CommunityProjects',\n    component: ()=> import('../views/communityProjects.vue')\n  },\n  {\n    path: '/community/projects/:id',\n    name: 'ProjectDetails',\n    component: () => import('../views/ProjectsDetails.vue'),\n    props: true // This allows passing route params as props\n  },\n  {\n    path: '/community',\n    name: 'community',\n    component: () => import('../views/community.vue'),\n\n  }, \n  { \n    path: '/profile',\n    name: 'profile',\n    component: () => import('../views/profile.vue'),\n   \n  }, \n  { \n    path: '/forgot',\n    name: 'Forgot',\n    component: () => import('../views/forgetPage.vue'),\n   \n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Navigation guard to check authentication\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const currentUser = auth.currentUser // Get current user from Firebase\n  \n  if (requiresAuth && !currentUser) {\n    // Redirect to login if route requires auth and user is not logged in\n    next('/')\n  } else if (to.meta.requiredRole) {\n    // Additional role check (example implementation)\n    const user = await getCurrentUserData() // You need to implement this\n    if (user.role !== to.meta.requiredRole) {\n      next('/') // or to a 'not authorized' page\n    } else {\n      next()\n    }\n  } else {\n    next()\n  }\n})\n\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}